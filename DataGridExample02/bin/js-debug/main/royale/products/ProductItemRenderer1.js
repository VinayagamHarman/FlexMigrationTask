/**
 * Generated by Apache Royale Compiler from main/royale/products/ProductItemRenderer1.as
 * main.royale.products.ProductItemRenderer1
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('main.royale.products.ProductItemRenderer1');
/* Royale Dependency List: org.apache.royale.html.Image*/

goog.require('org.apache.royale.html.supportClasses.DataItemRenderer');



/**
 * @constructor
 * @extends {org.apache.royale.html.supportClasses.DataItemRenderer}
 */
main.royale.products.ProductItemRenderer1 = function() {
  main.royale.products.ProductItemRenderer1.base(this, 'constructor');
};
goog.inherits(main.royale.products.ProductItemRenderer1, org.apache.royale.html.supportClasses.DataItemRenderer);


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('main.royale.products.ProductItemRenderer1', main.royale.products.ProductItemRenderer1);


/**
 * @private
 * @type {org.apache.royale.html.Image}
 */
main.royale.products.ProductItemRenderer1.prototype.main_royale_products_ProductItemRenderer1_image1 = null;


/**
 * @export
 * @override
 */
main.royale.products.ProductItemRenderer1.prototype.addedToParent = function() {
  main.royale.products.ProductItemRenderer1.superClass_.addedToParent.apply(this);
  this.main_royale_products_ProductItemRenderer1_image1 = new org.apache.royale.html.Image();
  this.addElement(this.main_royale_products_ProductItemRenderer1_image1);
};


/**
 * @export
 * @override
 */
main.royale.products.ProductItemRenderer1.prototype.adjustSize = function() {
  var /** @type {number} */ cy = this.height / 2;
  this.main_royale_products_ProductItemRenderer1_image1.x = 4;
  this.main_royale_products_ProductItemRenderer1_image1.y = cy - 16;
  this.main_royale_products_ProductItemRenderer1_image1.width = 32;
  this.main_royale_products_ProductItemRenderer1_image1.height = 32;
};


main.royale.products.ProductItemRenderer1.prototype.get__data = function() {
  return main.royale.products.ProductItemRenderer1.superClass_.get__data.apply(this);
};


main.royale.products.ProductItemRenderer1.prototype.set__data = function(value) {
  main.royale.products.ProductItemRenderer1.superClass_.set__data.apply(this, [ value] );
  this.main_royale_products_ProductItemRenderer1_image1.src = org.apache.royale.utils.Language.string(value.image);
};


Object.defineProperties(main.royale.products.ProductItemRenderer1.prototype, /** @lends {main.royale.products.ProductItemRenderer1.prototype} */ {
/**
  * @export
  * @type {Object} */
data: {
get: main.royale.products.ProductItemRenderer1.prototype.get__data,
set: main.royale.products.ProductItemRenderer1.prototype.set__data}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
main.royale.products.ProductItemRenderer1.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'ProductItemRenderer1', qName: 'main.royale.products.ProductItemRenderer1', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
main.royale.products.ProductItemRenderer1.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'data': { type: 'Object', access: 'readwrite', declaredBy: 'main.royale.products.ProductItemRenderer1'}
      };
    },
    methods: function () {
      return {
        'ProductItemRenderer1': { type: '', declaredBy: 'main.royale.products.ProductItemRenderer1'},
        'addedToParent': { type: 'void', declaredBy: 'main.royale.products.ProductItemRenderer1'},
        'adjustSize': { type: 'void', declaredBy: 'main.royale.products.ProductItemRenderer1'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
main.royale.products.ProductItemRenderer1.prototype.ROYALE_COMPILE_FLAGS = 9;

//# sourceMappingURL=./ProductItemRenderer1.js.map
