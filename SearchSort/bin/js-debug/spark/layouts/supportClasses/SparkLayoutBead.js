/**
 * Generated by Apache Royale Compiler from spark/layouts/supportClasses/SparkLayoutBead.as
 * spark.layouts.supportClasses.SparkLayoutBead
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('spark.layouts.supportClasses.SparkLayoutBead');
/* Royale Dependency List: mx.core.UIComponent,mx.core.mx_internal,org.apache.royale.core.ILayoutHost,org.apache.royale.core.IStrand,org.apache.royale.core.UIBase,org.apache.royale.events.Event,spark.components.SkinnableContainer,spark.components.supportClasses.GroupBase,org.apache.royale.utils.Language,XML*/

goog.require('org.apache.royale.core.LayoutBase');



/**
 *  Constructor. 
 *  
 *  @langversion 3.0
 *  @playerversion Flash 10
 *  @playerversion AIR 1.5
 *  @productversion Flex 4
 * @constructor
 * @extends {org.apache.royale.core.LayoutBase}
 */
spark.layouts.supportClasses.SparkLayoutBead = function() {
  spark.layouts.supportClasses.SparkLayoutBead.base(this, 'constructor');
};
goog.inherits(spark.layouts.supportClasses.SparkLayoutBead, org.apache.royale.core.LayoutBase);


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('spark.layouts.supportClasses.SparkLayoutBead', spark.layouts.supportClasses.SparkLayoutBead);


/**
 * @private
 * @type {boolean}
 */
spark.layouts.supportClasses.SparkLayoutBead.prototype.spark_layouts_supportClasses_SparkLayoutBead_sawSizeChanged;


/**
 * @protected
 * @override
 */
spark.layouts.supportClasses.SparkLayoutBead.prototype.handleSizeChange = function(event) {
  this.spark_layouts_supportClasses_SparkLayoutBead_sawSizeChanged = true;
  spark.layouts.supportClasses.SparkLayoutBead.superClass_.handleSizeChange.apply(this, [ event] );
};


/**
 * @export
 * @override
 */
spark.layouts.supportClasses.SparkLayoutBead.prototype.layout = function() {
  var /** @type {number} */ n = this.target.numChildren;
  if (n == 0)
    return false;
  var /** @type {boolean} */ usingSkin = false;
  if (org.apache.royale.utils.Language.is(this.host, spark.components.SkinnableContainer))
    usingSkin = org.apache.royale.utils.Language.as(this.host, spark.components.SkinnableContainer).skin != null;
  if (!usingSkin && this.target != this.host) {
    var /** @type {mx.core.UIComponent} */ tlc = org.apache.royale.utils.Language.as(this.host, mx.core.UIComponent);
    if (!tlc.isWidthSizedToContent() && !tlc.isHeightSizedToContent())
      this.target.setActualSize(tlc.width, tlc.height);
  }
  if ((!isNaN(this.target.percentWidth)) || (!isNaN(this.target.percentHeight)))
    if (!this.spark_layouts_supportClasses_SparkLayoutBead_sawSizeChanged)
      return false;
  var /** @type {number} */ w = this.target.width;
  var /** @type {number} */ h = this.target.height;
  if (this.target.layout.isHeightSizedToContent())
    h = this.target.measuredHeight;
  if (this.target.layout.isWidthSizedToContent())
    w = this.target.measuredWidth;
  this.target.layout.updateDisplayList(w, h);
  if (this.target.layout.isWidthSizedToContent() && this.target.layout.isHeightSizedToContent()) {
    this.target.setActualSize(this.target.getExplicitOrMeasuredWidth(), this.target.getExplicitOrMeasuredHeight());
  }
  else if (this.target.layout.isWidthSizedToContent())
    this.target.setWidth(this.target.getExplicitOrMeasuredWidth());
  else if (this.target.layout.isHeightSizedToContent())
    this.target.setHeight(this.target.getExplicitOrMeasuredHeight());
  return true;
};


/**
 * @private
 * @type {org.apache.royale.core.IStrand}
 */
spark.layouts.supportClasses.SparkLayoutBead.prototype.spark_layouts_supportClasses_SparkLayoutBead__strand;


/**
 * @private
 * @type {spark.components.supportClasses.GroupBase}
 */
spark.layouts.supportClasses.SparkLayoutBead.prototype.spark_layouts_supportClasses_SparkLayoutBead__target;


spark.layouts.supportClasses.SparkLayoutBead.prototype.set__strand = function(value) {
  this.spark_layouts_supportClasses_SparkLayoutBead__strand = value;
  var /** @type {org.apache.royale.core.UIBase} */ host = org.apache.royale.utils.Language.as(value, org.apache.royale.core.UIBase);
  this.spark_layouts_supportClasses_SparkLayoutBead__target = org.apache.royale.utils.Language.as(org.apache.royale.utils.Language.as(host.view, org.apache.royale.core.ILayoutHost).contentView, spark.components.supportClasses.GroupBase);
  spark.layouts.supportClasses.SparkLayoutBead.superClass_.set__strand.apply(this, [ value] );
};


spark.layouts.supportClasses.SparkLayoutBead.prototype.get__target = function() {
  return this.spark_layouts_supportClasses_SparkLayoutBead__target;
};


spark.layouts.supportClasses.SparkLayoutBead.prototype.set__target = function(value) {
  this.spark_layouts_supportClasses_SparkLayoutBead__target = value;
};


Object.defineProperties(spark.layouts.supportClasses.SparkLayoutBead.prototype, /** @lends {spark.layouts.supportClasses.SparkLayoutBead.prototype} */ {
/**
  * @export
  * @type {org.apache.royale.core.IStrand} */
strand: {
set: spark.layouts.supportClasses.SparkLayoutBead.prototype.set__strand},
/**
  * @export
  * @type {spark.components.supportClasses.GroupBase} */
target: {
get: spark.layouts.supportClasses.SparkLayoutBead.prototype.get__target,
set: spark.layouts.supportClasses.SparkLayoutBead.prototype.set__target}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
spark.layouts.supportClasses.SparkLayoutBead.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'SparkLayoutBead', qName: 'spark.layouts.supportClasses.SparkLayoutBead', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
spark.layouts.supportClasses.SparkLayoutBead.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'strand': { type: 'org.apache.royale.core.IStrand', access: 'writeonly', declaredBy: 'spark.layouts.supportClasses.SparkLayoutBead'},
        'target': { type: 'spark.components.supportClasses.GroupBase', access: 'readwrite', declaredBy: 'spark.layouts.supportClasses.SparkLayoutBead'}
      };
    },
    methods: function () {
      return {
        'SparkLayoutBead': { type: '', declaredBy: 'spark.layouts.supportClasses.SparkLayoutBead'},
        'layout': { type: 'Boolean', declaredBy: 'spark.layouts.supportClasses.SparkLayoutBead'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
spark.layouts.supportClasses.SparkLayoutBead.prototype.ROYALE_COMPILE_FLAGS = 10;
