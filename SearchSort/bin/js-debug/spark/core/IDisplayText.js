/**
 * Generated by Apache Royale Compiler from spark/core/IDisplayText.as
 * spark.core.IDisplayText
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('spark.core.IDisplayText');
/* Royale Dependency List: XML*/

goog.require('org.apache.royale.events.IEventDispatcher');



/**
 * @interface
 * @extends {org.apache.royale.events.IEventDispatcher}
 */
spark.core.IDisplayText = function() {
};


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('spark.core.IDisplayText', spark.core.IDisplayText);
/**  * @type {string}
 */spark.core.IDisplayText.prototype.text;
/**  * @type {boolean}
 */spark.core.IDisplayText.prototype.isTruncated;


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
spark.core.IDisplayText.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'IDisplayText', qName: 'spark.core.IDisplayText', kind: 'interface' }], interfaces: [org.apache.royale.events.IEventDispatcher] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
spark.core.IDisplayText.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'text': { type: 'String', access: 'readwrite', declaredBy: 'spark.core.IDisplayText'},
        'isTruncated': { type: 'Boolean', access: 'readonly', declaredBy: 'spark.core.IDisplayText'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
spark.core.IDisplayText.prototype.ROYALE_COMPILE_FLAGS = 10;
