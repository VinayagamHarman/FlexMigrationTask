/**
 * Generated by Apache Royale Compiler from spark/components/Group.as
 * spark.components.Group
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('spark.components.Group');
/* Royale Dependency List: mx.core.IVisualElement,mx.core.mx_internal,XML*/

goog.require('spark.components.supportClasses.GroupBase');



/**
 *  Constructor.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 10
 *  @playerversion AIR 1.5
 *  @productversion Flex 4
 * @constructor
 * @extends {spark.components.supportClasses.GroupBase}
 */
spark.components.Group = function() {
  spark.components.Group.base(this, 'constructor');
};
goog.inherits(spark.components.Group, spark.components.supportClasses.GroupBase);


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('spark.components.Group', spark.components.Group);


/**
 * @private
 * @type {string}
 */
spark.components.Group.prototype.spark_components_Group__blendMode = "auto";


/**
 * @private
 * @type {boolean}
 */
spark.components.Group.prototype.spark_components_Group_blendModeChanged;


/**
 * @private
 * @type {boolean}
 */
spark.components.Group.prototype.spark_components_Group_blendShaderChanged;


/**
 * @private
 * @type {boolean}
 */
spark.components.Group.prototype.spark_components_Group_mxmlContentChanged = false;


/**
 * @private
 * @type {Array}
 */
spark.components.Group.prototype.spark_components_Group__mxmlContent;


/**
 *  @asprivate
 * @export
 * @return {Array}
 */
spark.components.Group.prototype.http_$$www_adobe_com$2006$flex$mx$internal__getMXMLContent = function() {
  if (this.spark_components_Group__mxmlContent)
    return this.spark_components_Group__mxmlContent.concat();
  else
    return null;
};


/**
 *  @asprivate
 *  Adds the elements in <code>mxmlContent</code> to the Group.
 *  Flex calls this method automatically; you do not call it directly.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 10
 *  @playerversion AIR 1.5
 *  @productversion Flex 4
 * @private
 * @param {Array} value
 */
spark.components.Group.prototype.spark_components_Group_setMXMLContent = function(value) {
  var /** @type {number} */ i = 0;
  //var /** @type {number} */ i = 0;
  this.spark_components_Group__mxmlContent = value ? value.concat() : null;
  if (this.spark_components_Group__mxmlContent != null) {
    var /** @type {number} */ n = (this.spark_components_Group__mxmlContent.length) >> 0;
    for (i = 0; i < n; i++) {
      var /** @type {mx.core.IVisualElement} */ elt = this.spark_components_Group__mxmlContent[i];
    }
  }
};


/**
 *  @asprivate
 * @protected
 * @override
 */
spark.components.Group.prototype.commitProperties = function() {
  spark.components.Group.superClass_.commitProperties.apply(this);
};


/**
 *  @asprivate
 * @protected
 * @override
 */
spark.components.Group.prototype.updateDisplayList = function(unscaledWidth, unscaledHeight) {
  spark.components.Group.superClass_.updateDisplayList.apply(this, [ unscaledWidth, unscaledHeight] );
};


spark.components.Group.prototype.set__width = function(value) {
  spark.components.Group.superClass_.set__width.apply(this, [ value] );
};


spark.components.Group.prototype.set__height = function(value) {
  spark.components.Group.superClass_.set__height.apply(this, [ value] );
};


spark.components.Group.prototype.set__alpha = function(value) {
  if (spark.components.Group.superClass_.get__alpha.apply(this) == value)
    return;
  spark.components.Group.superClass_.set__alpha.apply(this, [ value] );
};


spark.components.Group.prototype.get__blendMode = function() {
  return this.spark_components_Group__blendMode;
};


spark.components.Group.prototype.set__blendMode = function(value) {
  if (value == this.spark_components_Group__blendMode)
    return;
  this.invalidateProperties();
  this.spark_components_Group_blendModeChanged = true;
  if (value == "auto") {
    this.spark_components_Group__blendMode = value;
  } else {
    var /** @type {string} */ oldValue = this.spark_components_Group__blendMode;
    this.spark_components_Group__blendMode = value;
  }
};


Object.defineProperties(spark.components.Group.prototype, /** @lends {spark.components.Group.prototype} */ {
/**
  * @export
  * @type {number} */
width: {
get: org.apache.royale.core.UIBase.prototype.get__width,
set: spark.components.Group.prototype.set__width},
/**
  * @export
  * @type {number} */
height: {
get: org.apache.royale.core.UIBase.prototype.get__height,
set: spark.components.Group.prototype.set__height},
/**
  * @export
  * @type {number} */
alpha: {
get: mx.core.UIComponent.prototype.get__alpha,
set: spark.components.Group.prototype.set__alpha},
/**
  * @export
  * @type {string} */
blendMode: {
get: spark.components.Group.prototype.get__blendMode,
set: spark.components.Group.prototype.set__blendMode}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
spark.components.Group.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'Group', qName: 'spark.components.Group', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
spark.components.Group.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'width': { type: 'Number', access: 'writeonly', declaredBy: 'spark.components.Group'},
        'height': { type: 'Number', access: 'writeonly', declaredBy: 'spark.components.Group'},
        'alpha': { type: 'Number', access: 'writeonly', declaredBy: 'spark.components.Group'},
        'blendMode': { type: 'String', access: 'readwrite', declaredBy: 'spark.components.Group'}
      };
    },
    methods: function () {
      return {
        'Group': { type: 'void', declaredBy: 'spark.components.Group'},
        'http://www.adobe.com/2006/flex/mx/internal::getMXMLContent': { type: 'Array', declaredBy: 'spark.components.Group'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
spark.components.Group.prototype.ROYALE_COMPILE_FLAGS = 10;
