/**
 * Generated by Apache Royale Compiler from spark/components/SkinnableContainer.as
 * spark.components.SkinnableContainer
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('spark.components.SkinnableContainer');
/* Royale Dependency List: mx.core.IVisualElement,mx.core.mx_internal,org.apache.royale.binding.ContainerDataBinding,org.apache.royale.binding.DataBindingBase,org.apache.royale.core.ContainerBaseStrandChildren,org.apache.royale.core.IBeadLayout,org.apache.royale.core.IBeadView,org.apache.royale.core.IChild,org.apache.royale.core.ILayoutHost,org.apache.royale.core.IParent,org.apache.royale.core.ValuesManager,org.apache.royale.events.Event,org.apache.royale.events.IEventDispatcher,org.apache.royale.events.ValueEvent,org.apache.royale.utils.loadBeadFromValuesManager,spark.components.beads.SkinnableContainerView,spark.components.supportClasses.GroupBase,spark.layouts.supportClasses.LayoutBase,org.apache.royale.utils.Language,XML*/

goog.require('spark.components.supportClasses.SkinnableContainerBase');
goog.require('org.apache.royale.core.IContainer');
goog.require('org.apache.royale.core.IContainerBaseStrandChildrenHost');



/**
 *  Constructor. 
 *  
 *  @langversion 3.0
 *  @playerversion Flash 10
 *  @playerversion AIR 1.5
 *  @productversion Royale 0.9.4
 * @constructor
 * @extends {spark.components.supportClasses.SkinnableContainerBase}
 * @implements {org.apache.royale.core.IContainer}
 * @implements {org.apache.royale.core.IContainerBaseStrandChildrenHost}
 */
spark.components.SkinnableContainer = function() {
  
  this.spark_components_SkinnableContainer__mxmlDocument = this;
  spark.components.SkinnableContainer.base(this, 'constructor');
  this.typeNames = "SkinnableContainer";
};
goog.inherits(spark.components.SkinnableContainer, spark.components.supportClasses.SkinnableContainerBase);


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('spark.components.SkinnableContainer', spark.components.SkinnableContainer);


/**
 * Returns the ILayoutHost which is its view. From ILayoutParent.
 *
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.8
 * @export
 * @return {org.apache.royale.core.ILayoutHost}
 */
spark.components.SkinnableContainer.prototype.getLayoutHost = function() {
  return org.apache.royale.utils.Language.as(this.view, org.apache.royale.core.ILayoutHost);
};


/**
 * @export
 * @type {Object}
 */
spark.components.SkinnableContainer.prototype.contentGroup;


/**
 * @private
 * @type {spark.layouts.supportClasses.LayoutBase}
 */
spark.components.SkinnableContainer.prototype.spark_components_SkinnableContainer__layout;


/**
 * @private
 * @type {Object}
 */
spark.components.SkinnableContainer.prototype.spark_components_SkinnableContainer__mxmlContentFactory;


/**
 *  @inheritDoc
 *  
 *  @langversion 3.0
 *  @playerversion Flash 10
 *  @playerversion AIR 1.5
 *  @productversion Royale 0.9.4
 * @export
 */
spark.components.SkinnableContainer.prototype.removeAllElements = function() {
};


/**
 *  @asprivate
 * @export
 */
spark.components.SkinnableContainer.prototype.childrenAdded = function() {
  if (this.skin) {
    var /** @type {org.apache.royale.events.IEventDispatcher} */ skinDispatcher = org.apache.royale.utils.Language.as(org.apache.royale.utils.Language.as(this.view, spark.components.beads.SkinnableContainerView).contentView, org.apache.royale.events.IEventDispatcher);
    skinDispatcher.dispatchEvent(new org.apache.royale.events.ValueEvent("childrenAdded"));
  }
  this.dispatchEvent(new org.apache.royale.events.ValueEvent("childrenAdded"));
};


/**
 *  @inheritDoc
 *  
 *  @langversion 3.0
 *  @playerversion Flash 10
 *  @playerversion AIR 2.5
 *  @productversion Royale 0.9.4
 * @export
 * @param {mx.core.IVisualElement} element
 * @param {number} index
 */
spark.components.SkinnableContainer.prototype.setElementIndex = function(element, index) {
};


/**
 * @private
 * @type {Array}
 */
spark.components.SkinnableContainer.prototype.spark_components_SkinnableContainer__mxmlDescriptor;


/**
 * @private
 * @type {Object}
 */
spark.components.SkinnableContainer.prototype.spark_components_SkinnableContainer__mxmlDocument;


/**
 * @export
 * @override
 */
spark.components.SkinnableContainer.prototype.addedToParent = function() {
  if (!this.initialized) {
    org.apache.royale.core.ValuesManager["valuesImpl"].init(this);
  }
  spark.components.SkinnableContainer.superClass_.addedToParent.apply(this);
  org.apache.royale.utils.loadBeadFromValuesManager(org.apache.royale.core.IBeadLayout, "iBeadLayout", this);
  this.dispatchEvent(new org.apache.royale.events.Event("beadsAdded"));
  this.dispatchEvent(new org.apache.royale.events.Event("initComplete"));
  if ((this.isHeightSizedToContent() || !isNaN(this.explicitHeight)) && (this.isWidthSizedToContent() || !isNaN(this.explicitWidth)))
    this.dispatchEvent(new org.apache.royale.events.Event("layoutNeeded"));
};


/**
 * @protected
 * @override
 */
spark.components.SkinnableContainer.prototype.createChildren = function() {
  spark.components.SkinnableContainer.superClass_.createChildren.apply(this);
  if (this.getBeadByType(org.apache.royale.binding.DataBindingBase) == null)
    this.addBead(new org.apache.royale.binding.ContainerDataBinding());
  this.dispatchEvent(new org.apache.royale.events.Event("initBindings"));
};


/**
 *  @inheritDoc
 *  
 *  @langversion 3.0
 *  @playerversion Flash 10
 *  @playerversion AIR 1.5
 *  @productversion Royale 0.9.4
 * @protected
 * @override
 */
spark.components.SkinnableContainer.prototype.partAdded = function(partName, instance) {
  spark.components.SkinnableContainer.superClass_.partAdded.apply(this, [ partName, instance] );
};


/**
 *  @inheritDoc
 *  
 *  @langversion 3.0
 *  @playerversion Flash 10
 *  @playerversion AIR 1.5
 *  @productversion Royale 0.9.4
 * @protected
 * @param {string} partName
 * @param {Object} instance
 */
spark.components.SkinnableContainer.prototype.partRemoved = function(partName, instance) {
};


/**
 * @private
 * @type {org.apache.royale.core.ContainerBaseStrandChildren}
 */
spark.components.SkinnableContainer.prototype.spark_components_SkinnableContainer__strandChildren;


/**
 * @asprivate
 * @export
 * @override
 */
spark.components.SkinnableContainer.prototype.addElement = function(c, dispatchEvent) {
  dispatchEvent = typeof dispatchEvent !== 'undefined' ? dispatchEvent : true;
  var /** @type {org.apache.royale.core.IParent} */ contentView = org.apache.royale.utils.Language.as(this.getLayoutHost().contentView, org.apache.royale.core.IParent);
  if (c == contentView) {
    spark.components.SkinnableContainer.superClass_.addElement.apply(this, [ c] );
    if (c == this.skin)
      this.findSkinParts();
    return;
  }
  contentView.addElement(c, dispatchEvent);
  if (dispatchEvent)
    this.dispatchEvent(new org.apache.royale.events.ValueEvent("childrenAdded", c));
};


/**
 * @asprivate
 * @export
 * @override
 */
spark.components.SkinnableContainer.prototype.addElementAt = function(c, index, dispatchEvent) {
  dispatchEvent = typeof dispatchEvent !== 'undefined' ? dispatchEvent : true;
  var /** @type {org.apache.royale.core.IParent} */ contentView = org.apache.royale.utils.Language.as(this.getLayoutHost().contentView, org.apache.royale.core.IParent);
  contentView.addElementAt(c, index, dispatchEvent);
  if (dispatchEvent)
    this.dispatchEvent(new org.apache.royale.events.ValueEvent("childrenAdded", c));
};


/**
 * @asprivate
 * @export
 * @override
 */
spark.components.SkinnableContainer.prototype.getElementIndex = function(c) {
  var /** @type {org.apache.royale.core.ILayoutHost} */ layoutHost = org.apache.royale.utils.Language.as(this.view, org.apache.royale.core.ILayoutHost);
  var /** @type {org.apache.royale.core.IParent} */ contentView = org.apache.royale.utils.Language.as(layoutHost.contentView, org.apache.royale.core.IParent);
  return contentView.getElementIndex(c);
};


/**
 * @asprivate
 * @export
 * @override
 */
spark.components.SkinnableContainer.prototype.removeElement = function(c, dispatchEvent) {
  dispatchEvent = typeof dispatchEvent !== 'undefined' ? dispatchEvent : true;
  var /** @type {org.apache.royale.core.ILayoutHost} */ layoutHost = org.apache.royale.utils.Language.as(this.view, org.apache.royale.core.ILayoutHost);
  var /** @type {org.apache.royale.core.IParent} */ contentView = org.apache.royale.utils.Language.as(layoutHost.contentView, org.apache.royale.core.IParent);
  contentView.removeElement(c, dispatchEvent);
  if (dispatchEvent)
    this.dispatchEvent(new org.apache.royale.events.ValueEvent("childrenRemoved", c));
};


/**
 * @asprivate
 * @export
 * @override
 */
spark.components.SkinnableContainer.prototype.getElementAt = function(index) {
  var /** @type {org.apache.royale.core.ILayoutHost} */ layoutHost = org.apache.royale.utils.Language.as(this.view, org.apache.royale.core.ILayoutHost);
  var /** @type {org.apache.royale.core.IParent} */ contentView = org.apache.royale.utils.Language.as(layoutHost.contentView, org.apache.royale.core.IParent);
  return contentView.getElementAt(index);
};


/**
 * @asprivate
 * @suppress {undefinedNames}
 * Support strandChildren.
 * @export
 * @param {org.apache.royale.core.IChild} c
 * @param {boolean=} dispatchEvent
 */
spark.components.SkinnableContainer.prototype.$addElement = function(c, dispatchEvent) {
  dispatchEvent = typeof dispatchEvent !== 'undefined' ? dispatchEvent : true;
  spark.components.SkinnableContainer.superClass_.addElement.apply(this, [ c, dispatchEvent] );
};


/**
 * @asprivate
 * @suppress {undefinedNames}
 * Support strandChildren.
 * @export
 * @param {org.apache.royale.core.IChild} c
 * @param {number} index
 * @param {boolean=} dispatchEvent
 */
spark.components.SkinnableContainer.prototype.$addElementAt = function(c, index, dispatchEvent) {
  dispatchEvent = typeof dispatchEvent !== 'undefined' ? dispatchEvent : true;
  spark.components.SkinnableContainer.superClass_.addElementAt.apply(this, [ c, index, dispatchEvent] );
};


/**
 * @asprivate
 * @suppress {undefinedNames}
 * Support strandChildren.
 * @export
 * @param {org.apache.royale.core.IChild} c
 * @param {boolean=} dispatchEvent
 */
spark.components.SkinnableContainer.prototype.$removeElement = function(c, dispatchEvent) {
  dispatchEvent = typeof dispatchEvent !== 'undefined' ? dispatchEvent : true;
  spark.components.SkinnableContainer.superClass_.removeElement.apply(this, [ c, dispatchEvent] );
};


/**
 * @asprivate
 * @suppress {undefinedNames}
 * Support strandChildren.
 * @export
 * @param {org.apache.royale.core.IChild} c
 * @return {number}
 */
spark.components.SkinnableContainer.prototype.$getElementIndex = function(c) {
  return spark.components.SkinnableContainer.superClass_.getElementIndex.apply(this, [ c] );
};


/**
 * @asprivate
 * @suppress {undefinedNames}
 * Support strandChildren.
 * @export
 * @param {number} index
 * @return {org.apache.royale.core.IChild}
 */
spark.components.SkinnableContainer.prototype.$getElementAt = function(index) {
  return spark.components.SkinnableContainer.superClass_.getElementAt.apply(this, [ index] );
};


spark.components.SkinnableContainer.prototype.get__textDecoration = function() {
  return "";
};


spark.components.SkinnableContainer.prototype.set__textDecoration = function(val) {
};


spark.components.SkinnableContainer.prototype.get__blockProgression = function() {
  return "";
};


spark.components.SkinnableContainer.prototype.set__blockProgression = function(val) {
};


spark.components.SkinnableContainer.prototype.get__contentBackgroundColor = function() {
  return 0;
};


spark.components.SkinnableContainer.prototype.set__contentBackgroundColor = function(val) {
};


spark.components.SkinnableContainer.prototype.get__creationPolicy = function() {
  return "";
};


spark.components.SkinnableContainer.prototype.set__creationPolicy = function(value) {
};


spark.components.SkinnableContainer.prototype.get__layout = function() {
  return this.spark_components_SkinnableContainer__layout;
};


spark.components.SkinnableContainer.prototype.set__layout = function(value) {
  this.spark_components_SkinnableContainer__layout = value;
  if (this.getBeadByType(org.apache.royale.core.IBeadView)) {
    this.view.contentView.layout = value;
    if (this.parent)
      this.view.contentView.dispatchEvent(new org.apache.royale.events.Event("layoutNeeded"));
  }
};


spark.components.SkinnableContainer.prototype.set__mxmlContentFactory = function(value) {
  if (value == this.spark_components_SkinnableContainer__mxmlContentFactory)
    return;
  this.spark_components_SkinnableContainer__mxmlContentFactory = value;
};


spark.components.SkinnableContainer.prototype.get__strandChildren = function() {
  if (this.spark_components_SkinnableContainer__strandChildren == null) {
    this.spark_components_SkinnableContainer__strandChildren = new org.apache.royale.core.ContainerBaseStrandChildren(this);
  }
  return this.spark_components_SkinnableContainer__strandChildren;
};


spark.components.SkinnableContainer.prototype.get__numElements = function() {
  if (!this.getBeadByType(org.apache.royale.core.IBeadView))
    return 0;
  var /** @type {org.apache.royale.core.ILayoutHost} */ layoutHost = org.apache.royale.utils.Language.as(this.view, org.apache.royale.core.ILayoutHost);
  if (!layoutHost)
    return 0;
  var /** @type {org.apache.royale.core.IParent} */ contentView = org.apache.royale.utils.Language.as(layoutHost.contentView, org.apache.royale.core.IParent);
  return contentView.numElements;
};


spark.components.SkinnableContainer.prototype.get__$numElements = function() {
  return spark.components.SkinnableContainer.superClass_.get__numElements.apply(this);
};


Object.defineProperties(spark.components.SkinnableContainer.prototype, /** @lends {spark.components.SkinnableContainer.prototype} */ {
/**
  * @export
  * @type {string} */
textDecoration: {
get: spark.components.SkinnableContainer.prototype.get__textDecoration,
set: spark.components.SkinnableContainer.prototype.set__textDecoration},
/**
  * @export
  * @type {string} */
blockProgression: {
get: spark.components.SkinnableContainer.prototype.get__blockProgression,
set: spark.components.SkinnableContainer.prototype.set__blockProgression},
/**
  * @export
  * @type {number} */
contentBackgroundColor: {
get: spark.components.SkinnableContainer.prototype.get__contentBackgroundColor,
set: spark.components.SkinnableContainer.prototype.set__contentBackgroundColor},
/**
  * @export
  * @type {string} */
creationPolicy: {
get: spark.components.SkinnableContainer.prototype.get__creationPolicy,
set: spark.components.SkinnableContainer.prototype.set__creationPolicy},
/**
  * @export
  * @type {spark.layouts.supportClasses.LayoutBase} */
layout: {
get: spark.components.SkinnableContainer.prototype.get__layout,
set: spark.components.SkinnableContainer.prototype.set__layout},
/**
  * @export
  * @type {Object} */
mxmlContentFactory: {
set: spark.components.SkinnableContainer.prototype.set__mxmlContentFactory},
/**
  * @export
  * @type {org.apache.royale.core.IParent} */
strandChildren: {
get: spark.components.SkinnableContainer.prototype.get__strandChildren},
/**
  * @export
  * @type {number} */
numElements: {
get: spark.components.SkinnableContainer.prototype.get__numElements},
/**
  * @export
  * @type {number} */
$numElements: {
get: spark.components.SkinnableContainer.prototype.get__$numElements}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
spark.components.SkinnableContainer.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'SkinnableContainer', qName: 'spark.components.SkinnableContainer', kind: 'class' }], interfaces: [org.apache.royale.core.IContainer, org.apache.royale.core.IContainerBaseStrandChildrenHost] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
spark.components.SkinnableContainer.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        'contentGroup': { type: 'Object', get_set: function (/** spark.components.SkinnableContainer */ inst, /** * */ v) {return v !== undefined ? inst.contentGroup = v : inst.contentGroup;}}
      };
    },
    accessors: function () {
      return {
        'textDecoration': { type: 'String', access: 'readwrite', declaredBy: 'spark.components.SkinnableContainer'},
        'blockProgression': { type: 'String', access: 'readwrite', declaredBy: 'spark.components.SkinnableContainer'},
        'contentBackgroundColor': { type: 'uint', access: 'readwrite', declaredBy: 'spark.components.SkinnableContainer'},
        'creationPolicy': { type: 'String', access: 'readwrite', declaredBy: 'spark.components.SkinnableContainer'},
        'layout': { type: 'spark.layouts.supportClasses.LayoutBase', access: 'readwrite', declaredBy: 'spark.components.SkinnableContainer'},
        'mxmlContentFactory': { type: 'Object', access: 'writeonly', declaredBy: 'spark.components.SkinnableContainer'},
        'strandChildren': { type: 'org.apache.royale.core.IParent', access: 'readonly', declaredBy: 'spark.components.SkinnableContainer'},
        'numElements': { type: 'int', access: 'readonly', declaredBy: 'spark.components.SkinnableContainer'},
        '$numElements': { type: 'int', access: 'readonly', declaredBy: 'spark.components.SkinnableContainer'}
      };
    },
    methods: function () {
      return {
        'SkinnableContainer': { type: '', declaredBy: 'spark.components.SkinnableContainer'},
        'getLayoutHost': { type: 'org.apache.royale.core.ILayoutHost', declaredBy: 'spark.components.SkinnableContainer'},
        'removeAllElements': { type: 'void', declaredBy: 'spark.components.SkinnableContainer'},
        'childrenAdded': { type: 'void', declaredBy: 'spark.components.SkinnableContainer'},
        'setElementIndex': { type: 'void', declaredBy: 'spark.components.SkinnableContainer', parameters: function () { return [ 'mx.core.IVisualElement', false ,'int', false ]; }},
        'addedToParent': { type: 'void', declaredBy: 'spark.components.SkinnableContainer'},
        'addElement': { type: 'void', declaredBy: 'spark.components.SkinnableContainer', parameters: function () { return [ 'org.apache.royale.core.IChild', false ,'Boolean', true ]; }},
        'addElementAt': { type: 'void', declaredBy: 'spark.components.SkinnableContainer', parameters: function () { return [ 'org.apache.royale.core.IChild', false ,'int', false ,'Boolean', true ]; }},
        'getElementIndex': { type: 'int', declaredBy: 'spark.components.SkinnableContainer', parameters: function () { return [ 'org.apache.royale.core.IChild', false ]; }},
        'removeElement': { type: 'void', declaredBy: 'spark.components.SkinnableContainer', parameters: function () { return [ 'org.apache.royale.core.IChild', false ,'Boolean', true ]; }},
        'getElementAt': { type: 'org.apache.royale.core.IChild', declaredBy: 'spark.components.SkinnableContainer', parameters: function () { return [ 'int', false ]; }},
        '$addElement': { type: 'void', declaredBy: 'spark.components.SkinnableContainer', parameters: function () { return [ 'org.apache.royale.core.IChild', false ,'Boolean', true ]; }},
        '$addElementAt': { type: 'void', declaredBy: 'spark.components.SkinnableContainer', parameters: function () { return [ 'org.apache.royale.core.IChild', false ,'int', false ,'Boolean', true ]; }},
        '$removeElement': { type: 'void', declaredBy: 'spark.components.SkinnableContainer', parameters: function () { return [ 'org.apache.royale.core.IChild', false ,'Boolean', true ]; }},
        '$getElementIndex': { type: 'int', declaredBy: 'spark.components.SkinnableContainer', parameters: function () { return [ 'org.apache.royale.core.IChild', false ]; }},
        '$getElementAt': { type: 'org.apache.royale.core.IChild', declaredBy: 'spark.components.SkinnableContainer', parameters: function () { return [ 'int', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
spark.components.SkinnableContainer.prototype.ROYALE_COMPILE_FLAGS = 10;
