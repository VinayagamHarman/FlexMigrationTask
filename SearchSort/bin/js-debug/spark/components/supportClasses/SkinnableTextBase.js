/**
 * Generated by Apache Royale Compiler from spark/components/supportClasses/SkinnableTextBase.as
 * spark.components.supportClasses.SkinnableTextBase
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('spark.components.supportClasses.SkinnableTextBase');
/* Royale Dependency List: mx.core.mx_internal,mx.events.FlexEvent,mx.utils.BitFlagUtil,org.apache.royale.events.Event,org.apache.royale.html.accessories.PasswordInputBead,org.apache.royale.textLayout.elements.TextFlow,org.apache.royale.textLayout.events.SelectionEvent,spark.components.RichEditableText,spark.core.IEditableText,spark.events.TextOperationEvent,org.apache.royale.utils.Language,XML*/

goog.require('spark.components.supportClasses.SkinnableComponent');
goog.require('mx.managers.IFocusManagerComponent');



/**
 *  Constructor. 
 *  
 *  @langversion 3.0
 *  @playerversion Flash 10
 *  @playerversion AIR 1.5
 *  @productversion Royale 0.9.4
 * @constructor
 * @extends {spark.components.supportClasses.SkinnableComponent}
 * @implements {mx.managers.IFocusManagerComponent}
 */
spark.components.supportClasses.SkinnableTextBase = function() {
  
  this.spark_components_supportClasses_SkinnableTextBase_textDisplayProperties = {};
  spark.components.supportClasses.SkinnableTextBase.base(this, 'constructor');
};
goog.inherits(spark.components.supportClasses.SkinnableTextBase, spark.components.supportClasses.SkinnableComponent);


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('spark.components.supportClasses.SkinnableTextBase', spark.components.supportClasses.SkinnableTextBase);


/**
 * @private
 * @const
 * @type {number}
 */
spark.components.supportClasses.SkinnableTextBase.CONTENT_PROPERTY_FLAG = (1 << 0) >>> 0;


/**
 * @private
 * @const
 * @type {number}
 */
spark.components.supportClasses.SkinnableTextBase.DISPLAY_AS_PASSWORD_PROPERTY_FLAG = (1 << 1) >>> 0;


/**
 * @private
 * @const
 * @type {number}
 */
spark.components.supportClasses.SkinnableTextBase.EDITABLE_PROPERTY_FLAG = (1 << 2) >>> 0;


/**
 * @private
 * @const
 * @type {number}
 */
spark.components.supportClasses.SkinnableTextBase.HEIGHT_IN_LINES_PROPERTY_FLAG = (1 << 3) >>> 0;


/**
 * @private
 * @const
 * @type {number}
 */
spark.components.supportClasses.SkinnableTextBase.IME_MODE_PROPERTY_FLAG = (1 << 4) >>> 0;


/**
 * @private
 * @const
 * @type {number}
 */
spark.components.supportClasses.SkinnableTextBase.MAX_CHARS_PROPERTY_FLAG = (1 << 5) >>> 0;


/**
 * @private
 * @const
 * @type {number}
 */
spark.components.supportClasses.SkinnableTextBase.MAX_WIDTH_PROPERTY_FLAG = (1 << 7) >>> 0;


/**
 * @private
 * @const
 * @type {number}
 */
spark.components.supportClasses.SkinnableTextBase.RESTRICT_PROPERTY_FLAG = (1 << 8) >>> 0;


/**
 * @private
 * @const
 * @type {number}
 */
spark.components.supportClasses.SkinnableTextBase.SELECTABLE_PROPERTY_FLAG = (1 << 9) >>> 0;


/**
 * @private
 * @const
 * @type {number}
 */
spark.components.supportClasses.SkinnableTextBase.SELECTION_HIGHLIGHTING_FLAG = (1 << 10) >>> 0;


/**
 * @private
 * @const
 * @type {number}
 */
spark.components.supportClasses.SkinnableTextBase.TEXT_PROPERTY_FLAG = (1 << 11) >>> 0;


/**
 * @private
 * @const
 * @type {number}
 */
spark.components.supportClasses.SkinnableTextBase.TEXT_FLOW_PROPERTY_FLAG = (1 << 12) >>> 0;


/**
 * @private
 * @const
 * @type {number}
 */
spark.components.supportClasses.SkinnableTextBase.TYPICAL_TEXT_PROPERTY_FLAG = (1 << 13) >>> 0;


/**
 * @private
 * @const
 * @type {number}
 */
spark.components.supportClasses.SkinnableTextBase.WIDTH_IN_CHARS_PROPERTY_FLAG = (1 << 14) >>> 0;


/**
 * @private
 * @const
 * @type {number}
 */
spark.components.supportClasses.SkinnableTextBase.AUTO_CAPITALIZE_FLAG = (1 << 15) >>> 0;


/**
 * @private
 * @const
 * @type {number}
 */
spark.components.supportClasses.SkinnableTextBase.AUTO_CORRECT_FLAG = (1 << 16) >>> 0;


/**
 * @private
 * @const
 * @type {number}
 */
spark.components.supportClasses.SkinnableTextBase.RETURN_KEY_LABEL_FLAG = (1 << 17) >>> 0;


/**
 * @private
 * @const
 * @type {number}
 */
spark.components.supportClasses.SkinnableTextBase.SOFT_KEYBOARD_TYPE_FLAG = (1 << 18) >>> 0;


/**
 * @private
 * @const
 * @type {number}
 */
spark.components.supportClasses.SkinnableTextBase.PROMPT_TEXT_PROPERTY_FLAG = 1;


/**
 * @private
 * @type {number}
 */
spark.components.supportClasses.SkinnableTextBase.prototype.spark_components_supportClasses_SkinnableTextBase__borderAlpha;


/**
 * @private
 * @type {number}
 */
spark.components.supportClasses.SkinnableTextBase.prototype.spark_components_supportClasses_SkinnableTextBase__borderColor = 0;


/**
 * @export
 * @type {spark.core.IEditableText}
 */
spark.components.supportClasses.SkinnableTextBase.prototype.textDisplay;


/**
 * @private
 * @type {Object}
 */
spark.components.supportClasses.SkinnableTextBase.prototype.spark_components_supportClasses_SkinnableTextBase_textDisplayProperties;


/**
 * @private
 * @type {boolean}
 */
spark.components.supportClasses.SkinnableTextBase.prototype.spark_components_supportClasses_SkinnableTextBase__displayAsPassword = false;


/**
 * @private
 * @type {org.apache.royale.html.accessories.PasswordInputBead}
 */
spark.components.supportClasses.SkinnableTextBase.prototype.spark_components_supportClasses_SkinnableTextBase__passwordBead;


/**
 * @private
 * @type {boolean}
 */
spark.components.supportClasses.SkinnableTextBase.prototype.spark_components_supportClasses_SkinnableTextBase_displayAsPasswordChanged = false;


/**
 * @private
 * @type {number}
 */
spark.components.supportClasses.SkinnableTextBase.prototype.spark_components_supportClasses_SkinnableTextBase__maxChars = 0;


/**
 *  @asprivate
 * @protected
 * @override
 */
spark.components.supportClasses.SkinnableTextBase.prototype.commitProperties = function() {
  spark.components.supportClasses.SkinnableTextBase.superClass_.commitProperties.apply(this);
};


/**
 *  @asprivate
 * @protected
 * @override
 */
spark.components.supportClasses.SkinnableTextBase.prototype.partAdded = function(partName, instance) {
  spark.components.supportClasses.SkinnableTextBase.superClass_.partAdded.apply(this, [ partName, instance] );
  if (instance == this.textDisplay) {
    this.spark_components_supportClasses_SkinnableTextBase_textDisplayAdded();
    this.textDisplay.focusEnabled = false;
    this.textDisplay.addEventListener(org.apache.royale.textLayout.events.SelectionEvent.SELECTION_CHANGE, org.apache.royale.utils.Language.closure(this.spark_components_supportClasses_SkinnableTextBase_textDisplay_selectionChangeHandler, this, 'spark_components_supportClasses_SkinnableTextBase_textDisplay_selectionChangeHandler'));
    this.textDisplay.addEventListener(spark.events.TextOperationEvent.CHANGING, org.apache.royale.utils.Language.closure(this.spark_components_supportClasses_SkinnableTextBase_textDisplay_changingHandler, this, 'spark_components_supportClasses_SkinnableTextBase_textDisplay_changingHandler'));
    this.textDisplay.addEventListener(spark.events.TextOperationEvent.CHANGE, org.apache.royale.utils.Language.closure(this.spark_components_supportClasses_SkinnableTextBase_textDisplay_changeHandler, this, 'spark_components_supportClasses_SkinnableTextBase_textDisplay_changeHandler'));
    this.textDisplay.addEventListener(mx.events.FlexEvent.ENTER, org.apache.royale.utils.Language.closure(this.spark_components_supportClasses_SkinnableTextBase_textDisplay_enterHandler, this, 'spark_components_supportClasses_SkinnableTextBase_textDisplay_enterHandler'));
    this.textDisplay.addEventListener(mx.events.FlexEvent.VALUE_COMMIT, org.apache.royale.utils.Language.closure(this.spark_components_supportClasses_SkinnableTextBase_textDisplay_valueCommitHandler, this, 'spark_components_supportClasses_SkinnableTextBase_textDisplay_valueCommitHandler'));
  }
};


/**
 *  @asprivate
 *  Focus should always be on the internal textDisplay.
 * @export
 * @override
 */
spark.components.supportClasses.SkinnableTextBase.prototype.setFocus = function() {
};


/**
 *  @copy spark.core.IEditableText#appendText()
 *  
 *  @see spark.components.RichEditableText#appendText()
 *  @see spark.components.supportClasses.StyleableStageText#appendText()
 * 
 *  @langversion 3.0
 *  @playerversion Flash 10
 *  @playerversion AIR 1.5
 *  @productversion Royale 0.9.4
 * @export
 * @param {string} text
 */
spark.components.supportClasses.SkinnableTextBase.prototype.appendText = function(text) {
};


/**
 *  @copy spark.core.IEditableText#selectRange()
 *  
 *  @see spark.components.RichEditableText#selectRange()
 *  @see spark.components.supportClasses.StyleableStageText#selectRange()
 * 
 *  @langversion 3.0
 *  @playerversion Flash 10
 *  @playerversion AIR 1.5
 *  @productversion Royale 0.9.4
 * @export
 * @param {number} anchorIndex
 * @param {number} activeIndex
 */
spark.components.supportClasses.SkinnableTextBase.prototype.selectRange = function(anchorIndex, activeIndex) {
};


/**
 *  @asprivate
 * @export
 * @param {Object} value
 */
spark.components.supportClasses.SkinnableTextBase.prototype.setContent = function(value) {
  if (this.textDisplay) {
    var /** @type {spark.components.RichEditableText} */ richEditableText = org.apache.royale.utils.Language.as(this.textDisplay, spark.components.RichEditableText);
    if (richEditableText) {
      richEditableText.content = value;
      this.spark_components_supportClasses_SkinnableTextBase_textDisplayProperties = mx.utils.BitFlagUtil.update(org.apache.royale.utils.Language.uint(this.spark_components_supportClasses_SkinnableTextBase_textDisplayProperties), spark.components.supportClasses.SkinnableTextBase.CONTENT_PROPERTY_FLAG, true);
    }
  } else {
    this.spark_components_supportClasses_SkinnableTextBase_textDisplayProperties.content = value;
    this.spark_components_supportClasses_SkinnableTextBase_textDisplayProperties.text = undefined;
    this.spark_components_supportClasses_SkinnableTextBase_textDisplayProperties.textFlow = undefined;
  }
  this.invalidateProperties();
};


/**
 *  @asprivate  
 * @export
 * @return {org.apache.royale.textLayout.elements.TextFlow}
 */
spark.components.supportClasses.SkinnableTextBase.prototype.getTextFlow = function() {
  var /** @type {spark.components.RichEditableText} */ richEditableText = org.apache.royale.utils.Language.as(this.textDisplay, spark.components.RichEditableText);
  if (richEditableText)
    return richEditableText.textFlow;
  var /** @type {*} */ v = this.textDisplay ? undefined : this.spark_components_supportClasses_SkinnableTextBase_textDisplayProperties.textFlow;
  return (v === undefined) ? null : v;
};


/**
 *  @asprivate
 * @export
 * @param {org.apache.royale.textLayout.elements.TextFlow} value
 */
spark.components.supportClasses.SkinnableTextBase.prototype.setTextFlow = function(value) {
  if (this.textDisplay) {
    var /** @type {spark.components.RichEditableText} */ richEditableText = org.apache.royale.utils.Language.as(this.textDisplay, spark.components.RichEditableText);
    if (richEditableText)
      richEditableText.textFlow = value;
    this.spark_components_supportClasses_SkinnableTextBase_textDisplayProperties = mx.utils.BitFlagUtil.update(org.apache.royale.utils.Language.uint(this.spark_components_supportClasses_SkinnableTextBase_textDisplayProperties), spark.components.supportClasses.SkinnableTextBase.TEXT_FLOW_PROPERTY_FLAG, true);
  } else {
    this.spark_components_supportClasses_SkinnableTextBase_textDisplayProperties.textFlow = value;
    this.spark_components_supportClasses_SkinnableTextBase_textDisplayProperties.text = undefined;
    this.spark_components_supportClasses_SkinnableTextBase_textDisplayProperties.content = undefined;
  }
  this.invalidateProperties();
  this.invalidateSkinState();
};


/**
 *  @asprivate
 *  Copy values stored locally into textDisplay now that textDisplay 
 *  has been added.
 * @private
 */
spark.components.supportClasses.SkinnableTextBase.prototype.spark_components_supportClasses_SkinnableTextBase_textDisplayAdded = function() {
  var /** @type {number} */ newTextDisplayProperties = 0;
  var /** @type {spark.components.RichEditableText} */ richEditableText = org.apache.royale.utils.Language.as(this.textDisplay, spark.components.RichEditableText);
  if (this.spark_components_supportClasses_SkinnableTextBase_textDisplayProperties.content !== undefined && richEditableText) {
    richEditableText.content = this.spark_components_supportClasses_SkinnableTextBase_textDisplayProperties.content;
    newTextDisplayProperties = mx.utils.BitFlagUtil.update(org.apache.royale.utils.Language.uint(newTextDisplayProperties), spark.components.supportClasses.SkinnableTextBase.CONTENT_PROPERTY_FLAG, true);
  }
  if (this.spark_components_supportClasses_SkinnableTextBase_textDisplayProperties.displayAsPassword !== undefined) {
    this.textDisplay.displayAsPassword = !!(this.spark_components_supportClasses_SkinnableTextBase_textDisplayProperties.displayAsPassword);
    newTextDisplayProperties = mx.utils.BitFlagUtil.update(org.apache.royale.utils.Language.uint(newTextDisplayProperties), spark.components.supportClasses.SkinnableTextBase.DISPLAY_AS_PASSWORD_PROPERTY_FLAG, true);
  }
  if (this.spark_components_supportClasses_SkinnableTextBase_textDisplayProperties.editable !== undefined) {
    this.textDisplay.editable = !!(this.spark_components_supportClasses_SkinnableTextBase_textDisplayProperties.editable);
    newTextDisplayProperties = mx.utils.BitFlagUtil.update(org.apache.royale.utils.Language.uint(newTextDisplayProperties), spark.components.supportClasses.SkinnableTextBase.EDITABLE_PROPERTY_FLAG, true);
  }
  if (this.spark_components_supportClasses_SkinnableTextBase_textDisplayProperties.heightInLines !== undefined && richEditableText) {
    richEditableText.heightInLines = Number(this.spark_components_supportClasses_SkinnableTextBase_textDisplayProperties.heightInLines);
    newTextDisplayProperties = mx.utils.BitFlagUtil.update(org.apache.royale.utils.Language.uint(newTextDisplayProperties), spark.components.supportClasses.SkinnableTextBase.HEIGHT_IN_LINES_PROPERTY_FLAG, true);
  }
  if (this.spark_components_supportClasses_SkinnableTextBase_textDisplayProperties.maxChars !== undefined) {
    this.textDisplay.maxChars = (this.spark_components_supportClasses_SkinnableTextBase_textDisplayProperties.maxChars) >> 0;
    newTextDisplayProperties = mx.utils.BitFlagUtil.update(org.apache.royale.utils.Language.uint(newTextDisplayProperties), spark.components.supportClasses.SkinnableTextBase.MAX_CHARS_PROPERTY_FLAG, true);
  }
  if (this.spark_components_supportClasses_SkinnableTextBase_textDisplayProperties.maxWidth !== undefined) {
    if (richEditableText)
      richEditableText.maxWidth = Number(this.spark_components_supportClasses_SkinnableTextBase_textDisplayProperties.maxWidth);
    else
      spark.components.supportClasses.SkinnableTextBase.superClass_.set__maxWidth.apply(this, [ this.spark_components_supportClasses_SkinnableTextBase_textDisplayProperties.maxWidth] );
    newTextDisplayProperties = mx.utils.BitFlagUtil.update(org.apache.royale.utils.Language.uint(newTextDisplayProperties), spark.components.supportClasses.SkinnableTextBase.MAX_WIDTH_PROPERTY_FLAG, true);
  }
  if (this.spark_components_supportClasses_SkinnableTextBase_textDisplayProperties.restrict !== undefined) {
    this.textDisplay.restrict = org.apache.royale.utils.Language.string(this.spark_components_supportClasses_SkinnableTextBase_textDisplayProperties.restrict);
    newTextDisplayProperties = mx.utils.BitFlagUtil.update(org.apache.royale.utils.Language.uint(newTextDisplayProperties), spark.components.supportClasses.SkinnableTextBase.RESTRICT_PROPERTY_FLAG, true);
  }
  if (this.spark_components_supportClasses_SkinnableTextBase_textDisplayProperties.selectable !== undefined) {
    this.textDisplay.selectable = !!(this.spark_components_supportClasses_SkinnableTextBase_textDisplayProperties.selectable);
    newTextDisplayProperties = mx.utils.BitFlagUtil.update(org.apache.royale.utils.Language.uint(newTextDisplayProperties), spark.components.supportClasses.SkinnableTextBase.SELECTABLE_PROPERTY_FLAG, true);
  }
  if (this.spark_components_supportClasses_SkinnableTextBase_textDisplayProperties.text != null) {
    this.textDisplay.text = org.apache.royale.utils.Language.string(this.spark_components_supportClasses_SkinnableTextBase_textDisplayProperties.text);
    newTextDisplayProperties = mx.utils.BitFlagUtil.update(org.apache.royale.utils.Language.uint(newTextDisplayProperties), spark.components.supportClasses.SkinnableTextBase.TEXT_PROPERTY_FLAG, true);
  }
  if (this.spark_components_supportClasses_SkinnableTextBase_textDisplayProperties.textFlow !== undefined && richEditableText) {
    richEditableText.textFlow = this.spark_components_supportClasses_SkinnableTextBase_textDisplayProperties.textFlow;
    newTextDisplayProperties = mx.utils.BitFlagUtil.update(org.apache.royale.utils.Language.uint(newTextDisplayProperties), spark.components.supportClasses.SkinnableTextBase.TEXT_FLOW_PROPERTY_FLAG, true);
  }
  if (this.spark_components_supportClasses_SkinnableTextBase_textDisplayProperties.typicalText !== undefined && richEditableText) {
    richEditableText.typicalText = org.apache.royale.utils.Language.string(this.spark_components_supportClasses_SkinnableTextBase_textDisplayProperties.typicalText);
    newTextDisplayProperties = mx.utils.BitFlagUtil.update(org.apache.royale.utils.Language.uint(newTextDisplayProperties), spark.components.supportClasses.SkinnableTextBase.TYPICAL_TEXT_PROPERTY_FLAG, true);
  }
  if (this.spark_components_supportClasses_SkinnableTextBase_textDisplayProperties.widthInChars !== undefined && richEditableText) {
    richEditableText.widthInChars = Number(this.spark_components_supportClasses_SkinnableTextBase_textDisplayProperties.widthInChars);
    newTextDisplayProperties = mx.utils.BitFlagUtil.update(org.apache.royale.utils.Language.uint(newTextDisplayProperties), spark.components.supportClasses.SkinnableTextBase.WIDTH_IN_CHARS_PROPERTY_FLAG, true);
  }
  this.spark_components_supportClasses_SkinnableTextBase_textDisplayProperties = newTextDisplayProperties;
};


/**
 *  @asprivate
 *  Called when the RichEditableText dispatches a 'selectionChange' event.
 * @private
 * @param {org.apache.royale.events.Event} event
 */
spark.components.supportClasses.SkinnableTextBase.prototype.spark_components_supportClasses_SkinnableTextBase_textDisplay_selectionChangeHandler = function(event) {
  this.dispatchEvent(event);
};


/**
 *  Called when the RichEditableText dispatches a 'change' event
 *  after an editing operation.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 10
 *  @playerversion AIR 1.5
 *  @productversion Royale 0.9.4
 * @private
 * @param {org.apache.royale.events.Event} event
 */
spark.components.supportClasses.SkinnableTextBase.prototype.spark_components_supportClasses_SkinnableTextBase_textDisplay_changeHandler = function(event) {
  this.invalidateDisplayList();
  this.dispatchEvent(event);
};


/**
 *  @asprivate
 *  Called when the RichEditableText dispatches a 'changing' event
 *  before an editing operation.
 * @private
 * @param {spark.events.TextOperationEvent} event
 */
spark.components.supportClasses.SkinnableTextBase.prototype.spark_components_supportClasses_SkinnableTextBase_textDisplay_changingHandler = function(event) {
  var /** @type {org.apache.royale.events.Event} */ newEvent = event.cloneEvent();
  this.dispatchEvent(newEvent);
  if (newEvent.isDefaultPrevented())
    event.preventDefault();
};


/**
 *  @asprivate
 *  Called when the RichEditableText dispatches an 'enter' event
 *  in response to the Enter key.
 * @private
 * @param {org.apache.royale.events.Event} event
 */
spark.components.supportClasses.SkinnableTextBase.prototype.spark_components_supportClasses_SkinnableTextBase_textDisplay_enterHandler = function(event) {
  this.dispatchEvent(event);
};


/**
 *  @asprivate
 *  Called when the RichEditableText dispatches an 'valueCommit' event
 *  when values are changed programmatically or by user interaction.
 *  Before the textDisplay part is loaded, any properties set are held
 *  in textDisplayProperties.  We don't want to dispatch 'valueCommit' when 
 *  there isn't a textDisplay since since the event will be dispatched by 
 *  RET when the textDisplay part is added.
 * @private
 * @param {org.apache.royale.events.Event} event
 */
spark.components.supportClasses.SkinnableTextBase.prototype.spark_components_supportClasses_SkinnableTextBase_textDisplay_valueCommitHandler = function(event) {
  this.dispatchEvent(event);
};


/**
 * @export
 * @override
 */
spark.components.supportClasses.SkinnableTextBase.prototype.setStyle = function(styleName, value) {
  if (styleName == "contentBackgroundColor") {
    styleName = "backgroundColor";
    if (org.apache.royale.utils.Language.is(value, String) && value.charAt(0) != '#') {
      var /** @type {number} */ c = (parseInt(org.apache.royale.utils.Language.as(value, String), undefined)) >>> 0;
      value = '#' + c.toString(16);
    }
  }
  spark.components.supportClasses.SkinnableTextBase.superClass_.setStyle.apply(this, [ styleName, value] );
};


spark.components.supportClasses.SkinnableTextBase.prototype.get__borderAlpha = function() {
  return this.spark_components_supportClasses_SkinnableTextBase__borderAlpha;
};


spark.components.supportClasses.SkinnableTextBase.prototype.set__borderAlpha = function(value) {
  this.spark_components_supportClasses_SkinnableTextBase__borderAlpha = value;
};


spark.components.supportClasses.SkinnableTextBase.prototype.get__borderColor = function() {
  return this.spark_components_supportClasses_SkinnableTextBase__borderColor;
};


spark.components.supportClasses.SkinnableTextBase.prototype.set__borderColor = function(value) {
  this.spark_components_supportClasses_SkinnableTextBase__borderColor = value;
};


spark.components.supportClasses.SkinnableTextBase.prototype.get__contentBackgroundColor = function() {
  return (this.getStyle("backgroundColor")) >>> 0;
};


spark.components.supportClasses.SkinnableTextBase.prototype.set__contentBackgroundColor = function(val) {
  this.setStyle("contentBackgroundColor", val);
};


spark.components.supportClasses.SkinnableTextBase.prototype.get__contentBackgroundAlpha = function() {
  return 0;
};


spark.components.supportClasses.SkinnableTextBase.prototype.set__contentBackgroundAlpha = function(val) {
};


spark.components.supportClasses.SkinnableTextBase.prototype.get__borderVisible = function() {
  return true;
};


spark.components.supportClasses.SkinnableTextBase.prototype.set__borderVisible = function(val) {
};


spark.components.supportClasses.SkinnableTextBase.prototype.get__lineThrough = function() {
  return true;
};


spark.components.supportClasses.SkinnableTextBase.prototype.set__lineThrough = function(val) {
};


spark.components.supportClasses.SkinnableTextBase.prototype.get__textDecoration = function() {
  return null;
};


spark.components.supportClasses.SkinnableTextBase.prototype.set__textDecoration = function(val) {
};


spark.components.supportClasses.SkinnableTextBase.prototype.get__textAlignLast = function() {
  return "";
};


spark.components.supportClasses.SkinnableTextBase.prototype.set__textAlignLast = function(val) {
};


spark.components.supportClasses.SkinnableTextBase.prototype.set__enabled = function(value) {
  if (this.textDisplay)
    this.textDisplay.enabled = value;
  if (value == spark.components.supportClasses.SkinnableTextBase.superClass_.get__enabled.apply(this))
    return;
  spark.components.supportClasses.SkinnableTextBase.superClass_.set__enabled.apply(this, [ value] );
};


spark.components.supportClasses.SkinnableTextBase.prototype.get__displayAsPassword = function() {
  return this.spark_components_supportClasses_SkinnableTextBase__displayAsPassword;
};


spark.components.supportClasses.SkinnableTextBase.prototype.set__displayAsPassword = function(value) {
  if (value == this.spark_components_supportClasses_SkinnableTextBase__displayAsPassword)
    return;
  this.spark_components_supportClasses_SkinnableTextBase__displayAsPassword = value;
  if (this.spark_components_supportClasses_SkinnableTextBase__displayAsPassword && this.spark_components_supportClasses_SkinnableTextBase__passwordBead == null) {
    this.spark_components_supportClasses_SkinnableTextBase__passwordBead = new org.apache.royale.html.accessories.PasswordInputBead();
    this.addBead(this.spark_components_supportClasses_SkinnableTextBase__passwordBead);
  } else if (!this.spark_components_supportClasses_SkinnableTextBase__displayAsPassword && this.spark_components_supportClasses_SkinnableTextBase__passwordBead != null) {
    this.removeBead(this.spark_components_supportClasses_SkinnableTextBase__passwordBead);
    this.spark_components_supportClasses_SkinnableTextBase__passwordBead = null;
  }
  this.dispatchEvent(new org.apache.royale.events.Event("displayAsPasswordChanged"));
};


spark.components.supportClasses.SkinnableTextBase.prototype.get__editable = function() {
  return true;
};


spark.components.supportClasses.SkinnableTextBase.prototype.set__editable = function(value) {
};


spark.components.supportClasses.SkinnableTextBase.prototype.get__maxChars = function() {
  return this.spark_components_supportClasses_SkinnableTextBase__maxChars;
};


spark.components.supportClasses.SkinnableTextBase.prototype.set__maxChars = function(value) {
  if (value == this.spark_components_supportClasses_SkinnableTextBase__maxChars)
    return;
  this.spark_components_supportClasses_SkinnableTextBase__maxChars = value;
};


spark.components.supportClasses.SkinnableTextBase.prototype.get__restrict = function() {
  return "";
};


spark.components.supportClasses.SkinnableTextBase.prototype.set__restrict = function(value) {
};


spark.components.supportClasses.SkinnableTextBase.prototype.get__selectionActivePosition = function() {
  return 0;
};


spark.components.supportClasses.SkinnableTextBase.prototype.get__text = function() {
  if (this.textDisplay)
    return this.textDisplay.text;
  var /** @type {*} */ v = this.spark_components_supportClasses_SkinnableTextBase_textDisplayProperties.text;
  return org.apache.royale.utils.Language.string((v === undefined) ? "" : v);
};


spark.components.supportClasses.SkinnableTextBase.prototype.set__text = function(value) {
  if (this.textDisplay) {
    this.textDisplay.text = value;
    this.spark_components_supportClasses_SkinnableTextBase_textDisplayProperties = mx.utils.BitFlagUtil.update(org.apache.royale.utils.Language.uint(this.spark_components_supportClasses_SkinnableTextBase_textDisplayProperties), spark.components.supportClasses.SkinnableTextBase.TEXT_PROPERTY_FLAG, true);
  } else {
    this.spark_components_supportClasses_SkinnableTextBase_textDisplayProperties.text = value ? value : "";
    this.spark_components_supportClasses_SkinnableTextBase_textDisplayProperties.content = undefined;
    this.spark_components_supportClasses_SkinnableTextBase_textDisplayProperties.textFlow = undefined;
  }
  this.invalidateProperties();
  this.invalidateSkinState();
};


Object.defineProperties(spark.components.supportClasses.SkinnableTextBase.prototype, /** @lends {spark.components.supportClasses.SkinnableTextBase.prototype} */ {
/**
  * @export
  * @type {number} */
borderAlpha: {
get: spark.components.supportClasses.SkinnableTextBase.prototype.get__borderAlpha,
set: spark.components.supportClasses.SkinnableTextBase.prototype.set__borderAlpha},
/**
  * @export
  * @type {number} */
borderColor: {
get: spark.components.supportClasses.SkinnableTextBase.prototype.get__borderColor,
set: spark.components.supportClasses.SkinnableTextBase.prototype.set__borderColor},
/**
  * @export
  * @type {number} */
contentBackgroundColor: {
get: spark.components.supportClasses.SkinnableTextBase.prototype.get__contentBackgroundColor,
set: spark.components.supportClasses.SkinnableTextBase.prototype.set__contentBackgroundColor},
/**
  * @export
  * @type {number} */
contentBackgroundAlpha: {
get: spark.components.supportClasses.SkinnableTextBase.prototype.get__contentBackgroundAlpha,
set: spark.components.supportClasses.SkinnableTextBase.prototype.set__contentBackgroundAlpha},
/**
  * @export
  * @type {boolean} */
borderVisible: {
get: spark.components.supportClasses.SkinnableTextBase.prototype.get__borderVisible,
set: spark.components.supportClasses.SkinnableTextBase.prototype.set__borderVisible},
/**
  * @export
  * @type {boolean} */
lineThrough: {
get: spark.components.supportClasses.SkinnableTextBase.prototype.get__lineThrough,
set: spark.components.supportClasses.SkinnableTextBase.prototype.set__lineThrough},
/**
  * @export
  * @type {string} */
textDecoration: {
get: spark.components.supportClasses.SkinnableTextBase.prototype.get__textDecoration,
set: spark.components.supportClasses.SkinnableTextBase.prototype.set__textDecoration},
/**
  * @export
  * @type {string} */
textAlignLast: {
get: spark.components.supportClasses.SkinnableTextBase.prototype.get__textAlignLast,
set: spark.components.supportClasses.SkinnableTextBase.prototype.set__textAlignLast},
/**
  * @export
  * @type {boolean} */
enabled: {
get: mx.core.UIComponent.prototype.get__enabled,
set: spark.components.supportClasses.SkinnableTextBase.prototype.set__enabled},
/**
  * @export
  * @type {boolean} */
displayAsPassword: {
get: spark.components.supportClasses.SkinnableTextBase.prototype.get__displayAsPassword,
set: spark.components.supportClasses.SkinnableTextBase.prototype.set__displayAsPassword},
/**
  * @export
  * @type {boolean} */
editable: {
get: spark.components.supportClasses.SkinnableTextBase.prototype.get__editable,
set: spark.components.supportClasses.SkinnableTextBase.prototype.set__editable},
/**
  * @export
  * @type {number} */
maxChars: {
get: spark.components.supportClasses.SkinnableTextBase.prototype.get__maxChars,
set: spark.components.supportClasses.SkinnableTextBase.prototype.set__maxChars},
/**
  * @export
  * @type {string} */
restrict: {
get: spark.components.supportClasses.SkinnableTextBase.prototype.get__restrict,
set: spark.components.supportClasses.SkinnableTextBase.prototype.set__restrict},
/**
  * @export
  * @type {number} */
selectionActivePosition: {
get: spark.components.supportClasses.SkinnableTextBase.prototype.get__selectionActivePosition},
/**
  * @export
  * @type {string} */
text: {
get: spark.components.supportClasses.SkinnableTextBase.prototype.get__text,
set: spark.components.supportClasses.SkinnableTextBase.prototype.set__text}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
spark.components.supportClasses.SkinnableTextBase.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'SkinnableTextBase', qName: 'spark.components.supportClasses.SkinnableTextBase', kind: 'class' }], interfaces: [mx.managers.IFocusManagerComponent] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
spark.components.supportClasses.SkinnableTextBase.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        'textDisplay': { type: 'spark.core.IEditableText', get_set: function (/** spark.components.supportClasses.SkinnableTextBase */ inst, /** * */ v) {return v !== undefined ? inst.textDisplay = v : inst.textDisplay;}}
      };
    },
    accessors: function () {
      return {
        'borderAlpha': { type: 'Number', access: 'readwrite', declaredBy: 'spark.components.supportClasses.SkinnableTextBase'},
        'borderColor': { type: 'uint', access: 'readwrite', declaredBy: 'spark.components.supportClasses.SkinnableTextBase'},
        'contentBackgroundColor': { type: 'uint', access: 'readwrite', declaredBy: 'spark.components.supportClasses.SkinnableTextBase'},
        'contentBackgroundAlpha': { type: 'Number', access: 'readwrite', declaredBy: 'spark.components.supportClasses.SkinnableTextBase'},
        'borderVisible': { type: 'Boolean', access: 'readwrite', declaredBy: 'spark.components.supportClasses.SkinnableTextBase'},
        'lineThrough': { type: 'Boolean', access: 'readwrite', declaredBy: 'spark.components.supportClasses.SkinnableTextBase'},
        'textDecoration': { type: 'String', access: 'readwrite', declaredBy: 'spark.components.supportClasses.SkinnableTextBase'},
        'textAlignLast': { type: 'String', access: 'readwrite', declaredBy: 'spark.components.supportClasses.SkinnableTextBase'},
        'enabled': { type: 'Boolean', access: 'writeonly', declaredBy: 'spark.components.supportClasses.SkinnableTextBase'},
        'displayAsPassword': { type: 'Boolean', access: 'readwrite', declaredBy: 'spark.components.supportClasses.SkinnableTextBase', metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'displayAsPasswordChanged' } ] } ]; }},
        'editable': { type: 'Boolean', access: 'readwrite', declaredBy: 'spark.components.supportClasses.SkinnableTextBase'},
        'maxChars': { type: 'int', access: 'readwrite', declaredBy: 'spark.components.supportClasses.SkinnableTextBase'},
        'restrict': { type: 'String', access: 'readwrite', declaredBy: 'spark.components.supportClasses.SkinnableTextBase'},
        'selectionActivePosition': { type: 'int', access: 'readonly', declaredBy: 'spark.components.supportClasses.SkinnableTextBase'},
        'text': { type: 'String', access: 'readwrite', declaredBy: 'spark.components.supportClasses.SkinnableTextBase'}
      };
    },
    methods: function () {
      return {
        'SkinnableTextBase': { type: '', declaredBy: 'spark.components.supportClasses.SkinnableTextBase'},
        'setFocus': { type: 'void', declaredBy: 'spark.components.supportClasses.SkinnableTextBase'},
        'appendText': { type: 'void', declaredBy: 'spark.components.supportClasses.SkinnableTextBase', parameters: function () { return [ 'String', false ]; }},
        'selectRange': { type: 'void', declaredBy: 'spark.components.supportClasses.SkinnableTextBase', parameters: function () { return [ 'int', false ,'int', false ]; }},
        'setContent': { type: 'void', declaredBy: 'spark.components.supportClasses.SkinnableTextBase', parameters: function () { return [ 'Object', false ]; }},
        'getTextFlow': { type: 'org.apache.royale.textLayout.elements.TextFlow', declaredBy: 'spark.components.supportClasses.SkinnableTextBase'},
        'setTextFlow': { type: 'void', declaredBy: 'spark.components.supportClasses.SkinnableTextBase', parameters: function () { return [ 'org.apache.royale.textLayout.elements.TextFlow', false ]; }},
        'setStyle': { type: 'void', declaredBy: 'spark.components.supportClasses.SkinnableTextBase', parameters: function () { return [ 'String', false ,'*', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
spark.components.supportClasses.SkinnableTextBase.prototype.ROYALE_COMPILE_FLAGS = 10;
