/**
 * Generated by Apache Royale Compiler from spark/components/supportClasses/ButtonBase.as
 * spark.components.supportClasses.ButtonBase
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('spark.components.supportClasses.ButtonBase');
/* Royale Dependency List: org.apache.royale.core.ITextModel,org.apache.royale.core.WrappedHTMLElement,org.apache.royale.html.util.addElementToWrapper,org.apache.royale.utils.Language,XML*/

goog.require('spark.components.supportClasses.SkinnableComponent');
goog.require('mx.managers.IFocusManagerComponent');



/**
 *  Constructor. 
 *  
 *  @langversion 3.0
 *  @playerversion Flash 10
 *  @playerversion AIR 1.5
 *  @productversion Flex 4
 * @constructor
 * @extends {spark.components.supportClasses.SkinnableComponent}
 * @implements {mx.managers.IFocusManagerComponent}
 */
spark.components.supportClasses.ButtonBase = function() {
  spark.components.supportClasses.ButtonBase.base(this, 'constructor');
  
};
goog.inherits(spark.components.supportClasses.ButtonBase, spark.components.supportClasses.SkinnableComponent);


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('spark.components.supportClasses.ButtonBase', spark.components.supportClasses.ButtonBase);


/**
 * @royaleignorecoercion HTMLImageElement
 * @protected
 */
spark.components.supportClasses.ButtonBase.prototype.setInnerHTML = function() {
  if (this.label != null) {
    this.element.innerHTML = this.label;
  }
  this.measuredWidth = Number.NaN;
  this.measuredHeight = Number.NaN;
};


/**
 * @royaleignorecoercion org.apache.royale.core.WrappedHTMLElement
 * @protected
 * @override
 */
spark.components.supportClasses.ButtonBase.prototype.createElement = function() {
  org.apache.royale.html.util.addElementToWrapper(this, 'button');
  this.element.setAttribute('type', 'button');
  return this.element;
};


/**
 * @private
 * @type {string}
 */
spark.components.supportClasses.ButtonBase.prototype.spark_components_supportClasses_ButtonBase__direction = "LTR";


spark.components.supportClasses.ButtonBase.prototype.get__label = function() {
  return org.apache.royale.utils.Language.as(this.model, org.apache.royale.core.ITextModel, true).text;
};


spark.components.supportClasses.ButtonBase.prototype.set__label = function(value) {
  org.apache.royale.utils.Language.as(this.model, org.apache.royale.core.ITextModel, true).text = value;
  this.setInnerHTML();
};


spark.components.supportClasses.ButtonBase.prototype.get__lineThrough = function() {
  return true;
};


spark.components.supportClasses.ButtonBase.prototype.set__lineThrough = function(val) {
};


spark.components.supportClasses.ButtonBase.prototype.get__textDecoration = function() {
  return null;
};


spark.components.supportClasses.ButtonBase.prototype.set__textDecoration = function(val) {
};


spark.components.supportClasses.ButtonBase.prototype.get__direction = function() {
  return this.spark_components_supportClasses_ButtonBase__direction;
};


spark.components.supportClasses.ButtonBase.prototype.set__direction = function(value) {
  this.spark_components_supportClasses_ButtonBase__direction = value;
};


Object.defineProperties(spark.components.supportClasses.ButtonBase.prototype, /** @lends {spark.components.supportClasses.ButtonBase.prototype} */ {
/**
  * @export
  * @type {string} */
label: {
get: spark.components.supportClasses.ButtonBase.prototype.get__label,
set: spark.components.supportClasses.ButtonBase.prototype.set__label},
/**
  * @export
  * @type {boolean} */
lineThrough: {
get: spark.components.supportClasses.ButtonBase.prototype.get__lineThrough,
set: spark.components.supportClasses.ButtonBase.prototype.set__lineThrough},
/**
  * @export
  * @type {string} */
textDecoration: {
get: spark.components.supportClasses.ButtonBase.prototype.get__textDecoration,
set: spark.components.supportClasses.ButtonBase.prototype.set__textDecoration},
/**
  * @export
  * @type {string} */
direction: {
get: spark.components.supportClasses.ButtonBase.prototype.get__direction,
set: spark.components.supportClasses.ButtonBase.prototype.set__direction}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
spark.components.supportClasses.ButtonBase.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'ButtonBase', qName: 'spark.components.supportClasses.ButtonBase', kind: 'class' }], interfaces: [mx.managers.IFocusManagerComponent] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
spark.components.supportClasses.ButtonBase.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'label': { type: 'String', access: 'readwrite', declaredBy: 'spark.components.supportClasses.ButtonBase', metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'contentChange' } ] } ]; }},
        'lineThrough': { type: 'Boolean', access: 'readwrite', declaredBy: 'spark.components.supportClasses.ButtonBase'},
        'textDecoration': { type: 'String', access: 'readwrite', declaredBy: 'spark.components.supportClasses.ButtonBase'},
        'direction': { type: 'String', access: 'readwrite', declaredBy: 'spark.components.supportClasses.ButtonBase'}
      };
    },
    methods: function () {
      return {
        'ButtonBase': { type: '', declaredBy: 'spark.components.supportClasses.ButtonBase'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
spark.components.supportClasses.ButtonBase.prototype.ROYALE_COMPILE_FLAGS = 10;
