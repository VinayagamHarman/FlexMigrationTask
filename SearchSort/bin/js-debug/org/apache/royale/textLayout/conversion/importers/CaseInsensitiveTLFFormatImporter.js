/**
 * Generated by Apache Royale Compiler from org/apache/royale/textLayout/conversion/importers/CaseInsensitiveTLFFormatImporter.as
 * org.apache.royale.textLayout.conversion.importers.CaseInsensitiveTLFFormatImporter
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.textLayout.conversion.importers.CaseInsensitiveTLFFormatImporter');
/* Royale Dependency List: XML*/

goog.require('org.apache.royale.textLayout.conversion.TLFormatImporter');



/**
 * @constructor
 * @extends {org.apache.royale.textLayout.conversion.TLFormatImporter}
 * @param {Object} classType
 * @param {Object} description
 * @param {boolean=} convertValuesToLowerCase
 */
org.apache.royale.textLayout.conversion.importers.CaseInsensitiveTLFFormatImporter = function(classType, description, convertValuesToLowerCase) {
  convertValuesToLowerCase = typeof convertValuesToLowerCase !== 'undefined' ? convertValuesToLowerCase : true;
  this.org_apache_royale_textLayout_conversion_importers_CaseInsensitiveTLFFormatImporter__convertValuesToLowerCase = convertValuesToLowerCase;
  var /** @type {Object} */ lowerCaseDescription = {};
  for (var /** @type {Object} */ prop in description) {
    lowerCaseDescription[prop.toUpperCase()] = description[prop];
  }
  org.apache.royale.textLayout.conversion.importers.CaseInsensitiveTLFFormatImporter.base(this, 'constructor', classType, lowerCaseDescription);
};
goog.inherits(org.apache.royale.textLayout.conversion.importers.CaseInsensitiveTLFFormatImporter, org.apache.royale.textLayout.conversion.TLFormatImporter);


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.royale.textLayout.conversion.importers.CaseInsensitiveTLFFormatImporter', org.apache.royale.textLayout.conversion.importers.CaseInsensitiveTLFFormatImporter);


/**
 * @private
 * @type {boolean}
 */
org.apache.royale.textLayout.conversion.importers.CaseInsensitiveTLFFormatImporter.prototype.org_apache_royale_textLayout_conversion_importers_CaseInsensitiveTLFFormatImporter__convertValuesToLowerCase;


/**
 * @export
 * @override
 */
org.apache.royale.textLayout.conversion.importers.CaseInsensitiveTLFFormatImporter.prototype.importOneFormat = function(key, val) {
  return org.apache.royale.textLayout.conversion.importers.CaseInsensitiveTLFFormatImporter.superClass_.importOneFormat.apply(this, [ key.toUpperCase(), this.org_apache_royale_textLayout_conversion_importers_CaseInsensitiveTLFFormatImporter__convertValuesToLowerCase ? val.toLowerCase() : val] );
};


/**
 * @export
 * @param {string} key
 * @return {*}
 */
org.apache.royale.textLayout.conversion.importers.CaseInsensitiveTLFFormatImporter.prototype.getFormatValue = function(key) {
  return this.result ? this.result[key.toUpperCase()] : undefined;
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.textLayout.conversion.importers.CaseInsensitiveTLFFormatImporter.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'CaseInsensitiveTLFFormatImporter', qName: 'org.apache.royale.textLayout.conversion.importers.CaseInsensitiveTLFFormatImporter', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.textLayout.conversion.importers.CaseInsensitiveTLFFormatImporter.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    methods: function () {
      return {
        'CaseInsensitiveTLFFormatImporter': { type: '', declaredBy: 'org.apache.royale.textLayout.conversion.importers.CaseInsensitiveTLFFormatImporter', parameters: function () { return [ 'Class', false ,'Object', false ,'Boolean', true ]; }},
        'importOneFormat': { type: 'Boolean', declaredBy: 'org.apache.royale.textLayout.conversion.importers.CaseInsensitiveTLFFormatImporter', parameters: function () { return [ 'String', false ,'String', false ]; }},
        'getFormatValue': { type: '*', declaredBy: 'org.apache.royale.textLayout.conversion.importers.CaseInsensitiveTLFFormatImporter', parameters: function () { return [ 'String', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.textLayout.conversion.importers.CaseInsensitiveTLFFormatImporter.prototype.ROYALE_COMPILE_FLAGS = 10;
