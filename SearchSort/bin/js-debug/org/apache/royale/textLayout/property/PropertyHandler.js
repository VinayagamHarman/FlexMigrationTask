/**
 * Generated by Apache Royale Compiler from org/apache/royale/textLayout/property/PropertyHandler.as
 * org.apache.royale.textLayout.property.PropertyHandler
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.textLayout.property.PropertyHandler');
/* Royale Dependency List: XML*/



/**
 * @constructor
 */
org.apache.royale.textLayout.property.PropertyHandler = function() {
};


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.royale.textLayout.property.PropertyHandler', org.apache.royale.textLayout.property.PropertyHandler);


/**
 * @export
 * @param {Array} rest
 * @return {Object}
 */
org.apache.royale.textLayout.property.PropertyHandler.createRange = function(rest) {
  var /** @type {Object} */ range = {};
  for (var /** @type {number} */ i = 0; i < rest.length; i++)
    range[rest[i]] = null;
  return range;
};


/**
 * @export
 * @param {Object} val
 * @return {string}
 */
org.apache.royale.textLayout.property.PropertyHandler.prototype.toXMLString = function(val) {
  return null;
};


/**
 * @export
 * @param {*} newVal
 * @return {*}
 */
org.apache.royale.textLayout.property.PropertyHandler.prototype.owningHandlerCheck = function(newVal) {
  return undefined;
};


/**
 * @export
 * @param {*} newVal
 * @return {*}
 */
org.apache.royale.textLayout.property.PropertyHandler.prototype.setHelper = function(newVal) {
  return newVal;
};


org.apache.royale.textLayout.property.PropertyHandler.prototype.get__className = function() {
  return "PropertyHandler";
};


org.apache.royale.textLayout.property.PropertyHandler.prototype.get__customXMLStringHandler = function() {
  return false;
};


org.apache.royale.textLayout.property.PropertyHandler.prototype.get__maxValue = function() {
  return NaN;
};


org.apache.royale.textLayout.property.PropertyHandler.prototype.get__minValue = function() {
  return NaN;
};


Object.defineProperties(org.apache.royale.textLayout.property.PropertyHandler.prototype, /** @lends {org.apache.royale.textLayout.property.PropertyHandler.prototype} */ {
/**
  * @export
  * @type {string} */
className: {
get: org.apache.royale.textLayout.property.PropertyHandler.prototype.get__className},
/**
  * @export
  * @type {boolean} */
customXMLStringHandler: {
get: org.apache.royale.textLayout.property.PropertyHandler.prototype.get__customXMLStringHandler},
/**
  * @export
  * @type {number} */
maxValue: {
get: org.apache.royale.textLayout.property.PropertyHandler.prototype.get__maxValue},
/**
  * @export
  * @type {number} */
minValue: {
get: org.apache.royale.textLayout.property.PropertyHandler.prototype.get__minValue}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.textLayout.property.PropertyHandler.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'PropertyHandler', qName: 'org.apache.royale.textLayout.property.PropertyHandler', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.textLayout.property.PropertyHandler.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'className': { type: 'String', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.property.PropertyHandler'},
        'customXMLStringHandler': { type: 'Boolean', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.property.PropertyHandler'},
        'maxValue': { type: 'Number', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.property.PropertyHandler'},
        'minValue': { type: 'Number', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.property.PropertyHandler'}
      };
    },
    methods: function () {
      return {
        '|createRange': { type: 'Object', declaredBy: 'org.apache.royale.textLayout.property.PropertyHandler', parameters: function () { return [ 'Array', false ]; }},
        'toXMLString': { type: 'String', declaredBy: 'org.apache.royale.textLayout.property.PropertyHandler', parameters: function () { return [ 'Object', false ]; }},
        'owningHandlerCheck': { type: '*', declaredBy: 'org.apache.royale.textLayout.property.PropertyHandler', parameters: function () { return [ '*', false ]; }},
        'setHelper': { type: '*', declaredBy: 'org.apache.royale.textLayout.property.PropertyHandler', parameters: function () { return [ '*', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.textLayout.property.PropertyHandler.prototype.ROYALE_COMPILE_FLAGS = 10;
