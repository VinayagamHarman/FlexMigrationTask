/**
 * Generated by Apache Royale Compiler from org/apache/royale/textLayout/edit/ElementRange.as
 * org.apache.royale.textLayout.edit.ElementRange
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.textLayout.edit.ElementRange');
/* Royale Dependency List: org.apache.royale.textLayout.compose.IFlowComposer,org.apache.royale.textLayout.container.IContainerController,org.apache.royale.textLayout.elements.IFlowLeafElement,org.apache.royale.textLayout.elements.IParagraphElement,org.apache.royale.textLayout.elements.ISubParagraphGroupElementBase,org.apache.royale.textLayout.elements.ITextFlow,org.apache.royale.textLayout.formats.Category,org.apache.royale.textLayout.formats.ITextLayoutFormat,org.apache.royale.textLayout.formats.TextLayoutFormat,org.apache.royale.textLayout.property.PropertyUtil,org.apache.royale.utils.Language,XML*/




/**
 * @constructor
 */
org.apache.royale.textLayout.edit.ElementRange = function() {
};


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.royale.textLayout.edit.ElementRange', org.apache.royale.textLayout.edit.ElementRange);


/**
 * @private
 * @type {number}
 */
org.apache.royale.textLayout.edit.ElementRange.prototype.org_apache_royale_textLayout_edit_ElementRange__absoluteStart = 0;


/**
 * @private
 * @type {number}
 */
org.apache.royale.textLayout.edit.ElementRange.prototype.org_apache_royale_textLayout_edit_ElementRange__absoluteEnd = 0;


/**
 * @private
 * @type {org.apache.royale.textLayout.elements.IFlowLeafElement}
 */
org.apache.royale.textLayout.edit.ElementRange.prototype.org_apache_royale_textLayout_edit_ElementRange__firstLeaf;


/**
 * @private
 * @type {org.apache.royale.textLayout.elements.IFlowLeafElement}
 */
org.apache.royale.textLayout.edit.ElementRange.prototype.org_apache_royale_textLayout_edit_ElementRange__lastLeaf;


/**
 * @private
 * @type {org.apache.royale.textLayout.elements.IParagraphElement}
 */
org.apache.royale.textLayout.edit.ElementRange.prototype.org_apache_royale_textLayout_edit_ElementRange__firstParagraph;


/**
 * @private
 * @type {org.apache.royale.textLayout.elements.IParagraphElement}
 */
org.apache.royale.textLayout.edit.ElementRange.prototype.org_apache_royale_textLayout_edit_ElementRange__lastParagraph;


/**
 * @private
 * @type {org.apache.royale.textLayout.elements.ITextFlow}
 */
org.apache.royale.textLayout.edit.ElementRange.prototype.org_apache_royale_textLayout_edit_ElementRange__textFlow;


/**
 * Gets the character format attributes that are common to all characters in the text range or current selection.
 * 
 * <p>Format attributes that do not have the same value for all characters in the element range are set to 
 * <code>null</code> in the returned TextLayoutFormat instance.</p>
 * 
 * @asreturn The common character style settings
 * 
 * @playerversion Flash 10
 * @playerversion AIR 1.5
 * @langversion 3.0
 * @export
 * @return {org.apache.royale.textLayout.formats.TextLayoutFormat}
 */
org.apache.royale.textLayout.edit.ElementRange.prototype.getCommonCharacterFormat = function() {
  var /** @type {org.apache.royale.textLayout.elements.IFlowLeafElement} */ leaf = this.firstLeaf;
  var /** @type {org.apache.royale.textLayout.formats.TextLayoutFormat} */ attr = new org.apache.royale.textLayout.formats.TextLayoutFormat(leaf.computedFormat);
  for (;;) {
    if (leaf == this.lastLeaf)
      break;
    leaf = leaf.getNextLeaf();
    attr.removeClashing(leaf.computedFormat);
  }
  return org.apache.royale.textLayout.property.PropertyUtil.extractInCategory(org.apache.royale.textLayout.formats.TextLayoutFormat, org.apache.royale.textLayout.formats.TextLayoutFormat["description"], attr, org.apache.royale.textLayout.formats.Category.CHARACTER, false);
};


/**
 * Gets the paragraph format attributes that are common to all paragraphs in the element range.
 * 
 * <p>Format attributes that do not have the same value for all paragraphs in the element range are set to 
 * <code>null</code> in the returned TextLayoutFormat instance.</p>
 * 	 
 * @asreturn The common paragraph style settings
 * 
 * @see org.apache.royale.textLayout.edit.ISelectionManager#getCommonParagraphFormat
 * 
 * @playerversion Flash 10
 * @playerversion AIR 1.5
 * @langversion 3.0
 * @export
 * @return {org.apache.royale.textLayout.formats.TextLayoutFormat}
 */
org.apache.royale.textLayout.edit.ElementRange.prototype.getCommonParagraphFormat = function() {
  var /** @type {org.apache.royale.textLayout.elements.IParagraphElement} */ para = this.firstParagraph;
  var /** @type {org.apache.royale.textLayout.formats.TextLayoutFormat} */ attr = new org.apache.royale.textLayout.formats.TextLayoutFormat(para.computedFormat);
  for (;;) {
    if (para == this.lastParagraph)
      break;
    para = this.org_apache_royale_textLayout_edit_ElementRange__textFlow.findAbsoluteParagraph((para.getAbsoluteStart() + para.textLength) >> 0);
    attr.removeClashing(para.computedFormat);
  }
  return org.apache.royale.textLayout.property.PropertyUtil.extractInCategory(org.apache.royale.textLayout.formats.TextLayoutFormat, org.apache.royale.textLayout.formats.TextLayoutFormat["description"], attr, org.apache.royale.textLayout.formats.Category.PARAGRAPH, false);
};


/**
 * Gets the container format attributes that are common to all containers in the element range.
 * 
 * <p>Format attributes that do not have the same value for all containers in the element range are set to 
 * <code>null</code> in the returned TextLayoutFormat instance.</p>
 * 	 
 * @asreturn The common paragraph style settings
 * 
 * @see org.apache.royale.textLayout.edit.ISelectionManager#getCommonParagraphFormat	 * 
 * @playerversion Flash 10
 * @playerversion AIR 1.5
 * @langversion 3.0
 * @export
 * @return {org.apache.royale.textLayout.formats.TextLayoutFormat}
 */
org.apache.royale.textLayout.edit.ElementRange.prototype.getCommonContainerFormat = function() {
  var /** @type {org.apache.royale.textLayout.compose.IFlowComposer} */ flowComposer = this.org_apache_royale_textLayout_edit_ElementRange__textFlow.flowComposer;
  if (!flowComposer)
    return null;
  var /** @type {number} */ index = flowComposer.findControllerIndexAtPosition(this.absoluteStart);
  if (index == -1)
    return null;
  var /** @type {org.apache.royale.textLayout.container.IContainerController} */ controller = flowComposer.getControllerAt(index);
  var /** @type {org.apache.royale.textLayout.formats.TextLayoutFormat} */ attr = new org.apache.royale.textLayout.formats.TextLayoutFormat(controller.computedFormat);
  while (controller.absoluteStart + controller.textLength < this.absoluteEnd) {
    index++;
    if (index == flowComposer.numControllers)
      break;
    controller = flowComposer.getControllerAt(index);
    attr.removeClashing(controller.computedFormat);
  }
  return org.apache.royale.textLayout.property.PropertyUtil.extractInCategory(org.apache.royale.textLayout.formats.TextLayoutFormat, org.apache.royale.textLayout.formats.TextLayoutFormat["description"], attr, org.apache.royale.textLayout.formats.Category.CONTAINER, false);
};


/** 
 * Creates an ElementRange object.
 * 
 * @asparam textFlow	the text flow
 * @asparam beginIndex absolute text position of the first character in the text range
 * @asparam endIndex one beyond the absolute text position of the last character in the text range
 * 
 * @playerversion Flash 10
 * @playerversion AIR 1.5
 * @langversion 3.0
 * @export
 * @param {org.apache.royale.textLayout.elements.ITextFlow} textFlow
 * @param {number} absoluteStart
 * @param {number} absoluteEnd
 * @return {org.apache.royale.textLayout.edit.ElementRange}
 */
org.apache.royale.textLayout.edit.ElementRange.createElementRange = function(textFlow, absoluteStart, absoluteEnd) {
  var /** @type {org.apache.royale.textLayout.edit.ElementRange} */ rslt = new org.apache.royale.textLayout.edit.ElementRange();
  if (absoluteStart == absoluteEnd) {
    rslt.absoluteStart = rslt.absoluteEnd = absoluteStart;
    rslt.firstLeaf = textFlow.findLeaf(rslt.absoluteStart);
    rslt.firstParagraph = rslt.firstLeaf.getParagraph();
    org.apache.royale.textLayout.edit.ElementRange.adjustForLeanLeft(rslt);
    rslt.lastLeaf = rslt.firstLeaf;
    rslt.lastParagraph = rslt.firstParagraph;
  } else {
    if (absoluteStart < absoluteEnd) {
      rslt.absoluteStart = absoluteStart;
      rslt.absoluteEnd = absoluteEnd;
    } else {
      rslt.absoluteStart = absoluteEnd;
      rslt.absoluteEnd = absoluteStart;
    }
    rslt.firstLeaf = textFlow.findLeaf(rslt.absoluteStart);
    rslt.lastLeaf = textFlow.findLeaf(rslt.absoluteEnd);
    if (((rslt.lastLeaf == null) && (rslt.absoluteEnd == textFlow.textLength)) || (rslt.absoluteEnd == rslt.lastLeaf.getAbsoluteStart()))
      rslt.lastLeaf = textFlow.findLeaf((rslt.absoluteEnd - 1) >> 0);
    rslt.firstParagraph = rslt.firstLeaf.getParagraph();
    rslt.lastParagraph = rslt.lastLeaf.getParagraph();
    if (rslt.absoluteEnd == rslt.lastParagraph.getAbsoluteStart() + rslt.lastParagraph.textLength - 1) {
      rslt.absoluteEnd++;
      rslt.lastLeaf = rslt.lastParagraph.getLastLeaf();
    }
  }
  rslt.textFlow = textFlow;
  return rslt;
};


/**
 * @private
 * @param {org.apache.royale.textLayout.edit.ElementRange} rslt
 */
org.apache.royale.textLayout.edit.ElementRange.adjustForLeanLeft = function(rslt) {
  if (rslt.firstLeaf.getAbsoluteStart() == rslt.absoluteStart) {
    var /** @type {org.apache.royale.textLayout.elements.IFlowLeafElement} */ previousNode = rslt.firstLeaf.getPreviousLeaf(rslt.firstParagraph);
    if (previousNode && previousNode.getParagraph() == rslt.firstLeaf.getParagraph()) {
      if ((!org.apache.royale.utils.Language.is(previousNode.parent, org.apache.royale.textLayout.elements.ISubParagraphGroupElementBase) || previousNode.parent.acceptTextAfter()) && (!org.apache.royale.utils.Language.is(rslt.firstLeaf.parent, org.apache.royale.textLayout.elements.ISubParagraphGroupElementBase) || previousNode.parent === rslt.firstLeaf.parent))
        rslt.firstLeaf = previousNode;
    }
  }
};


org.apache.royale.textLayout.edit.ElementRange.prototype.get__absoluteStart = function() {
  return this.org_apache_royale_textLayout_edit_ElementRange__absoluteStart;
};


org.apache.royale.textLayout.edit.ElementRange.prototype.set__absoluteStart = function(value) {
  this.org_apache_royale_textLayout_edit_ElementRange__absoluteStart = value;
};


org.apache.royale.textLayout.edit.ElementRange.prototype.get__absoluteEnd = function() {
  return this.org_apache_royale_textLayout_edit_ElementRange__absoluteEnd;
};


org.apache.royale.textLayout.edit.ElementRange.prototype.set__absoluteEnd = function(value) {
  this.org_apache_royale_textLayout_edit_ElementRange__absoluteEnd = value;
};


org.apache.royale.textLayout.edit.ElementRange.prototype.get__firstLeaf = function() {
  return this.org_apache_royale_textLayout_edit_ElementRange__firstLeaf;
};


org.apache.royale.textLayout.edit.ElementRange.prototype.set__firstLeaf = function(value) {
  this.org_apache_royale_textLayout_edit_ElementRange__firstLeaf = value;
};


org.apache.royale.textLayout.edit.ElementRange.prototype.get__lastLeaf = function() {
  return this.org_apache_royale_textLayout_edit_ElementRange__lastLeaf;
};


org.apache.royale.textLayout.edit.ElementRange.prototype.set__lastLeaf = function(value) {
  this.org_apache_royale_textLayout_edit_ElementRange__lastLeaf = value;
};


org.apache.royale.textLayout.edit.ElementRange.prototype.get__firstParagraph = function() {
  return this.org_apache_royale_textLayout_edit_ElementRange__firstParagraph;
};


org.apache.royale.textLayout.edit.ElementRange.prototype.set__firstParagraph = function(value) {
  this.org_apache_royale_textLayout_edit_ElementRange__firstParagraph = value;
};


org.apache.royale.textLayout.edit.ElementRange.prototype.get__lastParagraph = function() {
  return this.org_apache_royale_textLayout_edit_ElementRange__lastParagraph;
};


org.apache.royale.textLayout.edit.ElementRange.prototype.set__lastParagraph = function(value) {
  this.org_apache_royale_textLayout_edit_ElementRange__lastParagraph = value;
};


org.apache.royale.textLayout.edit.ElementRange.prototype.get__textFlow = function() {
  return this.org_apache_royale_textLayout_edit_ElementRange__textFlow;
};


org.apache.royale.textLayout.edit.ElementRange.prototype.set__textFlow = function(value) {
  this.org_apache_royale_textLayout_edit_ElementRange__textFlow = value;
};


org.apache.royale.textLayout.edit.ElementRange.prototype.get__containerFormat = function() {
  var /** @type {org.apache.royale.textLayout.container.IContainerController} */ container;
  var /** @type {org.apache.royale.textLayout.compose.IFlowComposer} */ flowComposer = this.org_apache_royale_textLayout_edit_ElementRange__textFlow.flowComposer;
  if (flowComposer) {
    var /** @type {number} */ idx = flowComposer.findControllerIndexAtPosition(this.absoluteStart);
    if (idx != -1)
      container = flowComposer.getControllerAt(idx);
  }
  return container ? container.computedFormat : this.org_apache_royale_textLayout_edit_ElementRange__textFlow.computedFormat;
};


org.apache.royale.textLayout.edit.ElementRange.prototype.get__paragraphFormat = function() {
  return this.firstParagraph.computedFormat;
};


org.apache.royale.textLayout.edit.ElementRange.prototype.get__characterFormat = function() {
  return this.firstLeaf.computedFormat;
};


Object.defineProperties(org.apache.royale.textLayout.edit.ElementRange.prototype, /** @lends {org.apache.royale.textLayout.edit.ElementRange.prototype} */ {
/**
  * @export
  * @type {number} */
absoluteStart: {
get: org.apache.royale.textLayout.edit.ElementRange.prototype.get__absoluteStart,
set: org.apache.royale.textLayout.edit.ElementRange.prototype.set__absoluteStart},
/**
  * @export
  * @type {number} */
absoluteEnd: {
get: org.apache.royale.textLayout.edit.ElementRange.prototype.get__absoluteEnd,
set: org.apache.royale.textLayout.edit.ElementRange.prototype.set__absoluteEnd},
/**
  * @export
  * @type {org.apache.royale.textLayout.elements.IFlowLeafElement} */
firstLeaf: {
get: org.apache.royale.textLayout.edit.ElementRange.prototype.get__firstLeaf,
set: org.apache.royale.textLayout.edit.ElementRange.prototype.set__firstLeaf},
/**
  * @export
  * @type {org.apache.royale.textLayout.elements.IFlowLeafElement} */
lastLeaf: {
get: org.apache.royale.textLayout.edit.ElementRange.prototype.get__lastLeaf,
set: org.apache.royale.textLayout.edit.ElementRange.prototype.set__lastLeaf},
/**
  * @export
  * @type {org.apache.royale.textLayout.elements.IParagraphElement} */
firstParagraph: {
get: org.apache.royale.textLayout.edit.ElementRange.prototype.get__firstParagraph,
set: org.apache.royale.textLayout.edit.ElementRange.prototype.set__firstParagraph},
/**
  * @export
  * @type {org.apache.royale.textLayout.elements.IParagraphElement} */
lastParagraph: {
get: org.apache.royale.textLayout.edit.ElementRange.prototype.get__lastParagraph,
set: org.apache.royale.textLayout.edit.ElementRange.prototype.set__lastParagraph},
/**
  * @export
  * @type {org.apache.royale.textLayout.elements.ITextFlow} */
textFlow: {
get: org.apache.royale.textLayout.edit.ElementRange.prototype.get__textFlow,
set: org.apache.royale.textLayout.edit.ElementRange.prototype.set__textFlow},
/**
  * @export
  * @type {org.apache.royale.textLayout.formats.ITextLayoutFormat} */
containerFormat: {
get: org.apache.royale.textLayout.edit.ElementRange.prototype.get__containerFormat},
/**
  * @export
  * @type {org.apache.royale.textLayout.formats.ITextLayoutFormat} */
paragraphFormat: {
get: org.apache.royale.textLayout.edit.ElementRange.prototype.get__paragraphFormat},
/**
  * @export
  * @type {org.apache.royale.textLayout.formats.ITextLayoutFormat} */
characterFormat: {
get: org.apache.royale.textLayout.edit.ElementRange.prototype.get__characterFormat}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.textLayout.edit.ElementRange.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'ElementRange', qName: 'org.apache.royale.textLayout.edit.ElementRange', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.textLayout.edit.ElementRange.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'absoluteStart': { type: 'int', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.edit.ElementRange'},
        'absoluteEnd': { type: 'int', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.edit.ElementRange'},
        'firstLeaf': { type: 'org.apache.royale.textLayout.elements.IFlowLeafElement', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.edit.ElementRange'},
        'lastLeaf': { type: 'org.apache.royale.textLayout.elements.IFlowLeafElement', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.edit.ElementRange'},
        'firstParagraph': { type: 'org.apache.royale.textLayout.elements.IParagraphElement', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.edit.ElementRange'},
        'lastParagraph': { type: 'org.apache.royale.textLayout.elements.IParagraphElement', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.edit.ElementRange'},
        'textFlow': { type: 'org.apache.royale.textLayout.elements.ITextFlow', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.edit.ElementRange'},
        'containerFormat': { type: 'org.apache.royale.textLayout.formats.ITextLayoutFormat', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.edit.ElementRange'},
        'paragraphFormat': { type: 'org.apache.royale.textLayout.formats.ITextLayoutFormat', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.edit.ElementRange'},
        'characterFormat': { type: 'org.apache.royale.textLayout.formats.ITextLayoutFormat', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.edit.ElementRange'}
      };
    },
    methods: function () {
      return {
        'getCommonCharacterFormat': { type: 'org.apache.royale.textLayout.formats.TextLayoutFormat', declaredBy: 'org.apache.royale.textLayout.edit.ElementRange'},
        'getCommonParagraphFormat': { type: 'org.apache.royale.textLayout.formats.TextLayoutFormat', declaredBy: 'org.apache.royale.textLayout.edit.ElementRange'},
        'getCommonContainerFormat': { type: 'org.apache.royale.textLayout.formats.TextLayoutFormat', declaredBy: 'org.apache.royale.textLayout.edit.ElementRange'},
        '|createElementRange': { type: 'org.apache.royale.textLayout.edit.ElementRange', declaredBy: 'org.apache.royale.textLayout.edit.ElementRange', parameters: function () { return [ 'org.apache.royale.textLayout.elements.ITextFlow', false ,'int', false ,'int', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.textLayout.edit.ElementRange.prototype.ROYALE_COMPILE_FLAGS = 10;
