/**
 * Generated by Apache Royale Compiler from org/apache/royale/textLayout/edit/Clipboard.as
 * org.apache.royale.textLayout.edit.Clipboard
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.textLayout.edit.Clipboard');
/* Royale Dependency List: org.apache.royale.events.Event,org.apache.royale.textLayout.events.EditEvent,org.apache.royale.utils.Language,XML*/




/**
 * @constructor
 */
org.apache.royale.textLayout.edit.Clipboard = function() {

this.org_apache_royale_textLayout_edit_Clipboard__formats = {};
};


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.royale.textLayout.edit.Clipboard', org.apache.royale.textLayout.edit.Clipboard);


/**
 * @private
 * @type {Object}
 */
org.apache.royale.textLayout.edit.Clipboard.prototype.org_apache_royale_textLayout_edit_Clipboard__clipElement;


/**
 * @private
 * @type {Object}
 */
org.apache.royale.textLayout.edit.Clipboard.prototype.org_apache_royale_textLayout_edit_Clipboard_currentEvent;


/**
 * @private
 * @param {org.apache.royale.events.Event} e
 */
org.apache.royale.textLayout.edit.Clipboard.prototype.org_apache_royale_textLayout_edit_Clipboard_onCopy = function(e) {
  this.org_apache_royale_textLayout_edit_Clipboard_currentEvent = e;
  if (this.org_apache_royale_textLayout_edit_Clipboard__callback)
    this.org_apache_royale_textLayout_edit_Clipboard__callback(new org.apache.royale.events.Event(org.apache.royale.textLayout.events.EditEvent.COPY));
  this.org_apache_royale_textLayout_edit_Clipboard__callback = null;
};


/**
 * @private
 * @param {org.apache.royale.events.Event} e
 */
org.apache.royale.textLayout.edit.Clipboard.prototype.org_apache_royale_textLayout_edit_Clipboard_onCut = function(e) {
  this.org_apache_royale_textLayout_edit_Clipboard_currentEvent = e;
  if (this.org_apache_royale_textLayout_edit_Clipboard__callback)
    this.org_apache_royale_textLayout_edit_Clipboard__callback(new org.apache.royale.events.Event(org.apache.royale.textLayout.events.EditEvent.CUT));
  this.org_apache_royale_textLayout_edit_Clipboard__callback = null;
};


/**
 * @private
 * @param {org.apache.royale.events.Event} e
 */
org.apache.royale.textLayout.edit.Clipboard.prototype.org_apache_royale_textLayout_edit_Clipboard_onPaste = function(e) {
  this.org_apache_royale_textLayout_edit_Clipboard_currentEvent = e;
  var /** @type {string} */ pasteboardText;
  if (window["clipboardData"]) {
    pasteboardText = org.apache.royale.utils.Language.string(window["clipboardData"].getData("Text"));
  } else if (this.org_apache_royale_textLayout_edit_Clipboard_currentEvent["clipboardData"]) {
    pasteboardText = org.apache.royale.utils.Language.string(this.org_apache_royale_textLayout_edit_Clipboard_currentEvent["clipboardData"].getData("text/plain"));
  }
  if (pasteboardText != this.getData("text/plain")) {
    this.clear();
    this.setData("text/plain", pasteboardText);
  }
  if (this.org_apache_royale_textLayout_edit_Clipboard__callback)
    this.org_apache_royale_textLayout_edit_Clipboard__callback(new org.apache.royale.events.Event(org.apache.royale.textLayout.events.EditEvent.PASTE));
  this.org_apache_royale_textLayout_edit_Clipboard__callback = null;
};


/**
 * @private
 * @type {org.apache.royale.textLayout.edit.Clipboard}
 */
org.apache.royale.textLayout.edit.Clipboard._generalClipboard;


/**
 * @private
 * @type {Object}
 */
org.apache.royale.textLayout.edit.Clipboard.prototype.org_apache_royale_textLayout_edit_Clipboard__formats;


/**
 * @export
 * @param {string} format
 * @return {boolean}
 */
org.apache.royale.textLayout.edit.Clipboard.prototype.hasFormat = function(format) {
  return this.org_apache_royale_textLayout_edit_Clipboard__formats[format] != null;
};


/**
 * @export
 * @param {string} clipboardFormat
 * @return {Object}
 */
org.apache.royale.textLayout.edit.Clipboard.prototype.getData = function(clipboardFormat) {
  return this.org_apache_royale_textLayout_edit_Clipboard__formats[clipboardFormat];
};


/**
 * @export
 */
org.apache.royale.textLayout.edit.Clipboard.prototype.clear = function() {
  this.org_apache_royale_textLayout_edit_Clipboard__formats = {};
};


/**
 * @export
 * @param {string} clipboardFormat
 * @param {Object} clipboardData
 */
org.apache.royale.textLayout.edit.Clipboard.prototype.setData = function(clipboardFormat, clipboardData) {
  this.org_apache_royale_textLayout_edit_Clipboard__formats[clipboardFormat] = clipboardData;
  if (clipboardFormat == "text/plain") {
    if (window["clipboardData"]) {
      window["clipboardData"].setData("Text", clipboardData);
    } else if (this.org_apache_royale_textLayout_edit_Clipboard_currentEvent["clipboardData"]) {
      this.org_apache_royale_textLayout_edit_Clipboard_currentEvent["clipboardData"].setData("text/plain", clipboardData);
    }
  }
};


/**
 * @export
 */
org.apache.royale.textLayout.edit.Clipboard.prototype.preventDefault = function() {
  if (this.org_apache_royale_textLayout_edit_Clipboard_currentEvent)
    this.org_apache_royale_textLayout_edit_Clipboard_currentEvent.preventDefault();
};


/**
 * @private
 * @type {Function}
 */
org.apache.royale.textLayout.edit.Clipboard.prototype.org_apache_royale_textLayout_edit_Clipboard__callback;


/**
 * @export
 * @param {Function} callback
 */
org.apache.royale.textLayout.edit.Clipboard.prototype.registerCallback = function(callback) {
  this.org_apache_royale_textLayout_edit_Clipboard__callback = callback;
};


org.apache.royale.textLayout.edit.Clipboard.prototype.get__clipElement = function() {
  return this.org_apache_royale_textLayout_edit_Clipboard__clipElement;
};


org.apache.royale.textLayout.edit.Clipboard.prototype.set__clipElement = function(value) {
  if (!this.org_apache_royale_textLayout_edit_Clipboard__clipElement) {
    document["addEventListener"]('cut', org.apache.royale.utils.Language.closure(this.org_apache_royale_textLayout_edit_Clipboard_onCut, this, 'org_apache_royale_textLayout_edit_Clipboard_onCut'));
    document["addEventListener"]('copy', org.apache.royale.utils.Language.closure(this.org_apache_royale_textLayout_edit_Clipboard_onCopy, this, 'org_apache_royale_textLayout_edit_Clipboard_onCopy'));
    document["addEventListener"]('paste', org.apache.royale.utils.Language.closure(this.org_apache_royale_textLayout_edit_Clipboard_onPaste, this, 'org_apache_royale_textLayout_edit_Clipboard_onPaste'));
  }
  this.org_apache_royale_textLayout_edit_Clipboard__clipElement = value;
};


Object.defineProperties(org.apache.royale.textLayout.edit.Clipboard.prototype, /** @lends {org.apache.royale.textLayout.edit.Clipboard.prototype} */ {
/**
  * @export
  * @type {Object} */
clipElement: {
get: org.apache.royale.textLayout.edit.Clipboard.prototype.get__clipElement,
set: org.apache.royale.textLayout.edit.Clipboard.prototype.set__clipElement}}
);


org.apache.royale.textLayout.edit.Clipboard.get__generalClipboard = function() {
  if (org.apache.royale.textLayout.edit.Clipboard._generalClipboard == null)
    org.apache.royale.textLayout.edit.Clipboard._generalClipboard = new org.apache.royale.textLayout.edit.Clipboard();
  return org.apache.royale.textLayout.edit.Clipboard._generalClipboard;
};


Object.defineProperties(org.apache.royale.textLayout.edit.Clipboard, /** @lends {org.apache.royale.textLayout.edit.Clipboard} */ {
/**
  * @export
  * @type {org.apache.royale.textLayout.edit.Clipboard} */
generalClipboard: {
get: org.apache.royale.textLayout.edit.Clipboard.get__generalClipboard}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.textLayout.edit.Clipboard.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'Clipboard', qName: 'org.apache.royale.textLayout.edit.Clipboard', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.textLayout.edit.Clipboard.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'clipElement': { type: 'Object', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.edit.Clipboard'},
        '|generalClipboard': { type: 'org.apache.royale.textLayout.edit.Clipboard', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.edit.Clipboard'}
      };
    },
    methods: function () {
      return {
        'hasFormat': { type: 'Boolean', declaredBy: 'org.apache.royale.textLayout.edit.Clipboard', parameters: function () { return [ 'String', false ]; }},
        'getData': { type: 'Object', declaredBy: 'org.apache.royale.textLayout.edit.Clipboard', parameters: function () { return [ 'String', false ]; }},
        'clear': { type: 'void', declaredBy: 'org.apache.royale.textLayout.edit.Clipboard'},
        'setData': { type: 'void', declaredBy: 'org.apache.royale.textLayout.edit.Clipboard', parameters: function () { return [ 'String', false ,'Object', false ]; }},
        'preventDefault': { type: 'void', declaredBy: 'org.apache.royale.textLayout.edit.Clipboard'},
        'registerCallback': { type: 'void', declaredBy: 'org.apache.royale.textLayout.edit.Clipboard', parameters: function () { return [ 'Function', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.textLayout.edit.Clipboard.prototype.ROYALE_COMPILE_FLAGS = 10;
