/**
 * Generated by Apache Royale Compiler from org/apache/royale/textLayout/edit/mementos/SplitMemento.as
 * org.apache.royale.textLayout.edit.mementos.SplitMemento
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.textLayout.edit.mementos.SplitMemento');
/* Royale Dependency List: org.apache.royale.textLayout.edit.ElementMark,org.apache.royale.textLayout.edit.ModelEdit,org.apache.royale.textLayout.edit.mementos.InternalSplitFGEMemento,org.apache.royale.textLayout.elements.ElementHelper,org.apache.royale.textLayout.elements.FlowGroupElement,org.apache.royale.textLayout.elements.IContainerFormattedElement,org.apache.royale.textLayout.elements.IFlowGroupElement,org.apache.royale.textLayout.elements.IListItemElement,org.apache.royale.textLayout.elements.IParagraphElement,org.apache.royale.textLayout.elements.ITextFlow,org.apache.royale.utils.Language,XML*/

goog.require('org.apache.royale.textLayout.edit.IMemento');
goog.require('org.apache.royale.textLayout.edit.mementos.BaseMemento');



/**
 * @constructor
 * @extends {org.apache.royale.textLayout.edit.mementos.BaseMemento}
 * @implements {org.apache.royale.textLayout.edit.IMemento}
 * @param {org.apache.royale.textLayout.elements.ITextFlow} textFlow
 * @param {org.apache.royale.textLayout.edit.ElementMark} target
 * @param {Array} mementoList
 */
org.apache.royale.textLayout.edit.mementos.SplitMemento = function(textFlow, target, mementoList) {
  org.apache.royale.textLayout.edit.mementos.SplitMemento.base(this, 'constructor', textFlow);
  this.org_apache_royale_textLayout_edit_mementos_SplitMemento__target = target;
  this.org_apache_royale_textLayout_edit_mementos_SplitMemento__mementoList = mementoList;
};
goog.inherits(org.apache.royale.textLayout.edit.mementos.SplitMemento, org.apache.royale.textLayout.edit.mementos.BaseMemento);


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.royale.textLayout.edit.mementos.SplitMemento', org.apache.royale.textLayout.edit.mementos.SplitMemento);


/**
 * @private
 * @type {Array}
 */
org.apache.royale.textLayout.edit.mementos.SplitMemento.prototype.org_apache_royale_textLayout_edit_mementos_SplitMemento__mementoList;


/**
 * @private
 * @type {org.apache.royale.textLayout.edit.ElementMark}
 */
org.apache.royale.textLayout.edit.mementos.SplitMemento.prototype.org_apache_royale_textLayout_edit_mementos_SplitMemento__target;


/**
 * @export
 * @param {org.apache.royale.textLayout.elements.ITextFlow} textFlow
 * @param {org.apache.royale.textLayout.elements.IFlowGroupElement} elemToSplit
 * @param {number} relativePosition
 * @param {boolean} createMemento
 * @return {*}
 */
org.apache.royale.textLayout.edit.mementos.SplitMemento.perform = function(textFlow, elemToSplit, relativePosition, createMemento) {
  var /** @type {org.apache.royale.textLayout.edit.ElementMark} */ target = new org.apache.royale.textLayout.edit.ElementMark(elemToSplit, relativePosition);
  var /** @type {Array} */ mementoList = [];
  var /** @type {org.apache.royale.textLayout.elements.IFlowGroupElement} */ newChild = org.apache.royale.textLayout.edit.mementos.SplitMemento.performInternal(textFlow, target, createMemento ? mementoList : null);
  if (createMemento)
    return new org.apache.royale.textLayout.edit.mementos.SplitMemento(textFlow, target, mementoList);
  return newChild;
};


/**
 * @royaleignorecoercion org.apache.royale.textLayout.elements.IFlowGroupElement
 * @royaleignorecoercion org.apache.royale.textLayout.elements.IListItemElement
 * @private
 * @param {Object} elem
 * @return {boolean}
 */
org.apache.royale.textLayout.edit.mementos.SplitMemento.testValidLeadingParagraph = function(elem) {
  if (elem.className == "ListItemElement")
    return !elem.normalizeNeedsInitialParagraph();
  while (elem && !(elem.className == "ParagraphElement"))
    elem = elem.getChildAt(0);
  return elem.className == "ParagraphElement";
};


/**
 * @royaleignorecoercion org.apache.royale.textLayout.elements.IFlowGroupElement
 * @export
 * @param {org.apache.royale.textLayout.elements.ITextFlow} textFlow
 * @param {org.apache.royale.textLayout.edit.ElementMark} target
 * @param {Array} mementoList
 * @return {org.apache.royale.textLayout.elements.FlowGroupElement}
 */
org.apache.royale.textLayout.edit.mementos.SplitMemento.performInternal = function(textFlow, target, mementoList) {
  var /** @type {Object} */ targetElement = target.findElement(textFlow);
  var /** @type {Object} */ child = (target.elemStart == targetElement.textLength ? targetElement.getLastLeaf() : targetElement.findLeaf(target.elemStart)).parent;
  var /** @type {org.apache.royale.textLayout.elements.FlowGroupElement} */ newChild;
  var /** @type {number} */ splitStart = target.elemStart;
  var /** @type {org.apache.royale.textLayout.edit.IMemento} */ memento;
  for (;;) {
    var /** @type {number} */ splitPos = (splitStart - (child.getAbsoluteStart() - targetElement.getAbsoluteStart())) >> 0;
    var /** @type {org.apache.royale.textLayout.edit.mementos.InternalSplitFGEMemento} */ splitMemento = org.apache.royale.textLayout.edit.mementos.InternalSplitFGEMemento.perform(textFlow, child, splitPos, true);
    if (mementoList)
      mementoList.push(splitMemento);
    newChild = splitMemento.newSibling;
    if (org.apache.royale.utils.Language.is(child, org.apache.royale.textLayout.elements.IParagraphElement) && !(target.elemStart == targetElement.textLength)) {
      splitStart++;
    } else if (org.apache.royale.utils.Language.is(child, org.apache.royale.textLayout.elements.IContainerFormattedElement)) {
      if (!org.apache.royale.textLayout.edit.mementos.SplitMemento.testValidLeadingParagraph(child)) {
        memento = org.apache.royale.textLayout.edit.ModelEdit.addElement(textFlow, org.apache.royale.textLayout.elements.ElementHelper.getParagraph(), child, 0);
        if (mementoList)
          mementoList.push(memento);
        splitStart++;
      }
      if (!org.apache.royale.textLayout.edit.mementos.SplitMemento.testValidLeadingParagraph(newChild)) {
        memento = org.apache.royale.textLayout.edit.ModelEdit.addElement(textFlow, org.apache.royale.textLayout.elements.ElementHelper.getParagraph(), newChild, 0);
        if (mementoList)
          mementoList.push(memento);
      }
    }
    if (child == targetElement)
      break;
    child = child.parent;
  }
  return newChild;
};


/**
 * @export
 * @return {*}
 */
org.apache.royale.textLayout.edit.mementos.SplitMemento.prototype.undo = function() {
  this.org_apache_royale_textLayout_edit_mementos_SplitMemento__mementoList.reverse();
  var foreachiter0_target = this.org_apache_royale_textLayout_edit_mementos_SplitMemento__mementoList;
  for (var foreachiter0 in foreachiter0_target) 
  {
  var memento = foreachiter0_target[foreachiter0];
  
    memento.undo();}
  
  this.org_apache_royale_textLayout_edit_mementos_SplitMemento__mementoList.reverse();
};


/**
 * @export
 * @return {*}
 */
org.apache.royale.textLayout.edit.mementos.SplitMemento.prototype.redo = function() {
  return org.apache.royale.textLayout.edit.mementos.SplitMemento.performInternal(this._textFlow, this.org_apache_royale_textLayout_edit_mementos_SplitMemento__target, null);
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.textLayout.edit.mementos.SplitMemento.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'SplitMemento', qName: 'org.apache.royale.textLayout.edit.mementos.SplitMemento', kind: 'class' }], interfaces: [org.apache.royale.textLayout.edit.IMemento] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.textLayout.edit.mementos.SplitMemento.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    methods: function () {
      return {
        'SplitMemento': { type: '', declaredBy: 'org.apache.royale.textLayout.edit.mementos.SplitMemento', parameters: function () { return [ 'org.apache.royale.textLayout.elements.ITextFlow', false ,'org.apache.royale.textLayout.edit.ElementMark', false ,'Array', false ]; }},
        '|perform': { type: '*', declaredBy: 'org.apache.royale.textLayout.edit.mementos.SplitMemento', parameters: function () { return [ 'org.apache.royale.textLayout.elements.ITextFlow', false ,'org.apache.royale.textLayout.elements.IFlowGroupElement', false ,'int', false ,'Boolean', false ]; }},
        '|performInternal': { type: 'org.apache.royale.textLayout.elements.FlowGroupElement', declaredBy: 'org.apache.royale.textLayout.edit.mementos.SplitMemento', parameters: function () { return [ 'org.apache.royale.textLayout.elements.ITextFlow', false ,'org.apache.royale.textLayout.edit.ElementMark', false ,'Array', false ]; }},
        'undo': { type: '*', declaredBy: 'org.apache.royale.textLayout.edit.mementos.SplitMemento'},
        'redo': { type: '*', declaredBy: 'org.apache.royale.textLayout.edit.mementos.SplitMemento'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.textLayout.edit.mementos.SplitMemento.prototype.ROYALE_COMPILE_FLAGS = 10;
