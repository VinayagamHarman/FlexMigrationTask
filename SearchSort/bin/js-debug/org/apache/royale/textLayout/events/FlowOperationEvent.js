/**
 * Generated by Apache Royale Compiler from org/apache/royale/textLayout/events/FlowOperationEvent.as
 * org.apache.royale.textLayout.events.FlowOperationEvent
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.textLayout.events.FlowOperationEvent');
/* Royale Dependency List: org.apache.royale.events.IRoyaleEvent,org.apache.royale.textLayout.operations.FlowOperation,XML*/

goog.require('org.apache.royale.events.Event');



/** Creates an event object that contains information about a flow operation.
 * @asparam type			The type of the event. Event listeners can access this information through the
 * inherited <code>type</code> property. There are two types: 
 * <code>FlowOperationEvent.FLOW_OPERATION_BEGIN</code>; 
 * <code>FlowOperationEvent.FLOW_OPERATION_END</code>.
 * @asparam bubbles 		Indicates whether an event is a bubbling event.This event does not bubble.
 * @asparam cancelable 	Indicates whether the behavior associated with the event can be prevented.
 * This event can be cancelled by calling the <code>Event.preventDefault()</code> method in
 * your event handler function.
 * @asparam operation		The FlowOperation that is about to commence or that has just ended.
 * @asparam error			Any Error generating during the operation.
 * @playerversion Flash 10
 * @playerversion AIR 1.5
 * @langversion 3.0 
 * @constructor
 * @extends {org.apache.royale.events.Event}
 * @param {string} type
 * @param {boolean=} bubbles
 * @param {boolean=} cancelable
 * @param {org.apache.royale.textLayout.operations.FlowOperation=} operation
 * @param {number=} level
 * @param {Error=} error
 */
org.apache.royale.textLayout.events.FlowOperationEvent = function(type, bubbles, cancelable, operation, level, error) {
  bubbles = typeof bubbles !== 'undefined' ? bubbles : false;
  cancelable = typeof cancelable !== 'undefined' ? cancelable : false;
  operation = typeof operation !== 'undefined' ? operation : null;
  level = typeof level !== 'undefined' ? level : 0;
  error = typeof error !== 'undefined' ? error : null;
  this.org_apache_royale_textLayout_events_FlowOperationEvent__op = operation;
  this.org_apache_royale_textLayout_events_FlowOperationEvent__e = error;
  this.org_apache_royale_textLayout_events_FlowOperationEvent__level = level;
  org.apache.royale.textLayout.events.FlowOperationEvent.base(this, 'constructor', type, bubbles, cancelable);
};
goog.inherits(org.apache.royale.textLayout.events.FlowOperationEvent, org.apache.royale.events.Event);


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.royale.textLayout.events.FlowOperationEvent', org.apache.royale.textLayout.events.FlowOperationEvent);


/**
 * @export
 * @nocollapse
 * @const
 * @type {string}
 */
org.apache.royale.textLayout.events.FlowOperationEvent.FLOW_OPERATION_BEGIN = "flowOperationBegin";


/**
 * @export
 * @nocollapse
 * @const
 * @type {string}
 */
org.apache.royale.textLayout.events.FlowOperationEvent.FLOW_OPERATION_END = "flowOperationEnd";


/**
 * @export
 * @nocollapse
 * @const
 * @type {string}
 */
org.apache.royale.textLayout.events.FlowOperationEvent.FLOW_OPERATION_COMPLETE = "flowOperationComplete";


/**
 * @private
 * @type {org.apache.royale.textLayout.operations.FlowOperation}
 */
org.apache.royale.textLayout.events.FlowOperationEvent.prototype.org_apache_royale_textLayout_events_FlowOperationEvent__op;


/**
 * @private
 * @type {Error}
 */
org.apache.royale.textLayout.events.FlowOperationEvent.prototype.org_apache_royale_textLayout_events_FlowOperationEvent__e;


/**
 * @private
 * @type {number}
 */
org.apache.royale.textLayout.events.FlowOperationEvent.prototype.org_apache_royale_textLayout_events_FlowOperationEvent__level = 0;


/** @asprivate 
 * @export
 * @override
 */
org.apache.royale.textLayout.events.FlowOperationEvent.prototype.cloneEvent = function() {
  return new org.apache.royale.textLayout.events.FlowOperationEvent(this.type, this.bubbles, this.cancelable, this.org_apache_royale_textLayout_events_FlowOperationEvent__op, this.org_apache_royale_textLayout_events_FlowOperationEvent__level, this.org_apache_royale_textLayout_events_FlowOperationEvent__e);
};


org.apache.royale.textLayout.events.FlowOperationEvent.prototype.get__operation = function() {
  return this.org_apache_royale_textLayout_events_FlowOperationEvent__op;
};


org.apache.royale.textLayout.events.FlowOperationEvent.prototype.set__operation = function(value) {
  this.org_apache_royale_textLayout_events_FlowOperationEvent__op = value;
};


org.apache.royale.textLayout.events.FlowOperationEvent.prototype.get__error = function() {
  return this.org_apache_royale_textLayout_events_FlowOperationEvent__e;
};


org.apache.royale.textLayout.events.FlowOperationEvent.prototype.set__error = function(value) {
  this.org_apache_royale_textLayout_events_FlowOperationEvent__e = value;
};


org.apache.royale.textLayout.events.FlowOperationEvent.prototype.get__level = function() {
  return this.org_apache_royale_textLayout_events_FlowOperationEvent__level;
};


org.apache.royale.textLayout.events.FlowOperationEvent.prototype.set__level = function(value) {
  this.org_apache_royale_textLayout_events_FlowOperationEvent__level = value;
};


Object.defineProperties(org.apache.royale.textLayout.events.FlowOperationEvent.prototype, /** @lends {org.apache.royale.textLayout.events.FlowOperationEvent.prototype} */ {
/**
  * @export
  * @type {org.apache.royale.textLayout.operations.FlowOperation} */
operation: {
get: org.apache.royale.textLayout.events.FlowOperationEvent.prototype.get__operation,
set: org.apache.royale.textLayout.events.FlowOperationEvent.prototype.set__operation},
/**
  * @export
  * @type {Error} */
error: {
get: org.apache.royale.textLayout.events.FlowOperationEvent.prototype.get__error,
set: org.apache.royale.textLayout.events.FlowOperationEvent.prototype.set__error},
/**
  * @export
  * @type {number} */
level: {
get: org.apache.royale.textLayout.events.FlowOperationEvent.prototype.get__level,
set: org.apache.royale.textLayout.events.FlowOperationEvent.prototype.set__level}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.textLayout.events.FlowOperationEvent.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'FlowOperationEvent', qName: 'org.apache.royale.textLayout.events.FlowOperationEvent', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.textLayout.events.FlowOperationEvent.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'operation': { type: 'org.apache.royale.textLayout.operations.FlowOperation', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.events.FlowOperationEvent'},
        'error': { type: 'Error', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.events.FlowOperationEvent'},
        'level': { type: 'int', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.events.FlowOperationEvent'}
      };
    },
    methods: function () {
      return {
        'FlowOperationEvent': { type: '', declaredBy: 'org.apache.royale.textLayout.events.FlowOperationEvent', parameters: function () { return [ 'String', false ,'Boolean', true ,'Boolean', true ,'org.apache.royale.textLayout.operations.FlowOperation', true ,'int', true ,'Error', true ]; }},
        'cloneEvent': { type: 'org.apache.royale.events.IRoyaleEvent', declaredBy: 'org.apache.royale.textLayout.events.FlowOperationEvent'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.textLayout.events.FlowOperationEvent.prototype.ROYALE_COMPILE_FLAGS = 10;
