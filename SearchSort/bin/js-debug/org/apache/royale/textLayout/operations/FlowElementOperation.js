/**
 * Generated by Apache Royale Compiler from org/apache/royale/textLayout/operations/FlowElementOperation.as
 * org.apache.royale.textLayout.operations.FlowElementOperation
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.textLayout.operations.FlowElementOperation');
/* Royale Dependency List: org.apache.royale.textLayout.edit.SelectionState,org.apache.royale.textLayout.elements.FlowGroupElement,org.apache.royale.textLayout.elements.IFlowElement,org.apache.royale.textLayout.elements.SpanElement,org.apache.royale.utils.Language,XML*/

goog.require('org.apache.royale.textLayout.operations.FlowTextOperation');



/** 
 * Creates a FlowElementOperation object.
 *  
 * @asparam operationState Specifies the TextFlow object this operation acts upon.
 * @asparam targetElement Specifies the element this operation modifies.
 * @asparam relativeStart An offset from the beginning of the <code>targetElement</code>.
 * @asparam relativeEnd An offset from the end of the <code>targetElement</code>.
 * 
 * @playerversion Flash 10
 * @playerversion AIR 1.5
 * @langversion 3.0 
 * @constructor
 * @extends {org.apache.royale.textLayout.operations.FlowTextOperation}
 * @param {org.apache.royale.textLayout.edit.SelectionState} operationState
 * @param {org.apache.royale.textLayout.elements.IFlowElement} targetElement
 * @param {number=} relativeStart
 * @param {number=} relativeEnd
 */
org.apache.royale.textLayout.operations.FlowElementOperation = function(operationState, targetElement, relativeStart, relativeEnd) {
  relativeStart = typeof relativeStart !== 'undefined' ? relativeStart : 0;
  relativeEnd = typeof relativeEnd !== 'undefined' ? relativeEnd : -1;
  org.apache.royale.textLayout.operations.FlowElementOperation.base(this, 'constructor', operationState);
  this.org_apache_royale_textLayout_operations_FlowElementOperation_initialize(targetElement, relativeStart, relativeEnd);
  
};
goog.inherits(org.apache.royale.textLayout.operations.FlowElementOperation, org.apache.royale.textLayout.operations.FlowTextOperation);


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.royale.textLayout.operations.FlowElementOperation', org.apache.royale.textLayout.operations.FlowElementOperation);


/**
 * @private
 * @type {number}
 */
org.apache.royale.textLayout.operations.FlowElementOperation.prototype.org_apache_royale_textLayout_operations_FlowElementOperation_nestLevel = 0;


/**
 * @private
 * @type {number}
 */
org.apache.royale.textLayout.operations.FlowElementOperation.prototype.org_apache_royale_textLayout_operations_FlowElementOperation_absStart = 0;


/**
 * @private
 * @type {number}
 */
org.apache.royale.textLayout.operations.FlowElementOperation.prototype.org_apache_royale_textLayout_operations_FlowElementOperation_absEnd = 0;


/**
 * @private
 * @type {number}
 */
org.apache.royale.textLayout.operations.FlowElementOperation.prototype.org_apache_royale_textLayout_operations_FlowElementOperation_origAbsStart = 0;


/**
 * @private
 * @type {number}
 */
org.apache.royale.textLayout.operations.FlowElementOperation.prototype.org_apache_royale_textLayout_operations_FlowElementOperation_origAbsEnd = 0;


/**
 * @private
 * @type {boolean}
 */
org.apache.royale.textLayout.operations.FlowElementOperation.prototype.org_apache_royale_textLayout_operations_FlowElementOperation_firstTime = true;


/**
 * @private
 * @type {boolean}
 */
org.apache.royale.textLayout.operations.FlowElementOperation.prototype.org_apache_royale_textLayout_operations_FlowElementOperation_splitAtStart = false;


/**
 * @private
 * @type {boolean}
 */
org.apache.royale.textLayout.operations.FlowElementOperation.prototype.org_apache_royale_textLayout_operations_FlowElementOperation_splitAtEnd = false;


/**
 * @private
 * @type {number}
 */
org.apache.royale.textLayout.operations.FlowElementOperation.prototype.org_apache_royale_textLayout_operations_FlowElementOperation__relStart = 0;


/**
 * @private
 * @type {number}
 */
org.apache.royale.textLayout.operations.FlowElementOperation.prototype.org_apache_royale_textLayout_operations_FlowElementOperation__relEnd = -1;


/**
 * @private
 * @param {org.apache.royale.textLayout.elements.IFlowElement} targetElement
 * @param {number} relativeStart
 * @param {number} relativeEnd
 */
org.apache.royale.textLayout.operations.FlowElementOperation.prototype.org_apache_royale_textLayout_operations_FlowElementOperation_initialize = function(targetElement, relativeStart, relativeEnd) {
  this.targetElement = targetElement;
  this.relativeEnd = relativeEnd;
  this.relativeStart = relativeStart;
  if (relativeEnd == -1)
    relativeEnd = targetElement.textLength;
  
  
  
  if (org.apache.royale.utils.Language.is(targetElement, org.apache.royale.textLayout.elements.SpanElement) && org.apache.royale.utils.Language.as(targetElement, org.apache.royale.textLayout.elements.SpanElement, true).hasParagraphTerminator && relativeEnd == targetElement.textLength - 1)
    relativeEnd += 1;
  this.org_apache_royale_textLayout_operations_FlowElementOperation_origAbsStart = this.org_apache_royale_textLayout_operations_FlowElementOperation_absStart = (targetElement.getAbsoluteStart() + relativeStart) >> 0;
  this.org_apache_royale_textLayout_operations_FlowElementOperation_origAbsEnd = this.org_apache_royale_textLayout_operations_FlowElementOperation_absEnd = (this.org_apache_royale_textLayout_operations_FlowElementOperation_absStart - relativeStart + relativeEnd) >> 0;
};


/** @asprivate 
 * @protected
 * @return {org.apache.royale.textLayout.elements.IFlowElement}
 */
org.apache.royale.textLayout.operations.FlowElementOperation.prototype.getTargetElement = function() {
  var /** @type {org.apache.royale.textLayout.elements.IFlowElement} */ element = this.targetElement;
  var /** @type {number} */ elemStart = element.getAbsoluteStart();
  var /** @type {org.apache.royale.textLayout.elements.IFlowElement} */ splitElement;
  if (this.org_apache_royale_textLayout_operations_FlowElementOperation_absEnd != elemStart + element.textLength) {
    splitElement = element.splitAtPosition((this.org_apache_royale_textLayout_operations_FlowElementOperation_absEnd - elemStart) >> 0);
    if (this.org_apache_royale_textLayout_operations_FlowElementOperation_firstTime && splitElement != element)
      this.org_apache_royale_textLayout_operations_FlowElementOperation_splitAtEnd = true;
  }
  if (this.org_apache_royale_textLayout_operations_FlowElementOperation_absStart != elemStart) {
    splitElement = element.splitAtPosition((this.org_apache_royale_textLayout_operations_FlowElementOperation_absStart - elemStart) >> 0);
    if (splitElement != element) {
      if (this.org_apache_royale_textLayout_operations_FlowElementOperation_firstTime)
        this.org_apache_royale_textLayout_operations_FlowElementOperation_splitAtStart = true;
      element = splitElement;
    }
  }
  this.org_apache_royale_textLayout_operations_FlowElementOperation_firstTime = false;
  return element;
};


/** @asprivate 
 * @protected
 * @param {org.apache.royale.textLayout.elements.IFlowElement} targetElement
 */
org.apache.royale.textLayout.operations.FlowElementOperation.prototype.adjustForDoOperation = function(targetElement) {
  this.org_apache_royale_textLayout_operations_FlowElementOperation_absStart = targetElement.getAbsoluteStart();
  this.org_apache_royale_textLayout_operations_FlowElementOperation_absEnd = (this.org_apache_royale_textLayout_operations_FlowElementOperation_absStart + targetElement.textLength) >> 0;
};


/** @asprivate 
 * @protected
 * @param {org.apache.royale.textLayout.elements.IFlowElement} targetElement
 */
org.apache.royale.textLayout.operations.FlowElementOperation.prototype.adjustForUndoOperation = function(targetElement) {
  if ((this.org_apache_royale_textLayout_operations_FlowElementOperation_splitAtEnd || this.org_apache_royale_textLayout_operations_FlowElementOperation_splitAtStart) && org.apache.royale.utils.Language.is(targetElement, org.apache.royale.textLayout.elements.FlowGroupElement)) {
    var /** @type {number} */ targetIdx = targetElement.parent.getChildIndex(targetElement);
    var /** @type {org.apache.royale.textLayout.elements.FlowGroupElement} */ workElem;
    var /** @type {org.apache.royale.textLayout.elements.IFlowElement} */ child;
    if (this.org_apache_royale_textLayout_operations_FlowElementOperation_splitAtEnd) {
      workElem = targetElement.parent.getChildAt((targetIdx + 1) >> 0);
      while (workElem.numChildren) {
        child = workElem.getChildAt(0);
        workElem.removeChildAt(0);
        org.apache.royale.utils.Language.as(targetElement, org.apache.royale.textLayout.elements.FlowGroupElement, true).addChild(child);
      }
      targetElement.parent.removeChildAt((targetIdx + 1) >>> 0);
    }
    if (this.org_apache_royale_textLayout_operations_FlowElementOperation_splitAtStart) {
      workElem = targetElement.parent.getChildAt((targetIdx - 1) >> 0);
      while (org.apache.royale.utils.Language.as(targetElement, org.apache.royale.textLayout.elements.FlowGroupElement, true).numChildren) {
        child = org.apache.royale.utils.Language.as(targetElement, org.apache.royale.textLayout.elements.FlowGroupElement, true).getChildAt(0);
        org.apache.royale.utils.Language.as(targetElement, org.apache.royale.textLayout.elements.FlowGroupElement, true).removeChildAt(0);
        workElem.addChild(child);
      }
      targetElement.parent.removeChildAt((targetIdx) >>> 0);
    }
  }
  this.org_apache_royale_textLayout_operations_FlowElementOperation_absStart = this.org_apache_royale_textLayout_operations_FlowElementOperation_origAbsStart;
  this.org_apache_royale_textLayout_operations_FlowElementOperation_absEnd = this.org_apache_royale_textLayout_operations_FlowElementOperation_origAbsEnd;
};


org.apache.royale.textLayout.operations.FlowElementOperation.prototype.get__targetElement = function() {
  var /** @type {org.apache.royale.textLayout.elements.IFlowElement} */ element = this.originalSelectionState.textFlow;
  for (var /** @type {number} */ i = this.org_apache_royale_textLayout_operations_FlowElementOperation_nestLevel; i > 0; i--) {
    var /** @type {org.apache.royale.textLayout.elements.FlowGroupElement} */ groupElement = element;
    element = groupElement.getChildAt(groupElement.findChildIndexAtPosition((this.org_apache_royale_textLayout_operations_FlowElementOperation_absStart - element.getAbsoluteStart()) >> 0));
  }
  return element;
};


org.apache.royale.textLayout.operations.FlowElementOperation.prototype.set__targetElement = function(value) {
  this.org_apache_royale_textLayout_operations_FlowElementOperation_nestLevel = 0;
  for (var /** @type {org.apache.royale.textLayout.elements.IFlowElement} */ element = value; element.parent != null; element = element.parent)
    ++this.org_apache_royale_textLayout_operations_FlowElementOperation_nestLevel;
};


org.apache.royale.textLayout.operations.FlowElementOperation.prototype.get__relativeStart = function() {
  return this.org_apache_royale_textLayout_operations_FlowElementOperation__relStart;
};


org.apache.royale.textLayout.operations.FlowElementOperation.prototype.set__relativeStart = function(value) {
  this.org_apache_royale_textLayout_operations_FlowElementOperation__relStart = value;
};


org.apache.royale.textLayout.operations.FlowElementOperation.prototype.get__relativeEnd = function() {
  return this.org_apache_royale_textLayout_operations_FlowElementOperation__relEnd;
};


org.apache.royale.textLayout.operations.FlowElementOperation.prototype.set__relativeEnd = function(value) {
  this.org_apache_royale_textLayout_operations_FlowElementOperation__relEnd = value;
};


Object.defineProperties(org.apache.royale.textLayout.operations.FlowElementOperation.prototype, /** @lends {org.apache.royale.textLayout.operations.FlowElementOperation.prototype} */ {
/**
  * @export
  * @type {org.apache.royale.textLayout.elements.IFlowElement} */
targetElement: {
get: org.apache.royale.textLayout.operations.FlowElementOperation.prototype.get__targetElement,
set: org.apache.royale.textLayout.operations.FlowElementOperation.prototype.set__targetElement},
/**
  * @export
  * @type {number} */
relativeStart: {
get: org.apache.royale.textLayout.operations.FlowElementOperation.prototype.get__relativeStart,
set: org.apache.royale.textLayout.operations.FlowElementOperation.prototype.set__relativeStart},
/**
  * @export
  * @type {number} */
relativeEnd: {
get: org.apache.royale.textLayout.operations.FlowElementOperation.prototype.get__relativeEnd,
set: org.apache.royale.textLayout.operations.FlowElementOperation.prototype.set__relativeEnd}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.textLayout.operations.FlowElementOperation.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'FlowElementOperation', qName: 'org.apache.royale.textLayout.operations.FlowElementOperation', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.textLayout.operations.FlowElementOperation.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'targetElement': { type: 'org.apache.royale.textLayout.elements.IFlowElement', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.operations.FlowElementOperation'},
        'relativeStart': { type: 'int', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.operations.FlowElementOperation'},
        'relativeEnd': { type: 'int', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.operations.FlowElementOperation'}
      };
    },
    methods: function () {
      return {
        'FlowElementOperation': { type: '', declaredBy: 'org.apache.royale.textLayout.operations.FlowElementOperation', parameters: function () { return [ 'org.apache.royale.textLayout.edit.SelectionState', false ,'org.apache.royale.textLayout.elements.IFlowElement', false ,'int', true ,'int', true ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.textLayout.operations.FlowElementOperation.prototype.ROYALE_COMPILE_FLAGS = 10;
