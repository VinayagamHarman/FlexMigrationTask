/**
 * Generated by Apache Royale Compiler from org/apache/royale/textLayout/operations/CopyOperation.as
 * org.apache.royale.textLayout.operations.CopyOperation
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.textLayout.operations.CopyOperation');
/* Royale Dependency List: org.apache.royale.textLayout.edit.SelectionState,org.apache.royale.textLayout.edit.TextClipboard,org.apache.royale.textLayout.edit.TextScrap,XML*/

goog.require('org.apache.royale.textLayout.operations.FlowTextOperation');



/** 
 * Creates a CopyOperation object.
 * 
 * @asparam operationState The range of text to be copied.
 * 
 * @playerversion Flash 10
 * @playerversion AIR 1.5
 * @langversion 3.0 
 * @constructor
 * @extends {org.apache.royale.textLayout.operations.FlowTextOperation}
 * @param {org.apache.royale.textLayout.edit.SelectionState} operationState
 */
org.apache.royale.textLayout.operations.CopyOperation = function(operationState) {
  org.apache.royale.textLayout.operations.CopyOperation.base(this, 'constructor', operationState);
};
goog.inherits(org.apache.royale.textLayout.operations.CopyOperation, org.apache.royale.textLayout.operations.FlowTextOperation);


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.royale.textLayout.operations.CopyOperation', org.apache.royale.textLayout.operations.CopyOperation);


/** @asprivate 
 * @export
 * @override
 */
org.apache.royale.textLayout.operations.CopyOperation.prototype.doOperation = function() {
  if (this.originalSelectionState.activePosition != this.originalSelectionState.anchorPosition)
    org.apache.royale.textLayout.edit.TextClipboard.setContents(org.apache.royale.textLayout.edit.TextScrap.createTextScrap(this.originalSelectionState));
  return true;
};


/** @asprivate 
 * @export
 * @override
 */
org.apache.royale.textLayout.operations.CopyOperation.prototype.undo = function() {
  return this.originalSelectionState;
};


/** @asprivate 
 * @export
 * @override
 */
org.apache.royale.textLayout.operations.CopyOperation.prototype.redo = function() {
  return this.originalSelectionState;
};


/** @asprivate 
 * @export
 * @override
 */
org.apache.royale.textLayout.operations.CopyOperation.prototype.canUndo = function() {
  return false;
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.textLayout.operations.CopyOperation.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'CopyOperation', qName: 'org.apache.royale.textLayout.operations.CopyOperation', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.textLayout.operations.CopyOperation.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    methods: function () {
      return {
        'CopyOperation': { type: '', declaredBy: 'org.apache.royale.textLayout.operations.CopyOperation', parameters: function () { return [ 'org.apache.royale.textLayout.edit.SelectionState', false ]; }},
        'doOperation': { type: 'Boolean', declaredBy: 'org.apache.royale.textLayout.operations.CopyOperation'},
        'undo': { type: 'org.apache.royale.textLayout.edit.SelectionState', declaredBy: 'org.apache.royale.textLayout.operations.CopyOperation'},
        'redo': { type: 'org.apache.royale.textLayout.edit.SelectionState', declaredBy: 'org.apache.royale.textLayout.operations.CopyOperation'},
        'canUndo': { type: 'Boolean', declaredBy: 'org.apache.royale.textLayout.operations.CopyOperation'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.textLayout.operations.CopyOperation.prototype.ROYALE_COMPILE_FLAGS = 10;
