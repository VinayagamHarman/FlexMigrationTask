/**
 * Generated by Apache Royale Compiler from org/apache/royale/textLayout/operations/MoveChildrenOperation.as
 * org.apache.royale.textLayout.operations.MoveChildrenOperation
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.textLayout.operations.MoveChildrenOperation');
/* Royale Dependency List: org.apache.royale.textLayout.edit.MementoList,org.apache.royale.textLayout.edit.ModelEdit,org.apache.royale.textLayout.edit.SelectionState,org.apache.royale.textLayout.elements.IFlowGroupElement,org.apache.royale.textLayout.elements.ListElement,org.apache.royale.textLayout.elements.ListItemElement,org.apache.royale.textLayout.elements.TextFlow,org.apache.royale.utils.Language,XML*/

goog.require('org.apache.royale.textLayout.operations.FlowTextOperation');



/** 
 * Creates a MoveChildrenOperation object. 
 * 
 * <p>This operation moves a consecutive number of children of source into the destination
 * context.  Also, if moving the children leaves the source element with no children, then
 * source will be removed.  The removal is done recursively such that if source's parent
 * becomes empty from the removal of source, it too will be deleted, and on up the parent chain.</p>
 * 
 * @asparam operationState Specifies the SelectionState of this operation
 * @asparam source Specifies the parent of the item(s) to move.
 * @asparam sourceIndex Specifies the index of the first item to move.
 * @asparam numChildren Specifies the number of children to move.
 * @asparam destination Specifies the new parent of the items.
 * @asparam destinationIndex Specifies the new child index of the first element.
 * 
 * @playerversion Flash 10
 * @playerversion AIR 1.5
 * @langversion 3.0 
 * @constructor
 * @extends {org.apache.royale.textLayout.operations.FlowTextOperation}
 * @param {org.apache.royale.textLayout.edit.SelectionState} operationState
 * @param {org.apache.royale.textLayout.elements.IFlowGroupElement} source
 * @param {number} sourceIndex
 * @param {number} numChildren
 * @param {org.apache.royale.textLayout.elements.IFlowGroupElement} destination
 * @param {number} destinationIndex
 */
org.apache.royale.textLayout.operations.MoveChildrenOperation = function(operationState, source, sourceIndex, numChildren, destination, destinationIndex) {
  org.apache.royale.textLayout.operations.MoveChildrenOperation.base(this, 'constructor', operationState);
  this.org_apache_royale_textLayout_operations_MoveChildrenOperation__source = source;
  this.org_apache_royale_textLayout_operations_MoveChildrenOperation__sourceIndex = sourceIndex;
  this.org_apache_royale_textLayout_operations_MoveChildrenOperation__numChildren = numChildren;
  this.org_apache_royale_textLayout_operations_MoveChildrenOperation__destination = destination;
  this.org_apache_royale_textLayout_operations_MoveChildrenOperation__destinationIndex = destinationIndex;
  this.org_apache_royale_textLayout_operations_MoveChildrenOperation__mementoList = new org.apache.royale.textLayout.edit.MementoList(operationState.textFlow);
};
goog.inherits(org.apache.royale.textLayout.operations.MoveChildrenOperation, org.apache.royale.textLayout.operations.FlowTextOperation);


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.royale.textLayout.operations.MoveChildrenOperation', org.apache.royale.textLayout.operations.MoveChildrenOperation);


/**
 * @private
 * @type {org.apache.royale.textLayout.elements.IFlowGroupElement}
 */
org.apache.royale.textLayout.operations.MoveChildrenOperation.prototype.org_apache_royale_textLayout_operations_MoveChildrenOperation__source;


/**
 * @private
 * @type {number}
 */
org.apache.royale.textLayout.operations.MoveChildrenOperation.prototype.org_apache_royale_textLayout_operations_MoveChildrenOperation__sourceIndex = 0;


/**
 * @private
 * @type {number}
 */
org.apache.royale.textLayout.operations.MoveChildrenOperation.prototype.org_apache_royale_textLayout_operations_MoveChildrenOperation__numChildren = 0;


/**
 * @private
 * @type {org.apache.royale.textLayout.elements.IFlowGroupElement}
 */
org.apache.royale.textLayout.operations.MoveChildrenOperation.prototype.org_apache_royale_textLayout_operations_MoveChildrenOperation__destination;


/**
 * @private
 * @type {number}
 */
org.apache.royale.textLayout.operations.MoveChildrenOperation.prototype.org_apache_royale_textLayout_operations_MoveChildrenOperation__destinationIndex = 0;


/**
 * @private
 * @type {org.apache.royale.textLayout.edit.MementoList}
 */
org.apache.royale.textLayout.operations.MoveChildrenOperation.prototype.org_apache_royale_textLayout_operations_MoveChildrenOperation__mementoList;


/**
 *  @asprivate
 * @royaleignorecoercion org.apache.royale.textLayout.elements.IFlowGroupElement
 * @export
 * @override
 */
org.apache.royale.textLayout.operations.MoveChildrenOperation.prototype.doOperation = function() {
  var /** @type {number} */ idx = 0;
  
  var /** @type {Object} */ insertContext;
  for (var /** @type {number} */ count = 0; count < this.org_apache_royale_textLayout_operations_MoveChildrenOperation__numChildren; count++) {
    if (org.apache.royale.utils.Language.is(this.org_apache_royale_textLayout_operations_MoveChildrenOperation__source.getChildAt(this.org_apache_royale_textLayout_operations_MoveChildrenOperation__sourceIndex), org.apache.royale.textLayout.elements.ListItemElement) && !org.apache.royale.utils.Language.is(this.org_apache_royale_textLayout_operations_MoveChildrenOperation__destination, org.apache.royale.textLayout.elements.ListElement)) {
      for (var /** @type {number} */ count2 = 0; count2 = this.org_apache_royale_textLayout_operations_MoveChildrenOperation__source.getChildAt(this.org_apache_royale_textLayout_operations_MoveChildrenOperation__sourceIndex).numChildren; count2++) {
        this.org_apache_royale_textLayout_operations_MoveChildrenOperation__mementoList.push(org.apache.royale.textLayout.edit.ModelEdit.moveElement(this.textFlow, this.org_apache_royale_textLayout_operations_MoveChildrenOperation__source.getChildAt(this.org_apache_royale_textLayout_operations_MoveChildrenOperation__sourceIndex).getChildAt(0), this.org_apache_royale_textLayout_operations_MoveChildrenOperation__destination, this.org_apache_royale_textLayout_operations_MoveChildrenOperation__destinationIndex++));
      }
      this.org_apache_royale_textLayout_operations_MoveChildrenOperation__mementoList.push(org.apache.royale.textLayout.edit.ModelEdit.removeElements(this.textFlow, this.org_apache_royale_textLayout_operations_MoveChildrenOperation__source, this.org_apache_royale_textLayout_operations_MoveChildrenOperation__sourceIndex, 1));
    } else {
      this.org_apache_royale_textLayout_operations_MoveChildrenOperation__mementoList.push(org.apache.royale.textLayout.edit.ModelEdit.moveElement(this.textFlow, this.org_apache_royale_textLayout_operations_MoveChildrenOperation__source.getChildAt(this.org_apache_royale_textLayout_operations_MoveChildrenOperation__sourceIndex), this.org_apache_royale_textLayout_operations_MoveChildrenOperation__destination, this.org_apache_royale_textLayout_operations_MoveChildrenOperation__destinationIndex++));
    }
  }
  var /** @type {Object} */ parent = this.org_apache_royale_textLayout_operations_MoveChildrenOperation__source;
  //var /** @type {number} */ idx = 0;
  while (parent.numChildren == 0 && !org.apache.royale.utils.Language.is(parent, org.apache.royale.textLayout.elements.TextFlow)) {
    idx = parent.parent.getChildIndex(parent);
    parent = parent.parent;
    this.org_apache_royale_textLayout_operations_MoveChildrenOperation__mementoList.push(org.apache.royale.textLayout.edit.ModelEdit.removeElements(this.textFlow, parent, idx, 1));
    insertContext = parent;
  }
  if (org.apache.royale.utils.Language.is(parent, org.apache.royale.textLayout.elements.ListElement)) {
    insertContext = parent.parent;
    idx = parent.parent.getChildIndex(parent);
  }
  return true;
};


/** @asprivate 
 * @export
 * @override
 */
org.apache.royale.textLayout.operations.MoveChildrenOperation.prototype.undo = function() {
  this.org_apache_royale_textLayout_operations_MoveChildrenOperation__mementoList.undo();
  return this.originalSelectionState;
};


/** @asprivate 
 * @export
 * @override
 */
org.apache.royale.textLayout.operations.MoveChildrenOperation.prototype.redo = function() {
  this.org_apache_royale_textLayout_operations_MoveChildrenOperation__mementoList.redo();
  return this.originalSelectionState;
};


org.apache.royale.textLayout.operations.MoveChildrenOperation.prototype.get__source = function() {
  return this.org_apache_royale_textLayout_operations_MoveChildrenOperation__source;
};


org.apache.royale.textLayout.operations.MoveChildrenOperation.prototype.set__source = function(val) {
  this.org_apache_royale_textLayout_operations_MoveChildrenOperation__source = val;
};


org.apache.royale.textLayout.operations.MoveChildrenOperation.prototype.get__sourceIndex = function() {
  return this.org_apache_royale_textLayout_operations_MoveChildrenOperation__sourceIndex;
};


org.apache.royale.textLayout.operations.MoveChildrenOperation.prototype.set__sourceIndex = function(val) {
  this.org_apache_royale_textLayout_operations_MoveChildrenOperation__sourceIndex = val;
};


org.apache.royale.textLayout.operations.MoveChildrenOperation.prototype.get__numChildren = function() {
  return this.org_apache_royale_textLayout_operations_MoveChildrenOperation__numChildren;
};


org.apache.royale.textLayout.operations.MoveChildrenOperation.prototype.set__numChildren = function(val) {
  this.org_apache_royale_textLayout_operations_MoveChildrenOperation__numChildren = val;
};


org.apache.royale.textLayout.operations.MoveChildrenOperation.prototype.get__destination = function() {
  return this.org_apache_royale_textLayout_operations_MoveChildrenOperation__destination;
};


org.apache.royale.textLayout.operations.MoveChildrenOperation.prototype.set__destination = function(val) {
  this.org_apache_royale_textLayout_operations_MoveChildrenOperation__destination = val;
};


org.apache.royale.textLayout.operations.MoveChildrenOperation.prototype.get__destinationIndex = function() {
  return this.org_apache_royale_textLayout_operations_MoveChildrenOperation__destinationIndex;
};


org.apache.royale.textLayout.operations.MoveChildrenOperation.prototype.set__destinationIndex = function(val) {
  this.org_apache_royale_textLayout_operations_MoveChildrenOperation__destinationIndex = val;
};


Object.defineProperties(org.apache.royale.textLayout.operations.MoveChildrenOperation.prototype, /** @lends {org.apache.royale.textLayout.operations.MoveChildrenOperation.prototype} */ {
/**
  * @export
  * @type {org.apache.royale.textLayout.elements.IFlowGroupElement} */
source: {
get: org.apache.royale.textLayout.operations.MoveChildrenOperation.prototype.get__source,
set: org.apache.royale.textLayout.operations.MoveChildrenOperation.prototype.set__source},
/**
  * @export
  * @type {number} */
sourceIndex: {
get: org.apache.royale.textLayout.operations.MoveChildrenOperation.prototype.get__sourceIndex,
set: org.apache.royale.textLayout.operations.MoveChildrenOperation.prototype.set__sourceIndex},
/**
  * @export
  * @type {number} */
numChildren: {
get: org.apache.royale.textLayout.operations.MoveChildrenOperation.prototype.get__numChildren,
set: org.apache.royale.textLayout.operations.MoveChildrenOperation.prototype.set__numChildren},
/**
  * @export
  * @type {org.apache.royale.textLayout.elements.IFlowGroupElement} */
destination: {
get: org.apache.royale.textLayout.operations.MoveChildrenOperation.prototype.get__destination,
set: org.apache.royale.textLayout.operations.MoveChildrenOperation.prototype.set__destination},
/**
  * @export
  * @type {number} */
destinationIndex: {
get: org.apache.royale.textLayout.operations.MoveChildrenOperation.prototype.get__destinationIndex,
set: org.apache.royale.textLayout.operations.MoveChildrenOperation.prototype.set__destinationIndex}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.textLayout.operations.MoveChildrenOperation.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'MoveChildrenOperation', qName: 'org.apache.royale.textLayout.operations.MoveChildrenOperation', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.textLayout.operations.MoveChildrenOperation.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'source': { type: 'org.apache.royale.textLayout.elements.IFlowGroupElement', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.operations.MoveChildrenOperation'},
        'sourceIndex': { type: 'int', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.operations.MoveChildrenOperation'},
        'numChildren': { type: 'int', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.operations.MoveChildrenOperation'},
        'destination': { type: 'org.apache.royale.textLayout.elements.IFlowGroupElement', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.operations.MoveChildrenOperation'},
        'destinationIndex': { type: 'int', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.operations.MoveChildrenOperation'}
      };
    },
    methods: function () {
      return {
        'MoveChildrenOperation': { type: '', declaredBy: 'org.apache.royale.textLayout.operations.MoveChildrenOperation', parameters: function () { return [ 'org.apache.royale.textLayout.edit.SelectionState', false ,'org.apache.royale.textLayout.elements.IFlowGroupElement', false ,'int', false ,'int', false ,'org.apache.royale.textLayout.elements.IFlowGroupElement', false ,'int', false ]; }},
        'doOperation': { type: 'Boolean', declaredBy: 'org.apache.royale.textLayout.operations.MoveChildrenOperation'},
        'undo': { type: 'org.apache.royale.textLayout.edit.SelectionState', declaredBy: 'org.apache.royale.textLayout.operations.MoveChildrenOperation'},
        'redo': { type: 'org.apache.royale.textLayout.edit.SelectionState', declaredBy: 'org.apache.royale.textLayout.operations.MoveChildrenOperation'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.textLayout.operations.MoveChildrenOperation.prototype.ROYALE_COMPILE_FLAGS = 10;
