/**
 * Generated by Apache Royale Compiler from org/apache/royale/textLayout/operations/InsertTableElementOperation.as
 * org.apache.royale.textLayout.operations.InsertTableElementOperation
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.textLayout.operations.InsertTableElementOperation');
/* Royale Dependency List: org.apache.royale.textLayout.edit.MementoList,org.apache.royale.textLayout.edit.ModelEdit,org.apache.royale.textLayout.edit.PointFormat,org.apache.royale.textLayout.edit.SelectionState,org.apache.royale.textLayout.elements.FlowGroupElement,org.apache.royale.textLayout.elements.IFlowGroupElement,org.apache.royale.textLayout.elements.ITableElement,org.apache.royale.textLayout.formats.ITextLayoutFormat,XML*/

goog.require('org.apache.royale.textLayout.operations.FlowTextOperation');



/**
 * @constructor
 * @extends {org.apache.royale.textLayout.operations.FlowTextOperation}
 * @param {org.apache.royale.textLayout.edit.SelectionState} operationState
 * @param {org.apache.royale.textLayout.elements.ITableElement} table
 */
org.apache.royale.textLayout.operations.InsertTableElementOperation = function(operationState, table) {
  org.apache.royale.textLayout.operations.InsertTableElementOperation.base(this, 'constructor', operationState);
  this.org_apache_royale_textLayout_operations_InsertTableElementOperation__mementoList = new org.apache.royale.textLayout.edit.MementoList(operationState.textFlow);
  this.org_apache_royale_textLayout_operations_InsertTableElementOperation__table = table;
};
goog.inherits(org.apache.royale.textLayout.operations.InsertTableElementOperation, org.apache.royale.textLayout.operations.FlowTextOperation);


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.royale.textLayout.operations.InsertTableElementOperation', org.apache.royale.textLayout.operations.InsertTableElementOperation);


/**
 * @private
 * @type {org.apache.royale.textLayout.elements.ITableElement}
 */
org.apache.royale.textLayout.operations.InsertTableElementOperation.prototype.org_apache_royale_textLayout_operations_InsertTableElementOperation__table;


/**
 * @private
 * @type {number}
 */
org.apache.royale.textLayout.operations.InsertTableElementOperation.prototype.org_apache_royale_textLayout_operations_InsertTableElementOperation_selPos = 0;


/**
 * @private
 * @type {org.apache.royale.textLayout.edit.MementoList}
 */
org.apache.royale.textLayout.operations.InsertTableElementOperation.prototype.org_apache_royale_textLayout_operations_InsertTableElementOperation__mementoList;


/**
 * @private
 * @type {org.apache.royale.textLayout.edit.SelectionState}
 */
org.apache.royale.textLayout.operations.InsertTableElementOperation.prototype.org_apache_royale_textLayout_operations_InsertTableElementOperation__postOpSelectionState;


/** @asprivate 
 * @export
 * @override
 */
org.apache.royale.textLayout.operations.InsertTableElementOperation.prototype.doOperation = function() {
  var /** @type {number} */ endChildIndex = 0;
  var /** @type {org.apache.royale.textLayout.formats.ITextLayoutFormat} */ pointFormat;
  this.org_apache_royale_textLayout_operations_InsertTableElementOperation_selPos = this.absoluteStart;
  if (this.absoluteStart != this.absoluteEnd) {
    var /** @type {org.apache.royale.textLayout.edit.PointFormat} */ deleteFormat = new org.apache.royale.textLayout.edit.PointFormat(this.textFlow.findLeaf(this.absoluteStart).format);
    this.org_apache_royale_textLayout_operations_InsertTableElementOperation__mementoList.push(org.apache.royale.textLayout.edit.ModelEdit.deleteText(this.textFlow, this.absoluteStart, this.absoluteEnd, true));
    pointFormat = deleteFormat;
  }
  else
    pointFormat = this.originalSelectionState.pointFormat;
  var /** @type {org.apache.royale.textLayout.elements.IFlowGroupElement} */ target = this.textFlow;
  var /** @type {number} */ begStart = this.absoluteStart;
  var /** @type {number} */ begChildIndex = 0;
  //var /** @type {number} */ endChildIndex = 0;
  var /** @type {org.apache.royale.textLayout.elements.FlowGroupElement} */ child;
  if (begStart >= 0) {
    begChildIndex = target.findChildIndexAtPosition(begStart);
    child = target.getChildAt(begChildIndex);
    this.org_apache_royale_textLayout_operations_InsertTableElementOperation__mementoList.push(org.apache.royale.textLayout.edit.ModelEdit.splitElement(this.textFlow, child, (begStart - child.parentRelativeStart) >> 0));
  }
  if (begStart >= target.textLength - 1)
    endChildIndex = target.numChildren;
  else
    endChildIndex = (begChildIndex + 1) >> 0;
  if (begChildIndex == target.numChildren) {
    child = target.getChildAt((target.numChildren - 1) >> 0);
    this.org_apache_royale_textLayout_operations_InsertTableElementOperation__mementoList.push(org.apache.royale.textLayout.edit.ModelEdit.addElement(this.textFlow, this.org_apache_royale_textLayout_operations_InsertTableElementOperation__table, target, target.numChildren));
  } else {
    this.org_apache_royale_textLayout_operations_InsertTableElementOperation__mementoList.push(org.apache.royale.textLayout.edit.ModelEdit.addElement(this.textFlow, this.org_apache_royale_textLayout_operations_InsertTableElementOperation__table, target, endChildIndex));
  }
  if (this.originalSelectionState.selectionManagerOperationState && this.textFlow.interactionManager) {
    this.textFlow.normalize();
    this.org_apache_royale_textLayout_operations_InsertTableElementOperation__postOpSelectionState = new org.apache.royale.textLayout.edit.SelectionState(this.textFlow, this.org_apache_royale_textLayout_operations_InsertTableElementOperation__table.getAbsoluteStart(), this.org_apache_royale_textLayout_operations_InsertTableElementOperation__table.getAbsoluteStart() + this.org_apache_royale_textLayout_operations_InsertTableElementOperation__table.textLength - 1);
    this.textFlow.interactionManager.setSelectionState(this.org_apache_royale_textLayout_operations_InsertTableElementOperation__postOpSelectionState);
  }
  return true;
};


/** @asprivate 
 * @export
 * @override
 */
org.apache.royale.textLayout.operations.InsertTableElementOperation.prototype.undo = function() {
  this.org_apache_royale_textLayout_operations_InsertTableElementOperation__mementoList.undo();
  return this.originalSelectionState;
};


/**
 * Re-executes the operation after it has been undone.
 * 
 * <p>This function is called by the edit manager, when necessary.</p>
 * 
 * @playerversion Flash 10
 * @playerversion AIR 1.5
 * @langversion 3.0 
 * @export
 * @override
 */
org.apache.royale.textLayout.operations.InsertTableElementOperation.prototype.redo = function() {
  this.org_apache_royale_textLayout_operations_InsertTableElementOperation__mementoList.redo();
  return this.org_apache_royale_textLayout_operations_InsertTableElementOperation__postOpSelectionState;
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.textLayout.operations.InsertTableElementOperation.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'InsertTableElementOperation', qName: 'org.apache.royale.textLayout.operations.InsertTableElementOperation', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.textLayout.operations.InsertTableElementOperation.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    methods: function () {
      return {
        'InsertTableElementOperation': { type: '', declaredBy: 'org.apache.royale.textLayout.operations.InsertTableElementOperation', parameters: function () { return [ 'org.apache.royale.textLayout.edit.SelectionState', false ,'org.apache.royale.textLayout.elements.ITableElement', false ]; }},
        'doOperation': { type: 'Boolean', declaredBy: 'org.apache.royale.textLayout.operations.InsertTableElementOperation'},
        'undo': { type: 'org.apache.royale.textLayout.edit.SelectionState', declaredBy: 'org.apache.royale.textLayout.operations.InsertTableElementOperation'},
        'redo': { type: 'org.apache.royale.textLayout.edit.SelectionState', declaredBy: 'org.apache.royale.textLayout.operations.InsertTableElementOperation'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.textLayout.operations.InsertTableElementOperation.prototype.ROYALE_COMPILE_FLAGS = 10;
