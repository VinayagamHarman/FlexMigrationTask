/**
 * Generated by Apache Royale Compiler from org/apache/royale/textLayout/operations/CreateListOperation.as
 * org.apache.royale.textLayout.operations.CreateListOperation
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.textLayout.operations.CreateListOperation');
/* Royale Dependency List: org.apache.royale.textLayout.edit.ElementMark,org.apache.royale.textLayout.edit.MementoList,org.apache.royale.textLayout.edit.ModelEdit,org.apache.royale.textLayout.edit.SelectionState,org.apache.royale.textLayout.elements.ElementHelper,org.apache.royale.textLayout.elements.IFlowGroupElement,org.apache.royale.textLayout.elements.IListElement,org.apache.royale.textLayout.elements.IListItemElement,org.apache.royale.textLayout.elements.IParagraphElement,org.apache.royale.textLayout.elements.ISubParagraphGroupElementBase,org.apache.royale.textLayout.formats.ITextLayoutFormat,org.apache.royale.utils.Language,XML*/

goog.require('org.apache.royale.textLayout.operations.FlowTextOperation');



/** 
 * Creates an CreateListOperation object.
 * 
 * @playerversion Flash 10
 * @playerversion AIR 1.5
 * @langversion 3.0 
 * @constructor
 * @extends {org.apache.royale.textLayout.operations.FlowTextOperation}
 * @param {org.apache.royale.textLayout.edit.SelectionState} operationState
 * @param {org.apache.royale.textLayout.elements.IFlowGroupElement=} parent
 * @param {org.apache.royale.textLayout.formats.ITextLayoutFormat=} listFormat
 */
org.apache.royale.textLayout.operations.CreateListOperation = function(operationState, parent, listFormat) {
  parent = typeof parent !== 'undefined' ? parent : null;
  listFormat = typeof listFormat !== 'undefined' ? listFormat : null;
  org.apache.royale.textLayout.operations.CreateListOperation.base(this, 'constructor', operationState);
  this.parent = parent;
  this.org_apache_royale_textLayout_operations_CreateListOperation__listFormat = listFormat;
  this.org_apache_royale_textLayout_operations_CreateListOperation__mementoList = new org.apache.royale.textLayout.edit.MementoList(operationState.textFlow);
};
goog.inherits(org.apache.royale.textLayout.operations.CreateListOperation, org.apache.royale.textLayout.operations.FlowTextOperation);


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.royale.textLayout.operations.CreateListOperation', org.apache.royale.textLayout.operations.CreateListOperation);


/**
 * @private
 * @type {org.apache.royale.textLayout.edit.ElementMark}
 */
org.apache.royale.textLayout.operations.CreateListOperation.prototype.org_apache_royale_textLayout_operations_CreateListOperation__listParentMarker;


/**
 * @private
 * @type {org.apache.royale.textLayout.edit.MementoList}
 */
org.apache.royale.textLayout.operations.CreateListOperation.prototype.org_apache_royale_textLayout_operations_CreateListOperation__mementoList;


/**
 * @private
 * @type {org.apache.royale.textLayout.formats.ITextLayoutFormat}
 */
org.apache.royale.textLayout.operations.CreateListOperation.prototype.org_apache_royale_textLayout_operations_CreateListOperation__listFormat;


/**
 * @private
 * @type {org.apache.royale.textLayout.elements.IListElement}
 */
org.apache.royale.textLayout.operations.CreateListOperation.prototype.org_apache_royale_textLayout_operations_CreateListOperation__listElement;


/**
 * @private
 * @type {org.apache.royale.textLayout.edit.SelectionState}
 */
org.apache.royale.textLayout.operations.CreateListOperation.prototype.org_apache_royale_textLayout_operations_CreateListOperation__postOpSelectionState;


/**
 *  @asprivate
 * @royaleignorecoercion org.apache.royale.textLayout.elements.IFlowGroupElement
 * @export
 * @override
 */
org.apache.royale.textLayout.operations.CreateListOperation.prototype.doOperation = function() {
  var /** @type {number} */ endChildIndex = 0;
  var /** @type {Object} */ target = this.parent;
  var /** @type {number} */ begChildIndex = 0;
  var /** @type {number} */ begStart = (this.absoluteStart - target.getAbsoluteStart()) >> 0;
  
  //var /** @type {number} */ endChildIndex = 0;
  var /** @type {number} */ endStart = (this.absoluteEnd - target.getAbsoluteStart()) >> 0;
  
  var /** @type {Object} */ child;
  if (begStart > 0) {
    begChildIndex = target.findChildIndexAtPosition(begStart);
    child = target.getChildAt(begChildIndex);
    if (child.parentRelativeStart != begStart) {
      this.org_apache_royale_textLayout_operations_CreateListOperation__mementoList.push(org.apache.royale.textLayout.edit.ModelEdit.splitElement(this.textFlow, child, (begStart - child.parentRelativeStart) >> 0));
      if (org.apache.royale.utils.Language.is(child, org.apache.royale.textLayout.elements.IParagraphElement))
        endStart++;
      begChildIndex++;
    }
  }
  if (endStart >= 0) {
    if (endStart >= target.textLength - 1)
      endChildIndex = target.numChildren; else {
      endChildIndex = target.findChildIndexAtPosition(endStart);
      child = target.getChildAt(endChildIndex);
      if (child.parentRelativeStart != endStart) {
        this.org_apache_royale_textLayout_operations_CreateListOperation__mementoList.push(org.apache.royale.textLayout.edit.ModelEdit.splitElement(this.textFlow, child, (endStart - child.parentRelativeStart) >> 0));
        endChildIndex++;
      }
    }
  }
  else
    endChildIndex = (begChildIndex + 1) >> 0;
  this.org_apache_royale_textLayout_operations_CreateListOperation__listElement = org.apache.royale.textLayout.elements.ElementHelper.getList();
  this.org_apache_royale_textLayout_operations_CreateListOperation__listElement.format = this.listFormat;
  var /** @type {org.apache.royale.textLayout.elements.IListItemElement} */ listItem;
  if (begChildIndex == target.numChildren) {
    child = target.getChildAt((target.numChildren - 1) >> 0);
    this.org_apache_royale_textLayout_operations_CreateListOperation__mementoList.push(org.apache.royale.textLayout.edit.ModelEdit.splitElement(this.textFlow, child, child.textLength));
    this.org_apache_royale_textLayout_operations_CreateListOperation__mementoList.push(org.apache.royale.textLayout.edit.ModelEdit.addElement(this.textFlow, this.org_apache_royale_textLayout_operations_CreateListOperation__listElement, target, target.numChildren));
    if (!org.apache.royale.utils.Language.is(child, org.apache.royale.textLayout.elements.IListItemElement)) {
      listItem = org.apache.royale.textLayout.elements.ElementHelper.getListItem();
      this.org_apache_royale_textLayout_operations_CreateListOperation__mementoList.push(org.apache.royale.textLayout.edit.ModelEdit.addElement(this.textFlow, listItem, this.org_apache_royale_textLayout_operations_CreateListOperation__listElement, this.org_apache_royale_textLayout_operations_CreateListOperation__listElement.numChildren));
      this.org_apache_royale_textLayout_operations_CreateListOperation__mementoList.push(org.apache.royale.textLayout.edit.ModelEdit.moveElement(this.textFlow, child, listItem, listItem.numChildren));
      if (listItem.normalizeNeedsInitialParagraph())
        this.org_apache_royale_textLayout_operations_CreateListOperation__mementoList.push(org.apache.royale.textLayout.edit.ModelEdit.addElement(this.textFlow, org.apache.royale.textLayout.elements.ElementHelper.getParagraph(), listItem, 0));
    }
    else
      this.org_apache_royale_textLayout_operations_CreateListOperation__mementoList.push(org.apache.royale.textLayout.edit.ModelEdit.moveElement(this.textFlow, child, this.org_apache_royale_textLayout_operations_CreateListOperation__listElement, this.org_apache_royale_textLayout_operations_CreateListOperation__listElement.numChildren));
  } else {
    this.org_apache_royale_textLayout_operations_CreateListOperation__mementoList.push(org.apache.royale.textLayout.edit.ModelEdit.addElement(this.textFlow, this.org_apache_royale_textLayout_operations_CreateListOperation__listElement, target, endChildIndex));
    if (org.apache.royale.utils.Language.is(target, org.apache.royale.textLayout.elements.IListItemElement) && target.normalizeNeedsInitialParagraph()) {
      this.org_apache_royale_textLayout_operations_CreateListOperation__mementoList.push(org.apache.royale.textLayout.edit.ModelEdit.addElement(this.textFlow, org.apache.royale.textLayout.elements.ElementHelper.getParagraph(), target, 0));
      begChildIndex++;
      endChildIndex++;
    }
    if (begChildIndex == endChildIndex) {
      listItem = org.apache.royale.textLayout.elements.ElementHelper.getListItem();
      this.org_apache_royale_textLayout_operations_CreateListOperation__mementoList.push(org.apache.royale.textLayout.edit.ModelEdit.addElement(this.textFlow, listItem, this.org_apache_royale_textLayout_operations_CreateListOperation__listElement, 0));
      this.org_apache_royale_textLayout_operations_CreateListOperation__mementoList.push(org.apache.royale.textLayout.edit.ModelEdit.addElement(this.textFlow, org.apache.royale.textLayout.elements.ElementHelper.getParagraph(), listItem, 0));
    } else {
      while (begChildIndex < endChildIndex) {
        child = target.getChildAt(begChildIndex);
        if (org.apache.royale.utils.Language.is(child, org.apache.royale.textLayout.elements.IListItemElement)) {
          listItem = child;
          this.org_apache_royale_textLayout_operations_CreateListOperation__mementoList.push(org.apache.royale.textLayout.edit.ModelEdit.moveElement(this.textFlow, listItem, this.org_apache_royale_textLayout_operations_CreateListOperation__listElement, this.org_apache_royale_textLayout_operations_CreateListOperation__listElement.numChildren));
          if (!org.apache.royale.utils.Language.is(listItem.getChildAt(0), org.apache.royale.textLayout.elements.IParagraphElement))
            this.org_apache_royale_textLayout_operations_CreateListOperation__mementoList.push(org.apache.royale.textLayout.edit.ModelEdit.addElement(this.textFlow, org.apache.royale.textLayout.elements.ElementHelper.getParagraph(), listItem, 0));
        } else {
          listItem = org.apache.royale.textLayout.elements.ElementHelper.getListItem();
          this.org_apache_royale_textLayout_operations_CreateListOperation__mementoList.push(org.apache.royale.textLayout.edit.ModelEdit.addElement(this.textFlow, listItem, this.org_apache_royale_textLayout_operations_CreateListOperation__listElement, this.org_apache_royale_textLayout_operations_CreateListOperation__listElement.numChildren));
          this.org_apache_royale_textLayout_operations_CreateListOperation__mementoList.push(org.apache.royale.textLayout.edit.ModelEdit.moveElement(this.textFlow, child, listItem, listItem.numChildren));
          if (listItem.normalizeNeedsInitialParagraph())
            this.org_apache_royale_textLayout_operations_CreateListOperation__mementoList.push(org.apache.royale.textLayout.edit.ModelEdit.addElement(this.textFlow, org.apache.royale.textLayout.elements.ElementHelper.getParagraph(), listItem, 0));
          child = listItem;
        }
        child.normalizeRange(0, (child.textLength) >>> 0);
        endChildIndex--;
      }
    }
    var /** @type {org.apache.royale.textLayout.elements.IListItemElement} */ testListItem = target;
    if (testListItem && testListItem.normalizeNeedsInitialParagraph())
      this.org_apache_royale_textLayout_operations_CreateListOperation__mementoList.push(org.apache.royale.textLayout.edit.ModelEdit.addElement(this.textFlow, org.apache.royale.textLayout.elements.ElementHelper.getParagraph(), testListItem, 0));
    testListItem = target.parent;
    if (testListItem && testListItem.normalizeNeedsInitialParagraph())
      this.org_apache_royale_textLayout_operations_CreateListOperation__mementoList.push(org.apache.royale.textLayout.edit.ModelEdit.addElement(this.textFlow, org.apache.royale.textLayout.elements.ElementHelper.getParagraph(), testListItem, 0));
  }
  if (this.originalSelectionState.selectionManagerOperationState && this.textFlow.interactionManager) {
    this.textFlow.normalize();
    this.org_apache_royale_textLayout_operations_CreateListOperation__postOpSelectionState = new org.apache.royale.textLayout.edit.SelectionState(this.textFlow, this.org_apache_royale_textLayout_operations_CreateListOperation__listElement.getAbsoluteStart(), this.org_apache_royale_textLayout_operations_CreateListOperation__listElement.getAbsoluteStart() + this.org_apache_royale_textLayout_operations_CreateListOperation__listElement.textLength - 1);
    this.textFlow.interactionManager.setSelectionState(this.org_apache_royale_textLayout_operations_CreateListOperation__postOpSelectionState);
  }
  return true;
};


/** @asprivate 
 * @export
 * @override
 */
org.apache.royale.textLayout.operations.CreateListOperation.prototype.undo = function() {
  this.org_apache_royale_textLayout_operations_CreateListOperation__mementoList.undo();
  return this.originalSelectionState;
};


/** @asprivate 
 * @export
 * @override
 */
org.apache.royale.textLayout.operations.CreateListOperation.prototype.redo = function() {
  this.org_apache_royale_textLayout_operations_CreateListOperation__mementoList.redo();
  return this.org_apache_royale_textLayout_operations_CreateListOperation__postOpSelectionState;
};


org.apache.royale.textLayout.operations.CreateListOperation.prototype.get__parent = function() {
  return this.org_apache_royale_textLayout_operations_CreateListOperation__listParentMarker ? this.org_apache_royale_textLayout_operations_CreateListOperation__listParentMarker.findElement(this.originalSelectionState.textFlow) : null;
};


org.apache.royale.textLayout.operations.CreateListOperation.prototype.set__parent = function(value) {
  if (!value) {
    value = this.textFlow;
    var /** @type {number} */ begPos = this.absoluteStart;
    var /** @type {number} */ endPos = this.absoluteEnd;
    for (;;) {
      var /** @type {number} */ begChildIdx = value.findChildIndexAtPosition(begPos);
      var /** @type {org.apache.royale.textLayout.elements.IFlowGroupElement} */ elem = value.getChildAt(begChildIdx);
      if (org.apache.royale.utils.Language.is(elem, org.apache.royale.textLayout.elements.IParagraphElement))
        break;
      begPos -= elem.parentRelativeStart;
      endPos -= elem.parentRelativeStart;
      if (endPos >= elem.textLength)
        break;
      value = elem;
    }
  }
  else if (org.apache.royale.utils.Language.is(value, org.apache.royale.textLayout.elements.ISubParagraphGroupElementBase))
    value = value.getParagraph().parent;
  this.org_apache_royale_textLayout_operations_CreateListOperation__listParentMarker = new org.apache.royale.textLayout.edit.ElementMark(value, 0);
};


org.apache.royale.textLayout.operations.CreateListOperation.prototype.get__listFormat = function() {
  return this.org_apache_royale_textLayout_operations_CreateListOperation__listFormat;
};


org.apache.royale.textLayout.operations.CreateListOperation.prototype.set__listFormat = function(value) {
  this.org_apache_royale_textLayout_operations_CreateListOperation__listFormat = value;
};


org.apache.royale.textLayout.operations.CreateListOperation.prototype.get__newListElement = function() {
  return this.org_apache_royale_textLayout_operations_CreateListOperation__listElement;
};


Object.defineProperties(org.apache.royale.textLayout.operations.CreateListOperation.prototype, /** @lends {org.apache.royale.textLayout.operations.CreateListOperation.prototype} */ {
/**
  * @export
  * @type {org.apache.royale.textLayout.elements.IFlowGroupElement} */
parent: {
get: org.apache.royale.textLayout.operations.CreateListOperation.prototype.get__parent,
set: org.apache.royale.textLayout.operations.CreateListOperation.prototype.set__parent},
/**
  * @export
  * @type {org.apache.royale.textLayout.formats.ITextLayoutFormat} */
listFormat: {
get: org.apache.royale.textLayout.operations.CreateListOperation.prototype.get__listFormat,
set: org.apache.royale.textLayout.operations.CreateListOperation.prototype.set__listFormat},
/**
  * @export
  * @type {org.apache.royale.textLayout.elements.IListElement} */
newListElement: {
get: org.apache.royale.textLayout.operations.CreateListOperation.prototype.get__newListElement}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.textLayout.operations.CreateListOperation.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'CreateListOperation', qName: 'org.apache.royale.textLayout.operations.CreateListOperation', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.textLayout.operations.CreateListOperation.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'parent': { type: 'org.apache.royale.textLayout.elements.IFlowGroupElement', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.operations.CreateListOperation'},
        'listFormat': { type: 'org.apache.royale.textLayout.formats.ITextLayoutFormat', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.operations.CreateListOperation'},
        'newListElement': { type: 'org.apache.royale.textLayout.elements.IListElement', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.operations.CreateListOperation'}
      };
    },
    methods: function () {
      return {
        'CreateListOperation': { type: '', declaredBy: 'org.apache.royale.textLayout.operations.CreateListOperation', parameters: function () { return [ 'org.apache.royale.textLayout.edit.SelectionState', false ,'org.apache.royale.textLayout.elements.IFlowGroupElement', true ,'org.apache.royale.textLayout.formats.ITextLayoutFormat', true ]; }},
        'doOperation': { type: 'Boolean', declaredBy: 'org.apache.royale.textLayout.operations.CreateListOperation'},
        'undo': { type: 'org.apache.royale.textLayout.edit.SelectionState', declaredBy: 'org.apache.royale.textLayout.operations.CreateListOperation'},
        'redo': { type: 'org.apache.royale.textLayout.edit.SelectionState', declaredBy: 'org.apache.royale.textLayout.operations.CreateListOperation'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.textLayout.operations.CreateListOperation.prototype.ROYALE_COMPILE_FLAGS = 10;
