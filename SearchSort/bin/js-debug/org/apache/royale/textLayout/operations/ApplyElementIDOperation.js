/**
 * Generated by Apache Royale Compiler from org/apache/royale/textLayout/operations/ApplyElementIDOperation.as
 * org.apache.royale.textLayout.operations.ApplyElementIDOperation
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.textLayout.operations.ApplyElementIDOperation');
/* Royale Dependency List: org.apache.royale.textLayout.edit.SelectionState,org.apache.royale.textLayout.elements.IFlowElement,XML*/

goog.require('org.apache.royale.textLayout.operations.FlowElementOperation');



/** 
 * Creates a ChangeElementIDOperation object. 
 * 
 * <p>If the <code>relativeStart</code> or <code>relativeEnd</code> parameters are set, then the existing
 * element is split into two elements, one using the existing ID and the other
 * using the new ID. If both parameters are set, then the existing element is split into three elements.
 * The first and last elements of the set are both assigned the original ID.</p>
 * 
 * @asparam operationState Specifies the selection state before the operation
 * @asparam targetElement Specifies the element to change
 * @asparam newID The ID to assign
 * @asparam relativeStart An offset from the beginning of the target element.
 * @asparam relativeEnd An offset from the end of the target element.
 * 
 * @playerversion Flash 10
 * @playerversion AIR 1.5
 * @langversion 3.0 
 * @constructor
 * @extends {org.apache.royale.textLayout.operations.FlowElementOperation}
 * @param {org.apache.royale.textLayout.edit.SelectionState} operationState
 * @param {org.apache.royale.textLayout.elements.IFlowElement} targetElement
 * @param {string} newID
 * @param {number=} relativeStart
 * @param {number=} relativeEnd
 */
org.apache.royale.textLayout.operations.ApplyElementIDOperation = function(operationState, targetElement, newID, relativeStart, relativeEnd) {
  relativeStart = typeof relativeStart !== 'undefined' ? relativeStart : 0;
  relativeEnd = typeof relativeEnd !== 'undefined' ? relativeEnd : -1;
  this.org_apache_royale_textLayout_operations_ApplyElementIDOperation__newID = newID;
  org.apache.royale.textLayout.operations.ApplyElementIDOperation.base(this, 'constructor', operationState, targetElement, relativeStart, relativeEnd);
};
goog.inherits(org.apache.royale.textLayout.operations.ApplyElementIDOperation, org.apache.royale.textLayout.operations.FlowElementOperation);


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.royale.textLayout.operations.ApplyElementIDOperation', org.apache.royale.textLayout.operations.ApplyElementIDOperation);


/**
 * @private
 * @type {string}
 */
org.apache.royale.textLayout.operations.ApplyElementIDOperation.prototype.org_apache_royale_textLayout_operations_ApplyElementIDOperation__origID;


/**
 * @private
 * @type {string}
 */
org.apache.royale.textLayout.operations.ApplyElementIDOperation.prototype.org_apache_royale_textLayout_operations_ApplyElementIDOperation__newID;


/** @asprivate 
 * @export
 * @override
 */
org.apache.royale.textLayout.operations.ApplyElementIDOperation.prototype.doOperation = function() {
  var /** @type {org.apache.royale.textLayout.elements.IFlowElement} */ targetElement = this.getTargetElement();
  this.org_apache_royale_textLayout_operations_ApplyElementIDOperation__origID = targetElement.id;
  this.adjustForDoOperation(targetElement);
  targetElement.id = this.org_apache_royale_textLayout_operations_ApplyElementIDOperation__newID;
  return true;
};


/** @asprivate 
 * @export
 * @override
 */
org.apache.royale.textLayout.operations.ApplyElementIDOperation.prototype.undo = function() {
  var /** @type {org.apache.royale.textLayout.elements.IFlowElement} */ targetElement = this.getTargetElement();
  targetElement.id = this.org_apache_royale_textLayout_operations_ApplyElementIDOperation__origID;
  this.adjustForUndoOperation(targetElement);
  return this.originalSelectionState;
};


org.apache.royale.textLayout.operations.ApplyElementIDOperation.prototype.get__newID = function() {
  return this.org_apache_royale_textLayout_operations_ApplyElementIDOperation__newID;
};


org.apache.royale.textLayout.operations.ApplyElementIDOperation.prototype.set__newID = function(val) {
  this.org_apache_royale_textLayout_operations_ApplyElementIDOperation__newID = val;
};


Object.defineProperties(org.apache.royale.textLayout.operations.ApplyElementIDOperation.prototype, /** @lends {org.apache.royale.textLayout.operations.ApplyElementIDOperation.prototype} */ {
/**
  * @export
  * @type {string} */
newID: {
get: org.apache.royale.textLayout.operations.ApplyElementIDOperation.prototype.get__newID,
set: org.apache.royale.textLayout.operations.ApplyElementIDOperation.prototype.set__newID}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.textLayout.operations.ApplyElementIDOperation.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'ApplyElementIDOperation', qName: 'org.apache.royale.textLayout.operations.ApplyElementIDOperation', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.textLayout.operations.ApplyElementIDOperation.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'newID': { type: 'String', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.operations.ApplyElementIDOperation'}
      };
    },
    methods: function () {
      return {
        'ApplyElementIDOperation': { type: '', declaredBy: 'org.apache.royale.textLayout.operations.ApplyElementIDOperation', parameters: function () { return [ 'org.apache.royale.textLayout.edit.SelectionState', false ,'org.apache.royale.textLayout.elements.IFlowElement', false ,'String', false ,'int', true ,'int', true ]; }},
        'doOperation': { type: 'Boolean', declaredBy: 'org.apache.royale.textLayout.operations.ApplyElementIDOperation'},
        'undo': { type: 'org.apache.royale.textLayout.edit.SelectionState', declaredBy: 'org.apache.royale.textLayout.operations.ApplyElementIDOperation'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.textLayout.operations.ApplyElementIDOperation.prototype.ROYALE_COMPILE_FLAGS = 10;
