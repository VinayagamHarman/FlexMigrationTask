/**
 * Generated by Apache Royale Compiler from org/apache/royale/textLayout/operations/InsertInlineGraphicOperation.as
 * org.apache.royale.textLayout.operations.InsertInlineGraphicOperation
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.textLayout.operations.InsertInlineGraphicOperation');
/* Royale Dependency List: org.apache.royale.textLayout.edit.ElementRange,org.apache.royale.textLayout.edit.ParaEdit,org.apache.royale.textLayout.edit.PointFormat,org.apache.royale.textLayout.edit.SelectionState,org.apache.royale.textLayout.elements.IFlowElement,org.apache.royale.textLayout.elements.IFlowGroupElement,org.apache.royale.textLayout.elements.IFlowLeafElement,org.apache.royale.textLayout.elements.IInlineGraphicElement,org.apache.royale.textLayout.elements.ISubParagraphGroupElementBase,org.apache.royale.textLayout.formats.ITextLayoutFormat,org.apache.royale.textLayout.operations.DeleteTextOperation,org.apache.royale.utils.Language,XML*/

goog.require('org.apache.royale.textLayout.operations.FlowTextOperation');



/** 
 * Creates an InsertInlineGraphicsOperation object.
 * 
 * @asparam operationState Describes the insertion point. 
 * If a range is selected, the operation deletes the contents of that range.
 * @asparam	source	The graphic source (uri string, URLRequest, DisplayObject, or Class of an embedded asset). 
 * @asparam	width	The width to assign (number of pixels, percent, or the string 'auto')
 * @asparam	height	The height to assign (number of pixels, percent, or the string 'auto')
 * @asparam	options	The float to assign (String value, none for inline with text, left/right/start/end for float)
 * 
 * @playerversion Flash 10
 * @playerversion AIR 1.5
 * @langversion 3.0 
 * @constructor
 * @extends {org.apache.royale.textLayout.operations.FlowTextOperation}
 * @param {org.apache.royale.textLayout.edit.SelectionState} operationState
 * @param {Object} source
 * @param {Object} width
 * @param {Object} height
 * @param {Object=} options
 */
org.apache.royale.textLayout.operations.InsertInlineGraphicOperation = function(operationState, source, width, height, options) {
  options = typeof options !== 'undefined' ? options : null;
  org.apache.royale.textLayout.operations.InsertInlineGraphicOperation.base(this, 'constructor', operationState);
  if (this.absoluteStart != this.absoluteEnd)
    this.org_apache_royale_textLayout_operations_InsertInlineGraphicOperation_delSelOp = new org.apache.royale.textLayout.operations.DeleteTextOperation(operationState);
  this.org_apache_royale_textLayout_operations_InsertInlineGraphicOperation__source = source;
  this.org_apache_royale_textLayout_operations_InsertInlineGraphicOperation__options = options;
  this.org_apache_royale_textLayout_operations_InsertInlineGraphicOperation_imageWidth = width;
  this.org_apache_royale_textLayout_operations_InsertInlineGraphicOperation_imageHeight = height;
};
goog.inherits(org.apache.royale.textLayout.operations.InsertInlineGraphicOperation, org.apache.royale.textLayout.operations.FlowTextOperation);


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.royale.textLayout.operations.InsertInlineGraphicOperation', org.apache.royale.textLayout.operations.InsertInlineGraphicOperation);


/**
 * @private
 * @type {org.apache.royale.textLayout.operations.DeleteTextOperation}
 */
org.apache.royale.textLayout.operations.InsertInlineGraphicOperation.prototype.org_apache_royale_textLayout_operations_InsertInlineGraphicOperation_delSelOp;


/**
 * @private
 * @type {Object}
 */
org.apache.royale.textLayout.operations.InsertInlineGraphicOperation.prototype.org_apache_royale_textLayout_operations_InsertInlineGraphicOperation__source;


/**
 * @private
 * @type {Object}
 */
org.apache.royale.textLayout.operations.InsertInlineGraphicOperation.prototype.org_apache_royale_textLayout_operations_InsertInlineGraphicOperation_imageWidth;


/**
 * @private
 * @type {Object}
 */
org.apache.royale.textLayout.operations.InsertInlineGraphicOperation.prototype.org_apache_royale_textLayout_operations_InsertInlineGraphicOperation_imageHeight;


/**
 * @private
 * @type {Object}
 */
org.apache.royale.textLayout.operations.InsertInlineGraphicOperation.prototype.org_apache_royale_textLayout_operations_InsertInlineGraphicOperation__options;


/**
 * @private
 * @type {number}
 */
org.apache.royale.textLayout.operations.InsertInlineGraphicOperation.prototype.org_apache_royale_textLayout_operations_InsertInlineGraphicOperation_selPos = 0;


/**
 * @private
 * @type {org.apache.royale.textLayout.elements.IInlineGraphicElement}
 */
org.apache.royale.textLayout.operations.InsertInlineGraphicOperation.prototype.org_apache_royale_textLayout_operations_InsertInlineGraphicOperation__inlineGraphicElement;


/** @asprivate 
 * @export
 * @override
 */
org.apache.royale.textLayout.operations.InsertInlineGraphicOperation.prototype.doOperation = function() {
  var /** @type {org.apache.royale.textLayout.formats.ITextLayoutFormat} */ pointFormat;
  this.org_apache_royale_textLayout_operations_InsertInlineGraphicOperation_selPos = this.absoluteStart;
  if (this.org_apache_royale_textLayout_operations_InsertInlineGraphicOperation_delSelOp) {
    var /** @type {org.apache.royale.textLayout.elements.IFlowLeafElement} */ leafEl = this.textFlow.findLeaf(this.absoluteStart);
    var /** @type {org.apache.royale.textLayout.edit.PointFormat} */ deleteFormat = new org.apache.royale.textLayout.edit.PointFormat(this.textFlow.findLeaf(this.absoluteStart).format);
    if (this.org_apache_royale_textLayout_operations_InsertInlineGraphicOperation_delSelOp.doOperation())
      pointFormat = deleteFormat;
  }
  else
    pointFormat = this.originalSelectionState.pointFormat;
  var /** @type {org.apache.royale.textLayout.edit.ElementRange} */ range = org.apache.royale.textLayout.edit.ElementRange.createElementRange(this.textFlow, this.org_apache_royale_textLayout_operations_InsertInlineGraphicOperation_selPos, this.org_apache_royale_textLayout_operations_InsertInlineGraphicOperation_selPos);
  var /** @type {org.apache.royale.textLayout.elements.IFlowElement} */ leafNode = range.firstLeaf;
  var /** @type {org.apache.royale.textLayout.elements.IFlowGroupElement} */ leafNodeParent = leafNode.parent;
  while (org.apache.royale.utils.Language.is(leafNodeParent, org.apache.royale.textLayout.elements.ISubParagraphGroupElementBase)) {
    var /** @type {number} */ subParInsertionPoint = (this.org_apache_royale_textLayout_operations_InsertInlineGraphicOperation_selPos - leafNodeParent.getAbsoluteStart()) >> 0;
    if (((subParInsertionPoint == 0) && (!leafNodeParent.acceptTextBefore())) || ((subParInsertionPoint == leafNodeParent.textLength) && (!leafNodeParent.acceptTextAfter()))) {
      leafNodeParent = leafNodeParent.parent;
    } else {
      break;
    }
  }
  this.org_apache_royale_textLayout_operations_InsertInlineGraphicOperation__inlineGraphicElement = org.apache.royale.textLayout.edit.ParaEdit.createImage(leafNodeParent, (this.org_apache_royale_textLayout_operations_InsertInlineGraphicOperation_selPos - leafNodeParent.getAbsoluteStart()) >> 0, this.org_apache_royale_textLayout_operations_InsertInlineGraphicOperation__source, this.org_apache_royale_textLayout_operations_InsertInlineGraphicOperation_imageWidth, this.org_apache_royale_textLayout_operations_InsertInlineGraphicOperation_imageHeight, this.options, pointFormat);
  if (this.textFlow.interactionManager)
    this.textFlow.interactionManager.notifyInsertOrDelete(this.absoluteStart, 1);
  return true;
};


/** @asprivate 
 * @export
 * @override
 */
org.apache.royale.textLayout.operations.InsertInlineGraphicOperation.prototype.undo = function() {
  var /** @type {org.apache.royale.textLayout.elements.IFlowElement} */ leafNode = this.textFlow.findLeaf(this.org_apache_royale_textLayout_operations_InsertInlineGraphicOperation_selPos);
  var /** @type {org.apache.royale.textLayout.elements.IFlowGroupElement} */ leafNodeParent = leafNode.parent;
  var /** @type {number} */ elementIdx = leafNode.parent.getChildIndex(leafNode);
  leafNodeParent.replaceChildren(elementIdx, (elementIdx + 1) >> 0, null);
  if (this.textFlow.interactionManager)
    this.textFlow.interactionManager.notifyInsertOrDelete(this.absoluteStart, -1);
  return this.org_apache_royale_textLayout_operations_InsertInlineGraphicOperation_delSelOp ? this.org_apache_royale_textLayout_operations_InsertInlineGraphicOperation_delSelOp.undo() : this.originalSelectionState;
};


/**
 * Re-executes the operation after it has been undone.
 * 
 * <p>This function is called by the edit manager, when necessary.</p>
 * 
 * @playerversion Flash 10
 * @playerversion AIR 1.5
 * @langversion 3.0 
 * @export
 * @override
 */
org.apache.royale.textLayout.operations.InsertInlineGraphicOperation.prototype.redo = function() {
  this.doOperation();
  return new org.apache.royale.textLayout.edit.SelectionState(this.textFlow, this.org_apache_royale_textLayout_operations_InsertInlineGraphicOperation_selPos + 1, this.org_apache_royale_textLayout_operations_InsertInlineGraphicOperation_selPos + 1, null);
};


org.apache.royale.textLayout.operations.InsertInlineGraphicOperation.prototype.get__source = function() {
  return this.org_apache_royale_textLayout_operations_InsertInlineGraphicOperation__source;
};


org.apache.royale.textLayout.operations.InsertInlineGraphicOperation.prototype.set__source = function(value) {
  this.org_apache_royale_textLayout_operations_InsertInlineGraphicOperation__source = value;
};


org.apache.royale.textLayout.operations.InsertInlineGraphicOperation.prototype.get__width = function() {
  return this.org_apache_royale_textLayout_operations_InsertInlineGraphicOperation_imageWidth;
};


org.apache.royale.textLayout.operations.InsertInlineGraphicOperation.prototype.set__width = function(value) {
  this.org_apache_royale_textLayout_operations_InsertInlineGraphicOperation_imageWidth = value;
};


org.apache.royale.textLayout.operations.InsertInlineGraphicOperation.prototype.get__height = function() {
  return this.org_apache_royale_textLayout_operations_InsertInlineGraphicOperation_imageHeight;
};


org.apache.royale.textLayout.operations.InsertInlineGraphicOperation.prototype.set__height = function(value) {
  this.org_apache_royale_textLayout_operations_InsertInlineGraphicOperation_imageHeight = value;
};


org.apache.royale.textLayout.operations.InsertInlineGraphicOperation.prototype.get__options = function() {
  return this.org_apache_royale_textLayout_operations_InsertInlineGraphicOperation__options;
};


org.apache.royale.textLayout.operations.InsertInlineGraphicOperation.prototype.set__options = function(value) {
  this.org_apache_royale_textLayout_operations_InsertInlineGraphicOperation__options = value;
};


org.apache.royale.textLayout.operations.InsertInlineGraphicOperation.prototype.get__newInlineGraphicElement = function() {
  return this.org_apache_royale_textLayout_operations_InsertInlineGraphicOperation__inlineGraphicElement;
};


Object.defineProperties(org.apache.royale.textLayout.operations.InsertInlineGraphicOperation.prototype, /** @lends {org.apache.royale.textLayout.operations.InsertInlineGraphicOperation.prototype} */ {
/**
  * @export
  * @type {Object} */
source: {
get: org.apache.royale.textLayout.operations.InsertInlineGraphicOperation.prototype.get__source,
set: org.apache.royale.textLayout.operations.InsertInlineGraphicOperation.prototype.set__source},
/**
  * @export
  * @type {Object} */
width: {
get: org.apache.royale.textLayout.operations.InsertInlineGraphicOperation.prototype.get__width,
set: org.apache.royale.textLayout.operations.InsertInlineGraphicOperation.prototype.set__width},
/**
  * @export
  * @type {Object} */
height: {
get: org.apache.royale.textLayout.operations.InsertInlineGraphicOperation.prototype.get__height,
set: org.apache.royale.textLayout.operations.InsertInlineGraphicOperation.prototype.set__height},
/**
  * @export
  * @type {Object} */
options: {
get: org.apache.royale.textLayout.operations.InsertInlineGraphicOperation.prototype.get__options,
set: org.apache.royale.textLayout.operations.InsertInlineGraphicOperation.prototype.set__options},
/**
  * @export
  * @type {org.apache.royale.textLayout.elements.IInlineGraphicElement} */
newInlineGraphicElement: {
get: org.apache.royale.textLayout.operations.InsertInlineGraphicOperation.prototype.get__newInlineGraphicElement}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.textLayout.operations.InsertInlineGraphicOperation.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'InsertInlineGraphicOperation', qName: 'org.apache.royale.textLayout.operations.InsertInlineGraphicOperation', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.textLayout.operations.InsertInlineGraphicOperation.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'source': { type: 'Object', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.operations.InsertInlineGraphicOperation'},
        'width': { type: 'Object', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.operations.InsertInlineGraphicOperation'},
        'height': { type: 'Object', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.operations.InsertInlineGraphicOperation'},
        'options': { type: 'Object', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.operations.InsertInlineGraphicOperation'},
        'newInlineGraphicElement': { type: 'org.apache.royale.textLayout.elements.IInlineGraphicElement', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.operations.InsertInlineGraphicOperation'}
      };
    },
    methods: function () {
      return {
        'InsertInlineGraphicOperation': { type: '', declaredBy: 'org.apache.royale.textLayout.operations.InsertInlineGraphicOperation', parameters: function () { return [ 'org.apache.royale.textLayout.edit.SelectionState', false ,'Object', false ,'Object', false ,'Object', false ,'Object', true ]; }},
        'doOperation': { type: 'Boolean', declaredBy: 'org.apache.royale.textLayout.operations.InsertInlineGraphicOperation'},
        'undo': { type: 'org.apache.royale.textLayout.edit.SelectionState', declaredBy: 'org.apache.royale.textLayout.operations.InsertInlineGraphicOperation'},
        'redo': { type: 'org.apache.royale.textLayout.edit.SelectionState', declaredBy: 'org.apache.royale.textLayout.operations.InsertInlineGraphicOperation'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.textLayout.operations.InsertInlineGraphicOperation.prototype.ROYALE_COMPILE_FLAGS = 10;
