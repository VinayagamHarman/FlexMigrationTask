/**
 * Generated by Apache Royale Compiler from org/apache/royale/textLayout/operations/SplitElementOperation.as
 * org.apache.royale.textLayout.operations.SplitElementOperation
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.textLayout.operations.SplitElementOperation');
/* Royale Dependency List: org.apache.royale.textLayout.edit.ElementMark,org.apache.royale.textLayout.edit.IMemento,org.apache.royale.textLayout.edit.ModelEdit,org.apache.royale.textLayout.edit.SelectionState,org.apache.royale.textLayout.elements.IFlowGroupElement,org.apache.royale.textLayout.elements.IListItemElement,org.apache.royale.textLayout.elements.IParagraphElement,org.apache.royale.textLayout.elements.ISubParagraphGroupElementBase,org.apache.royale.textLayout.formats.ListMarkerFormat,org.apache.royale.textLayout.formats.TextLayoutFormat,org.apache.royale.textLayout.operations.DeleteTextOperation,org.apache.royale.utils.Language,XML*/

goog.require('org.apache.royale.textLayout.operations.FlowTextOperation');



/** 
 * Creates a SplitElementOperation object.  This operation deletes a block selection and then splits the target at absoluteStart.  The block selection should not cause target to be deleted.
 * Target is a IFlowGroupElement but may not be a LinkElement, TCYElement or SubParagraphGroupElement.
 * 
 * @asparam operationState Describes the point at which to split the element.
 * If a range of text is specified, the contents of the range are deleted.
 * 
 * @playerversion Flash 10
 * @playerversion AIR 1.5
 * @langversion 3.0 
 * @constructor
 * @extends {org.apache.royale.textLayout.operations.FlowTextOperation}
 * @param {org.apache.royale.textLayout.edit.SelectionState} operationState
 * @param {org.apache.royale.textLayout.elements.IFlowGroupElement} targetElement
 */
org.apache.royale.textLayout.operations.SplitElementOperation = function(operationState, targetElement) {
  org.apache.royale.textLayout.operations.SplitElementOperation.base(this, 'constructor', operationState);
  this.targetElement = targetElement;
};
goog.inherits(org.apache.royale.textLayout.operations.SplitElementOperation, org.apache.royale.textLayout.operations.FlowTextOperation);


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.royale.textLayout.operations.SplitElementOperation', org.apache.royale.textLayout.operations.SplitElementOperation);


/**
 * @private
 * @type {org.apache.royale.textLayout.operations.DeleteTextOperation}
 */
org.apache.royale.textLayout.operations.SplitElementOperation.prototype.org_apache_royale_textLayout_operations_SplitElementOperation_delSelOp;


/**
 * @private
 * @type {org.apache.royale.textLayout.edit.ElementMark}
 */
org.apache.royale.textLayout.operations.SplitElementOperation.prototype.org_apache_royale_textLayout_operations_SplitElementOperation__targetMark;


/**
 * @private
 * @type {org.apache.royale.textLayout.edit.IMemento}
 */
org.apache.royale.textLayout.operations.SplitElementOperation.prototype.org_apache_royale_textLayout_operations_SplitElementOperation__memento;


/**
 * @private
 * @type {org.apache.royale.textLayout.elements.IFlowGroupElement}
 */
org.apache.royale.textLayout.operations.SplitElementOperation.prototype.org_apache_royale_textLayout_operations_SplitElementOperation__newElement;


/** @asprivate 
 * @export
 * @override
 */
org.apache.royale.textLayout.operations.SplitElementOperation.prototype.doOperation = function() {
  var /** @type {org.apache.royale.textLayout.elements.IFlowGroupElement} */ target = this.targetElement;
  if (this.absoluteStart < this.absoluteEnd) {
    var /** @type {number} */ targStart = target.getAbsoluteStart();
    var /** @type {number} */ targEnd = (targStart + target.textLength) >> 0;
    this.org_apache_royale_textLayout_operations_SplitElementOperation_delSelOp = new org.apache.royale.textLayout.operations.DeleteTextOperation(this.originalSelectionState);
    this.org_apache_royale_textLayout_operations_SplitElementOperation_delSelOp.doOperation();
    if (this.absoluteStart <= targStart && targEnd <= this.absoluteEnd) {
      if (org.apache.royale.utils.Language.is(target, org.apache.royale.textLayout.elements.IParagraphElement))
        target = this.textFlow.findAbsoluteParagraph(this.absoluteStart);
      else
        target = null;
    }
    else
      target = this.targetElement;
  }
  if (target != null && !org.apache.royale.utils.Language.is(target, org.apache.royale.textLayout.elements.ISubParagraphGroupElementBase) && target.getTextFlow() == this.textFlow) {
    var /** @type {number} */ oldLength = this.textFlow.textLength;
    var /** @type {number} */ relativePosition = (this.absoluteStart - target.getAbsoluteStart()) >> 0;
    this.org_apache_royale_textLayout_operations_SplitElementOperation__memento = org.apache.royale.textLayout.edit.ModelEdit.splitElement(this.textFlow, target, relativePosition);
    this.org_apache_royale_textLayout_operations_SplitElementOperation__newElement = target.parent.getChildAt((target.parent.getChildIndex(target) + 1) >> 0);
    if (org.apache.royale.utils.Language.is(this.org_apache_royale_textLayout_operations_SplitElementOperation__newElement, org.apache.royale.textLayout.elements.IListItemElement) && this.org_apache_royale_textLayout_operations_SplitElementOperation__newElement.listMarkerFormat && this.org_apache_royale_textLayout_operations_SplitElementOperation__newElement.listMarkerFormat.counterReset !== undefined) {
      var /** @type {org.apache.royale.textLayout.formats.ListMarkerFormat} */ listMarkerFormat = new org.apache.royale.textLayout.formats.ListMarkerFormat(this.org_apache_royale_textLayout_operations_SplitElementOperation__newElement.listMarkerFormat);
      listMarkerFormat.counterReset = undefined;
      this.org_apache_royale_textLayout_operations_SplitElementOperation__newElement.listMarkerFormat = listMarkerFormat;
    }
    if (org.apache.royale.utils.Language.is(target, org.apache.royale.textLayout.elements.IParagraphElement)) {
      var /** @type {org.apache.royale.textLayout.formats.TextLayoutFormat} */ newFormat = new org.apache.royale.textLayout.formats.TextLayoutFormat(this.org_apache_royale_textLayout_operations_SplitElementOperation__newElement.format);
      newFormat.containerBreakAfter = undefined;
      newFormat.containerBreakBefore = undefined;
      newFormat.columnBreakAfter = undefined;
      newFormat.columnBreakBefore = undefined;
      this.org_apache_royale_textLayout_operations_SplitElementOperation__newElement.format = newFormat;
      if (this.textFlow.interactionManager && oldLength != this.textFlow.textLength)
        this.textFlow.interactionManager.notifyInsertOrDelete(this.absoluteStart, (this.textFlow.textLength - oldLength) >> 0);
    }
  }
  return true;
};


/** @asprivate 
 * @export
 * @override
 */
org.apache.royale.textLayout.operations.SplitElementOperation.prototype.undo = function() {
  if (this.org_apache_royale_textLayout_operations_SplitElementOperation__memento)
    this.org_apache_royale_textLayout_operations_SplitElementOperation__memento.undo();
  this.org_apache_royale_textLayout_operations_SplitElementOperation__newElement = null;
  return this.absoluteStart < this.absoluteEnd ? this.org_apache_royale_textLayout_operations_SplitElementOperation_delSelOp.undo() : this.originalSelectionState;
};


/** @asprivate 
 * @export
 * @override
 */
org.apache.royale.textLayout.operations.SplitElementOperation.prototype.redo = function() {
  org.apache.royale.textLayout.operations.SplitElementOperation.superClass_.redo.apply(this);
  return this.textFlow.interactionManager.getSelectionState();
};


org.apache.royale.textLayout.operations.SplitElementOperation.prototype.get__targetElement = function() {
  return this.org_apache_royale_textLayout_operations_SplitElementOperation__targetMark.findElement(this.originalSelectionState.textFlow);
};


org.apache.royale.textLayout.operations.SplitElementOperation.prototype.set__targetElement = function(value) {
  this.org_apache_royale_textLayout_operations_SplitElementOperation__targetMark = new org.apache.royale.textLayout.edit.ElementMark(value, 0);
};


org.apache.royale.textLayout.operations.SplitElementOperation.prototype.get__newElement = function() {
  return this.org_apache_royale_textLayout_operations_SplitElementOperation__newElement;
};


Object.defineProperties(org.apache.royale.textLayout.operations.SplitElementOperation.prototype, /** @lends {org.apache.royale.textLayout.operations.SplitElementOperation.prototype} */ {
/**
  * @export
  * @type {org.apache.royale.textLayout.elements.IFlowGroupElement} */
targetElement: {
get: org.apache.royale.textLayout.operations.SplitElementOperation.prototype.get__targetElement,
set: org.apache.royale.textLayout.operations.SplitElementOperation.prototype.set__targetElement},
/**
  * @export
  * @type {org.apache.royale.textLayout.elements.IFlowGroupElement} */
newElement: {
get: org.apache.royale.textLayout.operations.SplitElementOperation.prototype.get__newElement}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.textLayout.operations.SplitElementOperation.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'SplitElementOperation', qName: 'org.apache.royale.textLayout.operations.SplitElementOperation', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.textLayout.operations.SplitElementOperation.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'targetElement': { type: 'org.apache.royale.textLayout.elements.IFlowGroupElement', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.operations.SplitElementOperation'},
        'newElement': { type: 'org.apache.royale.textLayout.elements.IFlowGroupElement', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.operations.SplitElementOperation'}
      };
    },
    methods: function () {
      return {
        'SplitElementOperation': { type: '', declaredBy: 'org.apache.royale.textLayout.operations.SplitElementOperation', parameters: function () { return [ 'org.apache.royale.textLayout.edit.SelectionState', false ,'org.apache.royale.textLayout.elements.IFlowGroupElement', false ]; }},
        'doOperation': { type: 'Boolean', declaredBy: 'org.apache.royale.textLayout.operations.SplitElementOperation'},
        'undo': { type: 'org.apache.royale.textLayout.edit.SelectionState', declaredBy: 'org.apache.royale.textLayout.operations.SplitElementOperation'},
        'redo': { type: 'org.apache.royale.textLayout.edit.SelectionState', declaredBy: 'org.apache.royale.textLayout.operations.SplitElementOperation'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.textLayout.operations.SplitElementOperation.prototype.ROYALE_COMPILE_FLAGS = 10;
