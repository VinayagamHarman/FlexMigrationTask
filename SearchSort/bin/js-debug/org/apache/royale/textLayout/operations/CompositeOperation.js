/**
 * Generated by Apache Royale Compiler from org/apache/royale/textLayout/operations/CompositeOperation.as
 * org.apache.royale.textLayout.operations.CompositeOperation
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.textLayout.operations.CompositeOperation');
/* Royale Dependency List: org.apache.royale.textLayout.edit.SelectionState,org.apache.royale.textLayout.elements.ITextFlow,org.apache.royale.textLayout.operations.DeleteTextOperation,org.apache.royale.textLayout.operations.InsertTextOperation,org.apache.royale.textLayout.operations.SplitParagraphOperation,org.apache.royale.utils.Language,XML*/

goog.require('org.apache.royale.textLayout.operations.FlowOperation');



/** 
 * Creates a CompositeOperation object.
 * 
 * @asparam operations The operations to group.
 * 
 * @playerversion Flash 10
 * @playerversion AIR 1.5
 * @langversion 3.0 
 * @constructor
 * @extends {org.apache.royale.textLayout.operations.FlowOperation}
 * @param {Array=} operations
 */
org.apache.royale.textLayout.operations.CompositeOperation = function(operations) {
  operations = typeof operations !== 'undefined' ? operations : null;
  org.apache.royale.textLayout.operations.CompositeOperation.base(this, 'constructor', null);
  this.operations = operations;
  if (this.org_apache_royale_textLayout_operations_CompositeOperation__operations.length)
    this.setGenerations((this.org_apache_royale_textLayout_operations_CompositeOperation__operations[0].beginGeneration) >>> 0, (this.org_apache_royale_textLayout_operations_CompositeOperation__operations[this.org_apache_royale_textLayout_operations_CompositeOperation__operations.length - 1].endGeneration) >>> 0);
};
goog.inherits(org.apache.royale.textLayout.operations.CompositeOperation, org.apache.royale.textLayout.operations.FlowOperation);


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.royale.textLayout.operations.CompositeOperation', org.apache.royale.textLayout.operations.CompositeOperation);


/**
 * @private
 * @type {Array}
 */
org.apache.royale.textLayout.operations.CompositeOperation.prototype.org_apache_royale_textLayout_operations_CompositeOperation__operations;


/** 
 * Adds an additional operation to the end of the list. 
 * 
 * <p>The new operation must operate on the same TextFlow object as 
 * the other operations in the list.</p>
 * 
 * @playerversion Flash 10
 * @playerversion AIR 1.5
 * @langversion 3.0 
 * @export
 * @param {org.apache.royale.textLayout.operations.FlowOperation} operation
 */
org.apache.royale.textLayout.operations.CompositeOperation.prototype.addOperation = function(operation) {
  if (this.org_apache_royale_textLayout_operations_CompositeOperation__operations.length > 0 && operation.textFlow != this.textFlow)
    return;
  
  this.org_apache_royale_textLayout_operations_CompositeOperation__operations.push(operation);
};


/** @asprivate 
 * @export
 * @override
 */
org.apache.royale.textLayout.operations.CompositeOperation.prototype.doOperation = function() {
  var /** @type {boolean} */ success = true;
  for (var /** @type {number} */ i = 0; i < this.org_apache_royale_textLayout_operations_CompositeOperation__operations.length; i++)
    success = success && org.apache.royale.utils.Language.as(this.org_apache_royale_textLayout_operations_CompositeOperation__operations[i], org.apache.royale.textLayout.operations.FlowOperation, true).doOperation();
  return true;
};


/** @asprivate 
 * @export
 * @override
 */
org.apache.royale.textLayout.operations.CompositeOperation.prototype.undo = function() {
  var /** @type {org.apache.royale.textLayout.edit.SelectionState} */ selState;
  for (var /** @type {number} */ i = (this.org_apache_royale_textLayout_operations_CompositeOperation__operations.length - 1) >> 0; i >= 0; i--)
    selState = org.apache.royale.utils.Language.as(this.org_apache_royale_textLayout_operations_CompositeOperation__operations[i], org.apache.royale.textLayout.operations.FlowOperation, true).undo();
  return selState;
};


/** @asprivate 
 * @export
 * @override
 */
org.apache.royale.textLayout.operations.CompositeOperation.prototype.redo = function() {
  var /** @type {org.apache.royale.textLayout.edit.SelectionState} */ selState;
  for (var /** @type {number} */ i = 0; i < this.org_apache_royale_textLayout_operations_CompositeOperation__operations.length; i++)
    selState = org.apache.royale.utils.Language.as(this.org_apache_royale_textLayout_operations_CompositeOperation__operations[i], org.apache.royale.textLayout.operations.FlowOperation, true).redo();
  return selState;
};


/** @asprivate 
 * @export
 * @override
 */
org.apache.royale.textLayout.operations.CompositeOperation.prototype.canUndo = function() {
  var /** @type {boolean} */ undoable = true;
  var /** @type {number} */ generation = (this.beginGeneration) >> 0;
  var /** @type {number} */ opCount = (this.org_apache_royale_textLayout_operations_CompositeOperation__operations.length) >> 0;
  for (var /** @type {number} */ i = 0; i < opCount && undoable; i++) {
    var /** @type {org.apache.royale.textLayout.operations.FlowOperation} */ op = this.org_apache_royale_textLayout_operations_CompositeOperation__operations[i];
    if (op.beginGeneration != generation || !op.canUndo())
      undoable = false;
    generation = (op.endGeneration) >> 0;
  }
  if (opCount > 0 && this.org_apache_royale_textLayout_operations_CompositeOperation__operations[opCount - 1].endGeneration != this.endGeneration)
    undoable = false;
  return undoable;
};


/** @asprivate 
 * @export
 * @override
 */
org.apache.royale.textLayout.operations.CompositeOperation.prototype.merge = function(operation) {
  if (org.apache.royale.utils.Language.is(operation, org.apache.royale.textLayout.operations.InsertTextOperation) || org.apache.royale.utils.Language.is(operation, org.apache.royale.textLayout.operations.SplitParagraphOperation) || org.apache.royale.utils.Language.is(operation, org.apache.royale.textLayout.operations.DeleteTextOperation)) {
    if (this.endGeneration != operation.beginGeneration)
      return null;
    var /** @type {org.apache.royale.textLayout.operations.FlowOperation} */ mergedOp;
    var /** @type {org.apache.royale.textLayout.operations.FlowOperation} */ lastOp = (this.org_apache_royale_textLayout_operations_CompositeOperation__operations && this.org_apache_royale_textLayout_operations_CompositeOperation__operations.length) ? org.apache.royale.utils.Language.as(this.org_apache_royale_textLayout_operations_CompositeOperation__operations[this.org_apache_royale_textLayout_operations_CompositeOperation__operations.length - 1], org.apache.royale.textLayout.operations.FlowOperation, true) : null;
    if (lastOp)
      mergedOp = lastOp.merge(operation);
    if (mergedOp && !org.apache.royale.utils.Language.is(mergedOp, org.apache.royale.textLayout.operations.CompositeOperation))
      this.org_apache_royale_textLayout_operations_CompositeOperation__operations[this.org_apache_royale_textLayout_operations_CompositeOperation__operations.length - 1] = mergedOp;
    else
      this.org_apache_royale_textLayout_operations_CompositeOperation__operations.push(operation);
    this.setGenerations(this.beginGeneration, operation.endGeneration);
    return this;
  }
  return null;
};


org.apache.royale.textLayout.operations.CompositeOperation.prototype.get__textFlow = function() {
  return this.org_apache_royale_textLayout_operations_CompositeOperation__operations.length > 0 ? this.org_apache_royale_textLayout_operations_CompositeOperation__operations[0].textFlow : null;
};


org.apache.royale.textLayout.operations.CompositeOperation.prototype.get__operations = function() {
  return this.org_apache_royale_textLayout_operations_CompositeOperation__operations;
};


org.apache.royale.textLayout.operations.CompositeOperation.prototype.set__operations = function(value) {
  this.org_apache_royale_textLayout_operations_CompositeOperation__operations = value ? value.slice() : [];
};


Object.defineProperties(org.apache.royale.textLayout.operations.CompositeOperation.prototype, /** @lends {org.apache.royale.textLayout.operations.CompositeOperation.prototype} */ {
/**
  * @export
  * @type {org.apache.royale.textLayout.elements.ITextFlow} */
textFlow: {
get: org.apache.royale.textLayout.operations.CompositeOperation.prototype.get__textFlow,
set: org.apache.royale.textLayout.operations.FlowOperation.prototype.set__textFlow},
/**
  * @export
  * @type {Array} */
operations: {
get: org.apache.royale.textLayout.operations.CompositeOperation.prototype.get__operations,
set: org.apache.royale.textLayout.operations.CompositeOperation.prototype.set__operations}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.textLayout.operations.CompositeOperation.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'CompositeOperation', qName: 'org.apache.royale.textLayout.operations.CompositeOperation', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.textLayout.operations.CompositeOperation.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'textFlow': { type: 'org.apache.royale.textLayout.elements.ITextFlow', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.operations.CompositeOperation'},
        'operations': { type: 'Array', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.operations.CompositeOperation'}
      };
    },
    methods: function () {
      return {
        'CompositeOperation': { type: '', declaredBy: 'org.apache.royale.textLayout.operations.CompositeOperation', parameters: function () { return [ 'Array', true ]; }},
        'addOperation': { type: 'void', declaredBy: 'org.apache.royale.textLayout.operations.CompositeOperation', parameters: function () { return [ 'org.apache.royale.textLayout.operations.FlowOperation', false ]; }},
        'doOperation': { type: 'Boolean', declaredBy: 'org.apache.royale.textLayout.operations.CompositeOperation'},
        'undo': { type: 'org.apache.royale.textLayout.edit.SelectionState', declaredBy: 'org.apache.royale.textLayout.operations.CompositeOperation'},
        'redo': { type: 'org.apache.royale.textLayout.edit.SelectionState', declaredBy: 'org.apache.royale.textLayout.operations.CompositeOperation'},
        'canUndo': { type: 'Boolean', declaredBy: 'org.apache.royale.textLayout.operations.CompositeOperation'},
        'merge': { type: 'org.apache.royale.textLayout.operations.FlowOperation', declaredBy: 'org.apache.royale.textLayout.operations.CompositeOperation', parameters: function () { return [ 'org.apache.royale.textLayout.operations.FlowOperation', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.textLayout.operations.CompositeOperation.prototype.ROYALE_COMPILE_FLAGS = 10;
