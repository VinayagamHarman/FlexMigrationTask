/**
 * Generated by Apache Royale Compiler from org/apache/royale/textLayout/operations/ClearFormatOperation.as
 * org.apache.royale.textLayout.operations.ClearFormatOperation
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.textLayout.operations.ClearFormatOperation');
/* Royale Dependency List: org.apache.royale.textLayout.edit.ElementRange,org.apache.royale.textLayout.edit.ParaEdit,org.apache.royale.textLayout.edit.PointFormat,org.apache.royale.textLayout.edit.SelectionState,org.apache.royale.textLayout.formats.ITextLayoutFormat,org.apache.royale.textLayout.formats.TextLayoutFormat,XML*/

goog.require('org.apache.royale.textLayout.operations.FlowTextOperation');



/** 
 * Creates an ClearFormatOperation object.
 *
 *  @asparam operationState	Defines the text range to which the format is applied.
 *  @asparam leafFormat	 The format whose set values indicate properties to undefine to LeafFlowElement objects in the selected range.
 *  @asparam paragraphFormat The format whose set values indicate properties to undefine to ParagraphElement objects in the selected range.
 *  @asparam containerFormat The format whose set values indicate properties to undefine to ContainerController objects in the selected range.
 * 
 * @playerversion Flash 10
 * @playerversion AIR 1.5
 * @langversion 3.0 
 * @constructor
 * @extends {org.apache.royale.textLayout.operations.FlowTextOperation}
 * @param {org.apache.royale.textLayout.edit.SelectionState} operationState
 * @param {org.apache.royale.textLayout.formats.ITextLayoutFormat} leafFormat
 * @param {org.apache.royale.textLayout.formats.ITextLayoutFormat} paragraphFormat
 * @param {org.apache.royale.textLayout.formats.ITextLayoutFormat=} containerFormat
 */
org.apache.royale.textLayout.operations.ClearFormatOperation = function(operationState, leafFormat, paragraphFormat, containerFormat) {
  containerFormat = typeof containerFormat !== 'undefined' ? containerFormat : null;
  org.apache.royale.textLayout.operations.ClearFormatOperation.base(this, 'constructor', operationState);
  this.leafFormat = leafFormat;
  this.paragraphFormat = paragraphFormat;
  this.containerFormat = containerFormat;
};
goog.inherits(org.apache.royale.textLayout.operations.ClearFormatOperation, org.apache.royale.textLayout.operations.FlowTextOperation);


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.royale.textLayout.operations.ClearFormatOperation', org.apache.royale.textLayout.operations.ClearFormatOperation);


/**
 * @private
 * @type {org.apache.royale.textLayout.formats.ITextLayoutFormat}
 */
org.apache.royale.textLayout.operations.ClearFormatOperation.prototype.org_apache_royale_textLayout_operations_ClearFormatOperation_applyLeafFormat;


/**
 * @private
 * @type {org.apache.royale.textLayout.formats.ITextLayoutFormat}
 */
org.apache.royale.textLayout.operations.ClearFormatOperation.prototype.org_apache_royale_textLayout_operations_ClearFormatOperation_applyParagraphFormat;


/**
 * @private
 * @type {org.apache.royale.textLayout.formats.ITextLayoutFormat}
 */
org.apache.royale.textLayout.operations.ClearFormatOperation.prototype.org_apache_royale_textLayout_operations_ClearFormatOperation_applyContainerFormat;


/**
 * @private
 * @type {Array}
 */
org.apache.royale.textLayout.operations.ClearFormatOperation.prototype.org_apache_royale_textLayout_operations_ClearFormatOperation_undoLeafArray;


/**
 * @private
 * @type {Array}
 */
org.apache.royale.textLayout.operations.ClearFormatOperation.prototype.org_apache_royale_textLayout_operations_ClearFormatOperation_undoParagraphArray;


/**
 * @private
 * @type {Array}
 */
org.apache.royale.textLayout.operations.ClearFormatOperation.prototype.org_apache_royale_textLayout_operations_ClearFormatOperation_undoContainerArray;


/**
 * @private
 * @return {org.apache.royale.textLayout.edit.SelectionState}
 */
org.apache.royale.textLayout.operations.ClearFormatOperation.prototype.org_apache_royale_textLayout_operations_ClearFormatOperation_doInternal = function() {
  var /** @type {org.apache.royale.textLayout.edit.SelectionState} */ anyNewSelectionState;
  if (this.org_apache_royale_textLayout_operations_ClearFormatOperation_applyLeafFormat) {
    if (this.absoluteStart != this.absoluteEnd) {
      var /** @type {org.apache.royale.textLayout.edit.ElementRange} */ range = org.apache.royale.textLayout.edit.ElementRange.createElementRange(this.textFlow, this.absoluteStart, this.absoluteEnd);
      var /** @type {number} */ begSel = range.absoluteStart;
      var /** @type {number} */ endSel = range.absoluteEnd;
      if (endSel == this.textFlow.textLength - 1)
        ++endSel;
      if (!this.org_apache_royale_textLayout_operations_ClearFormatOperation_undoLeafArray) {
        this.org_apache_royale_textLayout_operations_ClearFormatOperation_undoLeafArray = new Array();
        org.apache.royale.textLayout.edit.ParaEdit.cacheStyleInformation(this.textFlow, begSel, endSel, this.org_apache_royale_textLayout_operations_ClearFormatOperation_undoLeafArray);
      }
      org.apache.royale.textLayout.edit.ParaEdit.applyTextStyleChange(this.textFlow, begSel, endSel, null, this.org_apache_royale_textLayout_operations_ClearFormatOperation_applyLeafFormat);
    } else if (this.originalSelectionState.selectionManagerOperationState && this.textFlow.interactionManager) {
      anyNewSelectionState = this.originalSelectionState.clone();
      var /** @type {org.apache.royale.textLayout.edit.PointFormat} */ newFormat = new org.apache.royale.textLayout.edit.PointFormat(anyNewSelectionState.pointFormat);
      for (var /** @type {string} */ prop in org.apache.royale.textLayout.formats.TextLayoutFormat["description"]) {
        if (this.org_apache_royale_textLayout_operations_ClearFormatOperation_applyLeafFormat[prop] !== undefined)
          newFormat[prop] = undefined;
      }
      anyNewSelectionState.pointFormat = newFormat;
    }
  }
  if (this.org_apache_royale_textLayout_operations_ClearFormatOperation_applyParagraphFormat) {
    if (!this.org_apache_royale_textLayout_operations_ClearFormatOperation_undoParagraphArray) {
      this.org_apache_royale_textLayout_operations_ClearFormatOperation_undoParagraphArray = new Array();
      org.apache.royale.textLayout.edit.ParaEdit.cacheParagraphStyleInformation(this.textFlow, this.absoluteStart, this.absoluteEnd, this.org_apache_royale_textLayout_operations_ClearFormatOperation_undoParagraphArray);
    }
    org.apache.royale.textLayout.edit.ParaEdit.applyParagraphStyleChange(this.textFlow, this.absoluteStart, this.absoluteEnd, null, this.org_apache_royale_textLayout_operations_ClearFormatOperation_applyParagraphFormat);
  }
  if (this.org_apache_royale_textLayout_operations_ClearFormatOperation_applyContainerFormat) {
    if (!this.org_apache_royale_textLayout_operations_ClearFormatOperation_undoContainerArray) {
      this.org_apache_royale_textLayout_operations_ClearFormatOperation_undoContainerArray = new Array();
      org.apache.royale.textLayout.edit.ParaEdit.cacheContainerStyleInformation(this.textFlow, this.absoluteStart, this.absoluteEnd, this.org_apache_royale_textLayout_operations_ClearFormatOperation_undoContainerArray);
    }
    org.apache.royale.textLayout.edit.ParaEdit.applyContainerStyleChange(this.textFlow, this.absoluteStart, this.absoluteEnd, null, this.org_apache_royale_textLayout_operations_ClearFormatOperation_applyContainerFormat);
  }
  return anyNewSelectionState;
};


/** @asprivate 
 * @export
 * @override
 */
org.apache.royale.textLayout.operations.ClearFormatOperation.prototype.doOperation = function() {
  var /** @type {org.apache.royale.textLayout.edit.SelectionState} */ newSelectionState = this.org_apache_royale_textLayout_operations_ClearFormatOperation_doInternal();
  if (newSelectionState && this.textFlow.interactionManager)
    this.textFlow.interactionManager.setSelectionState(newSelectionState);
  return true;
};


/**
 * @export
 * @override
 */
org.apache.royale.textLayout.operations.ClearFormatOperation.prototype.redo = function() {
  var /** @type {org.apache.royale.textLayout.edit.SelectionState} */ newSelectionState = this.org_apache_royale_textLayout_operations_ClearFormatOperation_doInternal();
  return newSelectionState ? newSelectionState : this.originalSelectionState;
};


/** @asprivate 
 * @export
 * @override
 */
org.apache.royale.textLayout.operations.ClearFormatOperation.prototype.undo = function() {
  var /** @type {Object} */ obj;
  var foreachiter0_target = this.org_apache_royale_textLayout_operations_ClearFormatOperation_undoLeafArray;
  for (var foreachiter0 in foreachiter0_target) 
  {
  obj = foreachiter0_target[foreachiter0];
  
    org.apache.royale.textLayout.edit.ParaEdit.setTextStyleChange(this.textFlow, (obj.begIdx) >> 0, (obj.endIdx) >> 0, obj.style);}
  
  var foreachiter1_target = this.org_apache_royale_textLayout_operations_ClearFormatOperation_undoParagraphArray;
  for (var foreachiter1 in foreachiter1_target) 
  {
  obj = foreachiter1_target[foreachiter1];
  
    org.apache.royale.textLayout.edit.ParaEdit.setParagraphStyleChange(this.textFlow, (obj.begIdx) >> 0, (obj.endIdx) >> 0, obj.attributes);}
  
  var foreachiter2_target = this.org_apache_royale_textLayout_operations_ClearFormatOperation_undoContainerArray;
  for (var foreachiter2 in foreachiter2_target) 
  {
  obj = foreachiter2_target[foreachiter2];
  
    org.apache.royale.textLayout.edit.ParaEdit.setContainerStyleChange(obj);}
  
  return this.originalSelectionState;
};


org.apache.royale.textLayout.operations.ClearFormatOperation.prototype.get__leafFormat = function() {
  return this.org_apache_royale_textLayout_operations_ClearFormatOperation_applyLeafFormat;
};


org.apache.royale.textLayout.operations.ClearFormatOperation.prototype.set__leafFormat = function(value) {
  this.org_apache_royale_textLayout_operations_ClearFormatOperation_applyLeafFormat = value ? new org.apache.royale.textLayout.formats.TextLayoutFormat(value) : null;
};


org.apache.royale.textLayout.operations.ClearFormatOperation.prototype.get__paragraphFormat = function() {
  return this.org_apache_royale_textLayout_operations_ClearFormatOperation_applyParagraphFormat;
};


org.apache.royale.textLayout.operations.ClearFormatOperation.prototype.set__paragraphFormat = function(value) {
  this.org_apache_royale_textLayout_operations_ClearFormatOperation_applyParagraphFormat = value ? new org.apache.royale.textLayout.formats.TextLayoutFormat(value) : null;
};


org.apache.royale.textLayout.operations.ClearFormatOperation.prototype.get__containerFormat = function() {
  return this.org_apache_royale_textLayout_operations_ClearFormatOperation_applyContainerFormat;
};


org.apache.royale.textLayout.operations.ClearFormatOperation.prototype.set__containerFormat = function(value) {
  this.org_apache_royale_textLayout_operations_ClearFormatOperation_applyContainerFormat = value ? new org.apache.royale.textLayout.formats.TextLayoutFormat(value) : null;
};


Object.defineProperties(org.apache.royale.textLayout.operations.ClearFormatOperation.prototype, /** @lends {org.apache.royale.textLayout.operations.ClearFormatOperation.prototype} */ {
/**
  * @export
  * @type {org.apache.royale.textLayout.formats.ITextLayoutFormat} */
leafFormat: {
get: org.apache.royale.textLayout.operations.ClearFormatOperation.prototype.get__leafFormat,
set: org.apache.royale.textLayout.operations.ClearFormatOperation.prototype.set__leafFormat},
/**
  * @export
  * @type {org.apache.royale.textLayout.formats.ITextLayoutFormat} */
paragraphFormat: {
get: org.apache.royale.textLayout.operations.ClearFormatOperation.prototype.get__paragraphFormat,
set: org.apache.royale.textLayout.operations.ClearFormatOperation.prototype.set__paragraphFormat},
/**
  * @export
  * @type {org.apache.royale.textLayout.formats.ITextLayoutFormat} */
containerFormat: {
get: org.apache.royale.textLayout.operations.ClearFormatOperation.prototype.get__containerFormat,
set: org.apache.royale.textLayout.operations.ClearFormatOperation.prototype.set__containerFormat}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.textLayout.operations.ClearFormatOperation.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'ClearFormatOperation', qName: 'org.apache.royale.textLayout.operations.ClearFormatOperation', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.textLayout.operations.ClearFormatOperation.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'leafFormat': { type: 'org.apache.royale.textLayout.formats.ITextLayoutFormat', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.operations.ClearFormatOperation'},
        'paragraphFormat': { type: 'org.apache.royale.textLayout.formats.ITextLayoutFormat', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.operations.ClearFormatOperation'},
        'containerFormat': { type: 'org.apache.royale.textLayout.formats.ITextLayoutFormat', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.operations.ClearFormatOperation'}
      };
    },
    methods: function () {
      return {
        'ClearFormatOperation': { type: '', declaredBy: 'org.apache.royale.textLayout.operations.ClearFormatOperation', parameters: function () { return [ 'org.apache.royale.textLayout.edit.SelectionState', false ,'org.apache.royale.textLayout.formats.ITextLayoutFormat', false ,'org.apache.royale.textLayout.formats.ITextLayoutFormat', false ,'org.apache.royale.textLayout.formats.ITextLayoutFormat', true ]; }},
        'doOperation': { type: 'Boolean', declaredBy: 'org.apache.royale.textLayout.operations.ClearFormatOperation'},
        'redo': { type: 'org.apache.royale.textLayout.edit.SelectionState', declaredBy: 'org.apache.royale.textLayout.operations.ClearFormatOperation'},
        'undo': { type: 'org.apache.royale.textLayout.edit.SelectionState', declaredBy: 'org.apache.royale.textLayout.operations.ClearFormatOperation'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.textLayout.operations.ClearFormatOperation.prototype.ROYALE_COMPILE_FLAGS = 10;
