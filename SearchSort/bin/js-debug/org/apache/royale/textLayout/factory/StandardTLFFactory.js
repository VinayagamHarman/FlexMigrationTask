/**
 * Generated by Apache Royale Compiler from org/apache/royale/textLayout/factory/StandardTLFFactory.as
 * org.apache.royale.textLayout.factory.StandardTLFFactory
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.textLayout.factory.StandardTLFFactory');
/* Royale Dependency List: org.apache.royale.core.IParentIUIBase,org.apache.royale.graphics.ICompoundGraphic,org.apache.royale.graphics.IRect,org.apache.royale.svg.CompoundGraphic,org.apache.royale.svg.GraphicContainer,org.apache.royale.svg.Rect,org.apache.royale.text.engine.ITextFactory,org.apache.royale.text.html.HTMLTextFactory,XML*/

goog.require('org.apache.royale.textLayout.factory.ITLFFactory');



/**
 * @constructor
 * @implements {org.apache.royale.textLayout.factory.ITLFFactory}
 */
org.apache.royale.textLayout.factory.StandardTLFFactory = function() {
};


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.royale.textLayout.factory.StandardTLFFactory', org.apache.royale.textLayout.factory.StandardTLFFactory);


/**
 * @export
 * @param {string=} blendMode
 * @return {org.apache.royale.graphics.IRect}
 */
org.apache.royale.textLayout.factory.StandardTLFFactory.prototype.getRect = function(blendMode) {
  blendMode = typeof blendMode !== 'undefined' ? blendMode : "";
  return new org.apache.royale.svg.Rect();
};


/**
 * @export
 * @param {string=} blendMode
 * @return {org.apache.royale.graphics.ICompoundGraphic}
 */
org.apache.royale.textLayout.factory.StandardTLFFactory.prototype.getCompoundGraphic = function(blendMode) {
  blendMode = typeof blendMode !== 'undefined' ? blendMode : "";
  return new org.apache.royale.svg.CompoundGraphic();
};


/**
 * @export
 * @return {org.apache.royale.core.IParentIUIBase}
 */
org.apache.royale.textLayout.factory.StandardTLFFactory.prototype.getContainer = function() {
  return new org.apache.royale.svg.GraphicContainer();
};


/**
 * @private
 * @type {org.apache.royale.text.engine.ITextFactory}
 */
org.apache.royale.textLayout.factory.StandardTLFFactory.factory;


/**
 * @private
 * @type {org.apache.royale.core.IParentIUIBase}
 */
org.apache.royale.textLayout.factory.StandardTLFFactory.prototype.org_apache_royale_textLayout_factory_StandardTLFFactory__currentContainer;


/**
 * @export
 * @param {Object} obj
 * @return {string}
 */
org.apache.royale.textLayout.factory.StandardTLFFactory.prototype.getBlendMode = function(obj) {
  return "normal";
};


/**
 * @export
 * @param {Object} obj
 * @param {string} value
 */
org.apache.royale.textLayout.factory.StandardTLFFactory.prototype.setBlendMode = function(obj, value) {
};


org.apache.royale.textLayout.factory.StandardTLFFactory.prototype.get__textFactory = function() {
  if (!org.apache.royale.textLayout.factory.StandardTLFFactory.factory)
    org.apache.royale.textLayout.factory.StandardTLFFactory.factory = new org.apache.royale.text.html.HTMLTextFactory();
  org.apache.royale.textLayout.factory.StandardTLFFactory.factory.currentContainer = this.currentContainer;
  return org.apache.royale.textLayout.factory.StandardTLFFactory.factory;
};


org.apache.royale.textLayout.factory.StandardTLFFactory.prototype.get__currentContainer = function() {
  return this.org_apache_royale_textLayout_factory_StandardTLFFactory__currentContainer;
};


org.apache.royale.textLayout.factory.StandardTLFFactory.prototype.set__currentContainer = function(value) {
  this.org_apache_royale_textLayout_factory_StandardTLFFactory__currentContainer = value;
};


Object.defineProperties(org.apache.royale.textLayout.factory.StandardTLFFactory.prototype, /** @lends {org.apache.royale.textLayout.factory.StandardTLFFactory.prototype} */ {
/**
  * @export
  * @type {org.apache.royale.text.engine.ITextFactory} */
textFactory: {
get: org.apache.royale.textLayout.factory.StandardTLFFactory.prototype.get__textFactory},
/**
  * @export
  * @type {org.apache.royale.core.IParentIUIBase} */
currentContainer: {
get: org.apache.royale.textLayout.factory.StandardTLFFactory.prototype.get__currentContainer,
set: org.apache.royale.textLayout.factory.StandardTLFFactory.prototype.set__currentContainer}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.textLayout.factory.StandardTLFFactory.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'StandardTLFFactory', qName: 'org.apache.royale.textLayout.factory.StandardTLFFactory', kind: 'class' }], interfaces: [org.apache.royale.textLayout.factory.ITLFFactory] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.textLayout.factory.StandardTLFFactory.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'textFactory': { type: 'org.apache.royale.text.engine.ITextFactory', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.factory.StandardTLFFactory'},
        'currentContainer': { type: 'org.apache.royale.core.IParentIUIBase', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.factory.StandardTLFFactory'}
      };
    },
    methods: function () {
      return {
        'getRect': { type: 'org.apache.royale.graphics.IRect', declaredBy: 'org.apache.royale.textLayout.factory.StandardTLFFactory', parameters: function () { return [ 'String', true ]; }},
        'getCompoundGraphic': { type: 'org.apache.royale.graphics.ICompoundGraphic', declaredBy: 'org.apache.royale.textLayout.factory.StandardTLFFactory', parameters: function () { return [ 'String', true ]; }},
        'getContainer': { type: 'org.apache.royale.core.IParentIUIBase', declaredBy: 'org.apache.royale.textLayout.factory.StandardTLFFactory'},
        'getBlendMode': { type: 'String', declaredBy: 'org.apache.royale.textLayout.factory.StandardTLFFactory', parameters: function () { return [ 'Object', false ]; }},
        'setBlendMode': { type: 'void', declaredBy: 'org.apache.royale.textLayout.factory.StandardTLFFactory', parameters: function () { return [ 'Object', false ,'String', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.textLayout.factory.StandardTLFFactory.prototype.ROYALE_COMPILE_FLAGS = 10;
