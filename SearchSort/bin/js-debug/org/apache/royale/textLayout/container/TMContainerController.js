/**
 * Generated by Apache Royale Compiler from org/apache/royale/textLayout/container/TMContainerController.as
 * org.apache.royale.textLayout.container.TMContainerController
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.textLayout.container.TMContainerController');
/* Royale Dependency List: org.apache.royale.core.IParentIUIBase,org.apache.royale.core.IUIBase,org.apache.royale.text.engine.ITextLine,org.apache.royale.textLayout.container.ScrollPolicy,org.apache.royale.textLayout.container.TextContainerManager,org.apache.royale.textLayout.dummy.ContextMenu,org.apache.royale.textLayout.edit.IInteractionEventHandler,org.apache.royale.textLayout.formats.BlockProgression,XML*/

goog.require('org.apache.royale.textLayout.container.ContainerController');



/**
 * @constructor
 * @extends {org.apache.royale.textLayout.container.ContainerController}
 * @param {org.apache.royale.core.IParentIUIBase} container
 * @param {number} compositionWidth
 * @param {number} compositionHeight
 * @param {org.apache.royale.textLayout.container.TextContainerManager} tm
 */
org.apache.royale.textLayout.container.TMContainerController = function(container, compositionWidth, compositionHeight, tm) {
  org.apache.royale.textLayout.container.TMContainerController.base(this, 'constructor', container, compositionWidth, compositionHeight);
  this.org_apache_royale_textLayout_container_TMContainerController__inputManager = tm;
  this.verticalScrollPolicy = tm.verticalScrollPolicy;
  this.horizontalScrollPolicy = tm.horizontalScrollPolicy;
};
goog.inherits(org.apache.royale.textLayout.container.TMContainerController, org.apache.royale.textLayout.container.ContainerController);


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.royale.textLayout.container.TMContainerController', org.apache.royale.textLayout.container.TMContainerController);


/**
 * @private
 * @type {org.apache.royale.textLayout.container.TextContainerManager}
 */
org.apache.royale.textLayout.container.TMContainerController.prototype.org_apache_royale_textLayout_container_TMContainerController__inputManager;


/** Reroute to the TextContainerManger's override.  Reuse the one that's already been created. 
 * @protected
 * @override
 */
org.apache.royale.textLayout.container.TMContainerController.prototype.createContextMenu = function() {
  return this.org_apache_royale_textLayout_container_TMContainerController__inputManager.getContextMenu();
};


/** @asprivate 
 * @export
 */
org.apache.royale.textLayout.container.TMContainerController.prototype.doUpdateVisibleRectangle = function() {
  this.updateVisibleRectangle();
};


/** @asprivate. Override clones and enhances parent class functionality. 
 * @protected
 * @override
 */
org.apache.royale.textLayout.container.TMContainerController.prototype.updateVisibleRectangle = function() {
  var /** @type {number} */ xpos;
  var /** @type {number} */ ypos;
  xpos = this.horizontalScrollPosition;
  if (this.effectiveBlockProgression == org.apache.royale.textLayout.formats.BlockProgression.RL && (this.verticalScrollPolicy != org.apache.royale.textLayout.container.ScrollPolicy.OFF || this.horizontalScrollPolicy != org.apache.royale.textLayout.container.ScrollPolicy.OFF))
    xpos -= !isNaN(this.compositionWidth) ? this.compositionWidth : this.contentWidth;
  ypos = this.verticalScrollPosition;
  this._hasScrollRect = this.org_apache_royale_textLayout_container_TMContainerController__inputManager.drawBackgroundAndSetScrollRect(xpos, ypos);
};


/** @asprivate 
 * @export
 * @override
 */
org.apache.royale.textLayout.container.TMContainerController.prototype.getInteractionHandler = function() {
  return this.org_apache_royale_textLayout_container_TMContainerController__inputManager;
};


/** @asprivate 
 * @export
 * @override
 */
org.apache.royale.textLayout.container.TMContainerController.prototype.attachContextMenu = function() {
  if (this.org_apache_royale_textLayout_container_TMContainerController__inputManager.getContextMenu() != null)
    org.apache.royale.textLayout.container.TMContainerController.superClass_.attachContextMenu.apply(this);
};


/** @asprivate 
 * @export
 * @override
 */
org.apache.royale.textLayout.container.TMContainerController.prototype.removeContextMenu = function() {
  if (this.org_apache_royale_textLayout_container_TMContainerController__inputManager.getContextMenu())
    org.apache.royale.textLayout.container.TMContainerController.superClass_.removeContextMenu.apply(this);
};


/**
 * @protected
 * @override
 */
org.apache.royale.textLayout.container.TMContainerController.prototype.getFirstTextLineChildIndex = function() {
  return this.org_apache_royale_textLayout_container_TMContainerController__inputManager.getFirstTextLineChildIndex();
};


/**
 * @protected
 * @override
 */
org.apache.royale.textLayout.container.TMContainerController.prototype.addTextLine = function(textLine, index) {
  this.org_apache_royale_textLayout_container_TMContainerController__inputManager.addTextLine(textLine, index);
};


/**
 * @protected
 * @override
 */
org.apache.royale.textLayout.container.TMContainerController.prototype.removeTextLine = function(textLine) {
  this.org_apache_royale_textLayout_container_TMContainerController__inputManager.removeTextLine(textLine);
};


/**
 * @protected
 * @override
 */
org.apache.royale.textLayout.container.TMContainerController.prototype.addBackgroundShape = function(shape) {
  this.org_apache_royale_textLayout_container_TMContainerController__inputManager.addBackgroundShape(shape);
};


/**
 * @protected
 * @override
 */
org.apache.royale.textLayout.container.TMContainerController.prototype.removeBackgroundShape = function(shape) {
  this.org_apache_royale_textLayout_container_TMContainerController__inputManager.removeBackgroundShape(shape);
};


/**
 * @protected
 * @override
 */
org.apache.royale.textLayout.container.TMContainerController.prototype.addSelectionContainer = function(selectionContainer) {
  this.org_apache_royale_textLayout_container_TMContainerController__inputManager.addSelectionContainer(selectionContainer);
};


/**
 * @protected
 * @override
 */
org.apache.royale.textLayout.container.TMContainerController.prototype.removeSelectionContainer = function(selectionContainer) {
  this.org_apache_royale_textLayout_container_TMContainerController__inputManager.removeSelectionContainer(selectionContainer);
};


/**
 * @protected
 * @override
 */
org.apache.royale.textLayout.container.TMContainerController.prototype.addInlineGraphicElement = function(parent, inlineGraphicElement, index) {
  this.org_apache_royale_textLayout_container_TMContainerController__inputManager.addInlineGraphicElement(parent, inlineGraphicElement, index);
};


/**
 * @protected
 * @override
 */
org.apache.royale.textLayout.container.TMContainerController.prototype.removeInlineGraphicElement = function(parent, inlineGraphicElement) {
  this.org_apache_royale_textLayout_container_TMContainerController__inputManager.removeInlineGraphicElement(parent, inlineGraphicElement);
};


org.apache.royale.textLayout.container.TMContainerController.prototype.get__textContainerManager = function() {
  return this.org_apache_royale_textLayout_container_TMContainerController__inputManager;
};


org.apache.royale.textLayout.container.TMContainerController.prototype.get__attachTransparentBackground = function() {
  return false;
};


Object.defineProperties(org.apache.royale.textLayout.container.TMContainerController.prototype, /** @lends {org.apache.royale.textLayout.container.TMContainerController.prototype} */ {
/**
  * @export
  * @type {org.apache.royale.textLayout.container.TextContainerManager} */
textContainerManager: {
get: org.apache.royale.textLayout.container.TMContainerController.prototype.get__textContainerManager},
/**
  * @type {boolean} */
attachTransparentBackground: {
get: org.apache.royale.textLayout.container.TMContainerController.prototype.get__attachTransparentBackground}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.textLayout.container.TMContainerController.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'TMContainerController', qName: 'org.apache.royale.textLayout.container.TMContainerController', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.textLayout.container.TMContainerController.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'textContainerManager': { type: 'org.apache.royale.textLayout.container.TextContainerManager', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.container.TMContainerController'}
      };
    },
    methods: function () {
      return {
        'TMContainerController': { type: '', declaredBy: 'org.apache.royale.textLayout.container.TMContainerController', parameters: function () { return [ 'org.apache.royale.core.IParentIUIBase', false ,'Number', false ,'Number', false ,'org.apache.royale.textLayout.container.TextContainerManager', false ]; }},
        'doUpdateVisibleRectangle': { type: 'void', declaredBy: 'org.apache.royale.textLayout.container.TMContainerController'},
        'getInteractionHandler': { type: 'org.apache.royale.textLayout.edit.IInteractionEventHandler', declaredBy: 'org.apache.royale.textLayout.container.TMContainerController'},
        'attachContextMenu': { type: 'void', declaredBy: 'org.apache.royale.textLayout.container.TMContainerController'},
        'removeContextMenu': { type: 'void', declaredBy: 'org.apache.royale.textLayout.container.TMContainerController'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.textLayout.container.TMContainerController.prototype.ROYALE_COMPILE_FLAGS = 10;
