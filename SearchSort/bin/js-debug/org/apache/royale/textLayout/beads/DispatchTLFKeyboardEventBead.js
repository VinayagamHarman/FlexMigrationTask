/**
 * Generated by Apache Royale Compiler from org/apache/royale/textLayout/beads/DispatchTLFKeyboardEventBead.as
 * org.apache.royale.textLayout.beads.DispatchTLFKeyboardEventBead
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.textLayout.beads.DispatchTLFKeyboardEventBead');
/* Royale Dependency List: org.apache.royale.core.IStrand,org.apache.royale.events.IEventDispatcher,org.apache.royale.events.KeyboardEvent,org.apache.royale.events.utils.EditingKeys,org.apache.royale.events.utils.KeyboardEventConverter,org.apache.royale.text.events.TextEvent,org.apache.royale.textLayout.events.FocusEvent,org.apache.royale.utils.Language,XML*/

goog.require('org.apache.royale.core.IBead');



/**
 *  constructor.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.0
 * @constructor
 * @implements {org.apache.royale.core.IBead}
 */
org.apache.royale.textLayout.beads.DispatchTLFKeyboardEventBead = function() {
};


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.royale.textLayout.beads.DispatchTLFKeyboardEventBead', org.apache.royale.textLayout.beads.DispatchTLFKeyboardEventBead);


/**
 * @private
 * @type {org.apache.royale.core.IStrand}
 */
org.apache.royale.textLayout.beads.DispatchTLFKeyboardEventBead.prototype.org_apache_royale_textLayout_beads_DispatchTLFKeyboardEventBead__strand;


/**
 * @private
 * @type {boolean}
 */
org.apache.royale.textLayout.beads.DispatchTLFKeyboardEventBead.prototype.org_apache_royale_textLayout_beads_DispatchTLFKeyboardEventBead_inKeyEventHandler;


/**
 * @asprivate
 * @protected
 * @param {org.apache.royale.events.KeyboardEvent} event
 */
org.apache.royale.textLayout.beads.DispatchTLFKeyboardEventBead.prototype.keyEventHandler = function(event) {
  if (this.org_apache_royale_textLayout_beads_DispatchTLFKeyboardEventBead_inKeyEventHandler)
    return;
  this.org_apache_royale_textLayout_beads_DispatchTLFKeyboardEventBead_inKeyEventHandler = true;
  event.stopImmediatePropagation();
  var /** @type {org.apache.royale.events.KeyboardEvent} */ newEvent = org.apache.royale.events.utils.KeyboardEventConverter.convert(event);
  this.org_apache_royale_textLayout_beads_DispatchTLFKeyboardEventBead__strand.dispatchEvent(newEvent);
  if (newEvent.defaultPrevented) {
    event.preventDefault();
  }
  if (event.type == "keypress") {
    if (event.key == org.apache.royale.events.utils.EditingKeys.BACKSPACE)
      return;
    var /** @type {org.apache.royale.text.events.TextEvent} */ textEvent = new org.apache.royale.text.events.TextEvent(org.apache.royale.text.events.TextEvent.TEXT_INPUT);
    if (event.key != null)
      textEvent.text = event.key;
    else if (event['which'] != null)
      textEvent.text = String.fromCharCode(event['which']);
    else
      textEvent.text = String.fromCharCode(event['keyCode']);
    this.org_apache_royale_textLayout_beads_DispatchTLFKeyboardEventBead__strand.dispatchEvent(textEvent);
  }
  this.org_apache_royale_textLayout_beads_DispatchTLFKeyboardEventBead_inKeyEventHandler = false;
};


/**
 * @asprivate
 * @protected
 * @param {org.apache.royale.textLayout.events.FocusEvent} event
 */
org.apache.royale.textLayout.beads.DispatchTLFKeyboardEventBead.prototype.focusEventHandler = function(event) {
  event.stopImmediatePropagation();
  var /** @type {org.apache.royale.textLayout.events.FocusEvent} */ newEvent = new org.apache.royale.textLayout.events.FocusEvent(event.type == "focus" ? "focusIn" : "focusOut");
  this.org_apache_royale_textLayout_beads_DispatchTLFKeyboardEventBead__strand.dispatchEvent(newEvent);
  if (newEvent.defaultPrevented) {
    event.preventDefault();
  }
};


org.apache.royale.textLayout.beads.DispatchTLFKeyboardEventBead.prototype.set__strand = function(value) {
  this.org_apache_royale_textLayout_beads_DispatchTLFKeyboardEventBead__strand = value;
  
  this.org_apache_royale_textLayout_beads_DispatchTLFKeyboardEventBead__strand.element.addEventListener('keydown', org.apache.royale.utils.Language.closure(this.keyEventHandler, this, 'keyEventHandler'));
  this.org_apache_royale_textLayout_beads_DispatchTLFKeyboardEventBead__strand.element.addEventListener('keypress', org.apache.royale.utils.Language.closure(this.keyEventHandler, this, 'keyEventHandler'));
  this.org_apache_royale_textLayout_beads_DispatchTLFKeyboardEventBead__strand.element.addEventListener('keyup', org.apache.royale.utils.Language.closure(this.keyEventHandler, this, 'keyEventHandler'));
  this.org_apache_royale_textLayout_beads_DispatchTLFKeyboardEventBead__strand.element.addEventListener('focus', org.apache.royale.utils.Language.closure(this.focusEventHandler, this, 'focusEventHandler'));
  this.org_apache_royale_textLayout_beads_DispatchTLFKeyboardEventBead__strand.element.addEventListener('blur', org.apache.royale.utils.Language.closure(this.focusEventHandler, this, 'focusEventHandler'));
};


Object.defineProperties(org.apache.royale.textLayout.beads.DispatchTLFKeyboardEventBead.prototype, /** @lends {org.apache.royale.textLayout.beads.DispatchTLFKeyboardEventBead.prototype} */ {
/**
  * @export
  * @type {org.apache.royale.core.IStrand} */
strand: {
set: org.apache.royale.textLayout.beads.DispatchTLFKeyboardEventBead.prototype.set__strand}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.textLayout.beads.DispatchTLFKeyboardEventBead.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'DispatchTLFKeyboardEventBead', qName: 'org.apache.royale.textLayout.beads.DispatchTLFKeyboardEventBead', kind: 'class' }], interfaces: [org.apache.royale.core.IBead] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.textLayout.beads.DispatchTLFKeyboardEventBead.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'strand': { type: 'org.apache.royale.core.IStrand', access: 'writeonly', declaredBy: 'org.apache.royale.textLayout.beads.DispatchTLFKeyboardEventBead'}
      };
    },
    methods: function () {
      return {
        'DispatchTLFKeyboardEventBead': { type: '', declaredBy: 'org.apache.royale.textLayout.beads.DispatchTLFKeyboardEventBead'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.textLayout.beads.DispatchTLFKeyboardEventBead.prototype.ROYALE_COMPILE_FLAGS = 10;
