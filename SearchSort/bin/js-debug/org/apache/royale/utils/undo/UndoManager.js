/**
 * Generated by Apache Royale Compiler from org/apache/royale/utils/undo/UndoManager.as
 * org.apache.royale.utils.undo.UndoManager
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.utils.undo.UndoManager');
/* Royale Dependency List: org.apache.royale.utils.undo.IOperation,org.apache.royale.utils.Language*/

goog.require('org.apache.royale.utils.undo.IUndoManager');



/**
 * Creates an UndoManager object.
 * 
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.0
 * @constructor
 * @implements {org.apache.royale.utils.undo.IUndoManager}
 */
org.apache.royale.utils.undo.UndoManager = function() {
  this.org_apache_royale_utils_undo_UndoManager_undoStack = [];
  this.org_apache_royale_utils_undo_UndoManager_redoStack = [];
};


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.royale.utils.undo.UndoManager', org.apache.royale.utils.undo.UndoManager);


/**
 * @private
 * @type {Array}
 */
org.apache.royale.utils.undo.UndoManager.prototype.org_apache_royale_utils_undo_UndoManager_undoStack;


/**
 * @private
 * @type {Array}
 */
org.apache.royale.utils.undo.UndoManager.prototype.org_apache_royale_utils_undo_UndoManager_redoStack;


/**
 * @private
 * @type {number}
 */
org.apache.royale.utils.undo.UndoManager.prototype.org_apache_royale_utils_undo_UndoManager__undoAndRedoItemLimit = 25;


/**
 * @copy IUndoManager#clearAll()
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.0
 * @export
 */
org.apache.royale.utils.undo.UndoManager.prototype.clearAll = function() {
  this.org_apache_royale_utils_undo_UndoManager_undoStack.length = 0;
  this.org_apache_royale_utils_undo_UndoManager_redoStack.length = 0;
};


/**
 * @copy IUndoManager#canUndo()
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.0
 * @export
 * @return {boolean}
 */
org.apache.royale.utils.undo.UndoManager.prototype.canUndo = function() {
  return this.org_apache_royale_utils_undo_UndoManager_undoStack.length > 0;
};


/**
 * @copy IUndoManager#peekUndo()
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.0
 * @export
 * @return {org.apache.royale.utils.undo.IOperation}
 */
org.apache.royale.utils.undo.UndoManager.prototype.peekUndo = function() {
  return this.org_apache_royale_utils_undo_UndoManager_undoStack.length > 0 ? this.org_apache_royale_utils_undo_UndoManager_undoStack[this.org_apache_royale_utils_undo_UndoManager_undoStack.length - 1] : null;
};


/**
 * @copy IUndoManager#popUndo()
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.0
 * @export
 * @return {org.apache.royale.utils.undo.IOperation}
 */
org.apache.royale.utils.undo.UndoManager.prototype.popUndo = function() {
  return org.apache.royale.utils.Language.as(this.org_apache_royale_utils_undo_UndoManager_undoStack.pop(), org.apache.royale.utils.undo.IOperation, true);
};


/**
 * @copy IUndoManager#pushUndo()
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.0
 * @export
 * @param {org.apache.royale.utils.undo.IOperation} operation
 */
org.apache.royale.utils.undo.UndoManager.prototype.pushUndo = function(operation) {
  this.org_apache_royale_utils_undo_UndoManager_undoStack.push(operation);
  this.org_apache_royale_utils_undo_UndoManager_trimUndoRedoStacks();
};


/**
 * @copy IUndoManager#canRedo()
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.0
 * @export
 * @return {boolean}
 */
org.apache.royale.utils.undo.UndoManager.prototype.canRedo = function() {
  return this.org_apache_royale_utils_undo_UndoManager_redoStack.length > 0;
};


/**
 * @copy IUndoManager#clearRedo()
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.0
 * @export
 */
org.apache.royale.utils.undo.UndoManager.prototype.clearRedo = function() {
  this.org_apache_royale_utils_undo_UndoManager_redoStack.length = 0;
};


/**
 * @copy IUndoManager#peekRedo()
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.0
 * @export
 * @return {org.apache.royale.utils.undo.IOperation}
 */
org.apache.royale.utils.undo.UndoManager.prototype.peekRedo = function() {
  return this.org_apache_royale_utils_undo_UndoManager_redoStack.length > 0 ? this.org_apache_royale_utils_undo_UndoManager_redoStack[this.org_apache_royale_utils_undo_UndoManager_redoStack.length - 1] : null;
};


/**
 * @copy IUndoManager#popRedo()
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.0
 * @export
 * @return {org.apache.royale.utils.undo.IOperation}
 */
org.apache.royale.utils.undo.UndoManager.prototype.popRedo = function() {
  return org.apache.royale.utils.Language.as(this.org_apache_royale_utils_undo_UndoManager_redoStack.pop(), org.apache.royale.utils.undo.IOperation, true);
};


/**
 * @copy IUndoManager#pushRedo()
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.0
 * @export
 * @param {org.apache.royale.utils.undo.IOperation} operation
 */
org.apache.royale.utils.undo.UndoManager.prototype.pushRedo = function(operation) {
  this.org_apache_royale_utils_undo_UndoManager_redoStack.push(operation);
  this.org_apache_royale_utils_undo_UndoManager_trimUndoRedoStacks();
};


/** 
 * @copy IUndoManager#undo()
 * @see flashx.textLayout.edit.IEditManager#undo()
 * 
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.0
 * @export
 */
org.apache.royale.utils.undo.UndoManager.prototype.undo = function() {
  if (this.canUndo()) {
    var /** @type {org.apache.royale.utils.undo.IOperation} */ undoOp = this.popUndo();
    undoOp.performUndo();
  }
};


/** 
 * @copy IUndoManager#redo()
 * 
 * @see flashx.textLayout.edit.IEditManager#redo()
 * 
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.0
 * @export
 */
org.apache.royale.utils.undo.UndoManager.prototype.redo = function() {
  if (this.canRedo()) {
    var /** @type {org.apache.royale.utils.undo.IOperation} */ redoOp = this.popRedo();
    redoOp.performRedo();
  }
};


/** trim the sizes of the undo/redo stacks to the maximum limits 
 * @private
 */
org.apache.royale.utils.undo.UndoManager.prototype.org_apache_royale_utils_undo_UndoManager_trimUndoRedoStacks = function() {
  var /** @type {number} */ numItems = (this.org_apache_royale_utils_undo_UndoManager_undoStack.length + this.org_apache_royale_utils_undo_UndoManager_redoStack.length) >> 0;
  if (numItems > this.org_apache_royale_utils_undo_UndoManager__undoAndRedoItemLimit) {
    var /** @type {number} */ numToSplice = (Math.min(numItems - this.org_apache_royale_utils_undo_UndoManager__undoAndRedoItemLimit, this.org_apache_royale_utils_undo_UndoManager_redoStack.length)) >> 0;
    if (numToSplice) {
      this.org_apache_royale_utils_undo_UndoManager_redoStack.splice(0, (numToSplice) >>> 0);
      numItems = (this.org_apache_royale_utils_undo_UndoManager_undoStack.length + this.org_apache_royale_utils_undo_UndoManager_redoStack.length) >> 0;
    }
    if (numItems > this.org_apache_royale_utils_undo_UndoManager__undoAndRedoItemLimit) {
      numToSplice = (Math.min(numItems - this.org_apache_royale_utils_undo_UndoManager__undoAndRedoItemLimit, this.org_apache_royale_utils_undo_UndoManager_undoStack.length)) >> 0;
      this.org_apache_royale_utils_undo_UndoManager_undoStack.splice(0, (numToSplice) >>> 0);
    }
  }
};


org.apache.royale.utils.undo.UndoManager.prototype.get__undoAndRedoItemLimit = function() {
  return this.org_apache_royale_utils_undo_UndoManager__undoAndRedoItemLimit;
};


org.apache.royale.utils.undo.UndoManager.prototype.set__undoAndRedoItemLimit = function(value) {
  this.org_apache_royale_utils_undo_UndoManager__undoAndRedoItemLimit = value;
  this.org_apache_royale_utils_undo_UndoManager_trimUndoRedoStacks();
};


Object.defineProperties(org.apache.royale.utils.undo.UndoManager.prototype, /** @lends {org.apache.royale.utils.undo.UndoManager.prototype} */ {
/**
  * @export
  * @type {number} */
undoAndRedoItemLimit: {
get: org.apache.royale.utils.undo.UndoManager.prototype.get__undoAndRedoItemLimit,
set: org.apache.royale.utils.undo.UndoManager.prototype.set__undoAndRedoItemLimit}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.utils.undo.UndoManager.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'UndoManager', qName: 'org.apache.royale.utils.undo.UndoManager', kind: 'class' }], interfaces: [org.apache.royale.utils.undo.IUndoManager] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.utils.undo.UndoManager.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'undoAndRedoItemLimit': { type: 'int', access: 'readwrite', declaredBy: 'org.apache.royale.utils.undo.UndoManager'}
      };
    },
    methods: function () {
      return {
        'UndoManager': { type: '', declaredBy: 'org.apache.royale.utils.undo.UndoManager'},
        'clearAll': { type: 'void', declaredBy: 'org.apache.royale.utils.undo.UndoManager'},
        'canUndo': { type: 'Boolean', declaredBy: 'org.apache.royale.utils.undo.UndoManager'},
        'peekUndo': { type: 'org.apache.royale.utils.undo.IOperation', declaredBy: 'org.apache.royale.utils.undo.UndoManager'},
        'popUndo': { type: 'org.apache.royale.utils.undo.IOperation', declaredBy: 'org.apache.royale.utils.undo.UndoManager'},
        'pushUndo': { type: 'void', declaredBy: 'org.apache.royale.utils.undo.UndoManager', parameters: function () { return [ 'org.apache.royale.utils.undo.IOperation', false ]; }},
        'canRedo': { type: 'Boolean', declaredBy: 'org.apache.royale.utils.undo.UndoManager'},
        'clearRedo': { type: 'void', declaredBy: 'org.apache.royale.utils.undo.UndoManager'},
        'peekRedo': { type: 'org.apache.royale.utils.undo.IOperation', declaredBy: 'org.apache.royale.utils.undo.UndoManager'},
        'popRedo': { type: 'org.apache.royale.utils.undo.IOperation', declaredBy: 'org.apache.royale.utils.undo.UndoManager'},
        'pushRedo': { type: 'void', declaredBy: 'org.apache.royale.utils.undo.UndoManager', parameters: function () { return [ 'org.apache.royale.utils.undo.IOperation', false ]; }},
        'undo': { type: 'void', declaredBy: 'org.apache.royale.utils.undo.UndoManager'},
        'redo': { type: 'void', declaredBy: 'org.apache.royale.utils.undo.UndoManager'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.utils.undo.UndoManager.prototype.ROYALE_COMPILE_FLAGS = 10;
