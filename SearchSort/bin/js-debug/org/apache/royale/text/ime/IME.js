/**
 * Generated by Apache Royale Compiler from org/apache/royale/text/ime/IME.as
 * org.apache.royale.text.ime.IME
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.text.ime.IME');
/* Royale Dependency List: */



/**
 * @constructor
 */
org.apache.royale.text.ime.IME = function() {
};


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.royale.text.ime.IME', org.apache.royale.text.ime.IME);


/**
 * @export
 * @nocollapse
 * @type {string}
 */
org.apache.royale.text.ime.IME.conversionMode;


/**
 * @export
 * @nocollapse
 * @type {boolean}
 */
org.apache.royale.text.ime.IME.enabled;


/**
 * @export
 * @nocollapse
 * @type {boolean}
 */
org.apache.royale.text.ime.IME.isSupported;


/**
 * @export
 */
org.apache.royale.text.ime.IME.compositionAbandoned = function() {
};


/**
 * @export
 * @param {number} start
 * @param {number} end
 */
org.apache.royale.text.ime.IME.compositionSelectionChanged = function(start, end) {
};


/**
 * @export
 */
org.apache.royale.text.ime.IME.doConversion = function() {
};


/**
 * @export
 * @param {string} composition
 */
org.apache.royale.text.ime.IME.setCompositionString = function(composition) {
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.text.ime.IME.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'IME', qName: 'org.apache.royale.text.ime.IME', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.text.ime.IME.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        '|conversionMode': { type: 'String', get_set: function (/** * */ v) {return v !== undefined ? org.apache.royale.text.ime.IME.conversionMode = v : org.apache.royale.text.ime.IME.conversionMode;}},
        '|enabled': { type: 'Boolean', get_set: function (/** * */ v) {return v !== undefined ? org.apache.royale.text.ime.IME.enabled = v : org.apache.royale.text.ime.IME.enabled;}},
        '|isSupported': { type: 'Boolean', get_set: function (/** * */ v) {return v !== undefined ? org.apache.royale.text.ime.IME.isSupported = v : org.apache.royale.text.ime.IME.isSupported;}}
      };
    },
    methods: function () {
      return {
        '|compositionAbandoned': { type: 'void', declaredBy: 'org.apache.royale.text.ime.IME'},
        '|compositionSelectionChanged': { type: 'void', declaredBy: 'org.apache.royale.text.ime.IME', parameters: function () { return [ 'int', false ,'int', false ]; }},
        '|doConversion': { type: 'void', declaredBy: 'org.apache.royale.text.ime.IME'},
        '|setCompositionString': { type: 'void', declaredBy: 'org.apache.royale.text.ime.IME', parameters: function () { return [ 'String', false ]; }},
        'IME': { type: '', declaredBy: 'org.apache.royale.text.ime.IME'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.text.ime.IME.prototype.ROYALE_COMPILE_FLAGS = 10;
