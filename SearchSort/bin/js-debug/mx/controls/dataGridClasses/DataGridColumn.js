/**
 * Generated by Apache Royale Compiler from mx/controls/dataGridClasses/DataGridColumn.as
 * mx.controls.dataGridClasses.DataGridColumn
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('mx.controls.dataGridClasses.DataGridColumn');
/* Royale Dependency List: XML,mx.core.UIComponent,mx.core.mx_internal,org.apache.royale.events.Event,org.apache.royale.utils.Language*/

goog.require('org.apache.royale.html.supportClasses.DataGridColumn');



/**
 *  Constructor.
 *
 *  @asparam columnName The name of the field in the data provider 
 *  associated with the column, and the text for the header cell of this 
 *  column.  This is equivalent to setting the <code>dataField</code>
 *  and <code>headerText</code> properties.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @constructor
 * @extends {org.apache.royale.html.supportClasses.DataGridColumn}
 * @param {string=} columnName
 */
mx.controls.dataGridClasses.DataGridColumn = function(columnName) {
  columnName = typeof columnName !== 'undefined' ? columnName : null;
  mx.controls.dataGridClasses.DataGridColumn.base(this, 'constructor');
  if (columnName) {
    this.dataField = columnName;
    this.headerText = columnName;
  }
};
goog.inherits(mx.controls.dataGridClasses.DataGridColumn, org.apache.royale.html.supportClasses.DataGridColumn);


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('mx.controls.dataGridClasses.DataGridColumn', mx.controls.dataGridClasses.DataGridColumn);


/**
 * @private
 * @type {string}
 */
mx.controls.dataGridClasses.DataGridColumn.prototype.mx_controls_dataGridClasses_DataGridColumn__headerText;


/**
 * @export
 * @type {boolean}
 */
mx.controls.dataGridClasses.DataGridColumn.prototype.rendererIsEditor = false;


/**
 * @export
 * @param {Object} data
 * @return {string}
 */
mx.controls.dataGridClasses.DataGridColumn.prototype.itemToLabel = function(data) {
  if (data == null)
    return " ";
  if (org.apache.royale.utils.Language.is(data, XML)) {
    try {
      if (org.apache.royale.utils.Language.as(data, XML).child(this.labelField).length() != 0)
        data = org.apache.royale.utils.Language.as(data, XML).child(this.labelField);
    } catch (e) {
    }
  } else if (org.apache.royale.utils.Language.is(data, Object)) {
    try {
      if (data[this.labelField] != null)
        data = data[this.labelField];
    } catch (e) {
    }
  }
  if (org.apache.royale.utils.Language.is(data, String))
    return String(data);
  try {
    return data.toString();
  } catch (e) {
  }
  return " ";
};


/**
 * @private
 * @type {string}
 */
mx.controls.dataGridClasses.DataGridColumn.prototype.mx_controls_dataGridClasses_DataGridColumn__labelField;


/**
 * @private
 * @type {Function}
 */
mx.controls.dataGridClasses.DataGridColumn.prototype.mx_controls_dataGridClasses_DataGridColumn__labelFunction;


/**
 * @private
 * @type {number}
 */
mx.controls.dataGridClasses.DataGridColumn.prototype.mx_controls_dataGridClasses_DataGridColumn__width = 100;


/**
 * @private
 * @type {number}
 */
mx.controls.dataGridClasses.DataGridColumn.prototype.mx_controls_dataGridClasses_DataGridColumn__minWidth = 20;


/**
 * @private
 * @type {*}
 */
mx.controls.dataGridClasses.DataGridColumn.prototype.mx_controls_dataGridClasses_DataGridColumn__wordWrap;


/**
 * @export
 * @type {boolean}
 */
mx.controls.dataGridClasses.DataGridColumn.prototype.sortDescending = false;


/**
 * @type {mx.core.UIComponent}
 */
mx.controls.dataGridClasses.DataGridColumn.prototype.http_$$www_adobe_com$2006$flex$mx$internal__owner;


/**
 * @type {number}
 */
mx.controls.dataGridClasses.DataGridColumn.prototype.http_$$www_adobe_com$2006$flex$mx$internal__colNum;


mx.controls.dataGridClasses.DataGridColumn.prototype.get__headerText = function() {
  return (this.mx_controls_dataGridClasses_DataGridColumn__headerText != null) ? this.mx_controls_dataGridClasses_DataGridColumn__headerText : this.dataField;
};


mx.controls.dataGridClasses.DataGridColumn.prototype.set__headerText = function(value) {
  this.mx_controls_dataGridClasses_DataGridColumn__headerText = value;
  this.label = value;
  this.dispatchEvent(new org.apache.royale.events.Event("headerTextChanged"));
};


mx.controls.dataGridClasses.DataGridColumn.prototype.get__labelField = function() {
  return this.mx_controls_dataGridClasses_DataGridColumn__labelField;
};


mx.controls.dataGridClasses.DataGridColumn.prototype.set__labelField = function(value) {
  this.mx_controls_dataGridClasses_DataGridColumn__labelField = value;
};


mx.controls.dataGridClasses.DataGridColumn.prototype.get__labelFunction = function() {
  return this.mx_controls_dataGridClasses_DataGridColumn__labelFunction;
};


mx.controls.dataGridClasses.DataGridColumn.prototype.set__labelFunction = function(value) {
  this.mx_controls_dataGridClasses_DataGridColumn__labelFunction = value;
};


mx.controls.dataGridClasses.DataGridColumn.prototype.get__width = function() {
  return this.mx_controls_dataGridClasses_DataGridColumn__width;
};


mx.controls.dataGridClasses.DataGridColumn.prototype.set__width = function(value) {
  this.mx_controls_dataGridClasses_DataGridColumn__width = value;
};


mx.controls.dataGridClasses.DataGridColumn.prototype.get__minWidth = function() {
  return this.mx_controls_dataGridClasses_DataGridColumn__minWidth;
};


mx.controls.dataGridClasses.DataGridColumn.prototype.set__minWidth = function(value) {
  this.mx_controls_dataGridClasses_DataGridColumn__minWidth = value;
};


mx.controls.dataGridClasses.DataGridColumn.prototype.get__textAlign = function() {
  org.apache.royale.utils.Language.trace("textAlign not implemented");
  return 0;
};


mx.controls.dataGridClasses.DataGridColumn.prototype.set__textAlign = function(value) {
  org.apache.royale.utils.Language.trace("textAlign not implemented");
};


mx.controls.dataGridClasses.DataGridColumn.prototype.get__wordWrap = function() {
  return this.mx_controls_dataGridClasses_DataGridColumn__wordWrap;
};


mx.controls.dataGridClasses.DataGridColumn.prototype.set__wordWrap = function(value) {
  this.mx_controls_dataGridClasses_DataGridColumn__wordWrap = value;
};


Object.defineProperties(mx.controls.dataGridClasses.DataGridColumn.prototype, /** @lends {mx.controls.dataGridClasses.DataGridColumn.prototype} */ {
/**
  * @export
  * @type {string} */
headerText: {
get: mx.controls.dataGridClasses.DataGridColumn.prototype.get__headerText,
set: mx.controls.dataGridClasses.DataGridColumn.prototype.set__headerText},
/**
  * @export
  * @type {string} */
labelField: {
get: mx.controls.dataGridClasses.DataGridColumn.prototype.get__labelField,
set: mx.controls.dataGridClasses.DataGridColumn.prototype.set__labelField},
/**
  * @export
  * @type {Function} */
labelFunction: {
get: mx.controls.dataGridClasses.DataGridColumn.prototype.get__labelFunction,
set: mx.controls.dataGridClasses.DataGridColumn.prototype.set__labelFunction},
/**
  * @export
  * @type {number} */
width: {
get: mx.controls.dataGridClasses.DataGridColumn.prototype.get__width,
set: mx.controls.dataGridClasses.DataGridColumn.prototype.set__width},
/**
  * @export
  * @type {number} */
minWidth: {
get: mx.controls.dataGridClasses.DataGridColumn.prototype.get__minWidth,
set: mx.controls.dataGridClasses.DataGridColumn.prototype.set__minWidth},
/**
  * @export
  * @type {Object} */
textAlign: {
get: mx.controls.dataGridClasses.DataGridColumn.prototype.get__textAlign,
set: mx.controls.dataGridClasses.DataGridColumn.prototype.set__textAlign},
/**
  * @export
  * @type {*} */
wordWrap: {
get: mx.controls.dataGridClasses.DataGridColumn.prototype.get__wordWrap,
set: mx.controls.dataGridClasses.DataGridColumn.prototype.set__wordWrap}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
mx.controls.dataGridClasses.DataGridColumn.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'DataGridColumn', qName: 'mx.controls.dataGridClasses.DataGridColumn', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
mx.controls.dataGridClasses.DataGridColumn.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        'rendererIsEditor': { type: 'Boolean', get_set: function (/** mx.controls.dataGridClasses.DataGridColumn */ inst, /** * */ v) {return v !== undefined ? inst.rendererIsEditor = v : inst.rendererIsEditor;}},
        'sortDescending': { type: 'Boolean', get_set: function (/** mx.controls.dataGridClasses.DataGridColumn */ inst, /** * */ v) {return v !== undefined ? inst.sortDescending = v : inst.sortDescending;}},
        'http://www.adobe.com/2006/flex/mx/internal::owner': { type: 'mx.core.UIComponent', get_set: function (/** mx.controls.dataGridClasses.DataGridColumn */ inst, /** * */ v) {return v !== undefined ? inst.http_$$www_adobe_com$2006$flex$mx$internal__owner = v : inst.http_$$www_adobe_com$2006$flex$mx$internal__owner;}},
        'http://www.adobe.com/2006/flex/mx/internal::colNum': { type: 'Number', get_set: function (/** mx.controls.dataGridClasses.DataGridColumn */ inst, /** * */ v) {return v !== undefined ? inst.http_$$www_adobe_com$2006$flex$mx$internal__colNum = v : inst.http_$$www_adobe_com$2006$flex$mx$internal__colNum;}}
      };
    },
    accessors: function () {
      return {
        'headerText': { type: 'String', access: 'readwrite', declaredBy: 'mx.controls.dataGridClasses.DataGridColumn', metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'headerTextChanged' } ] } ]; }},
        'labelField': { type: 'String', access: 'readwrite', declaredBy: 'mx.controls.dataGridClasses.DataGridColumn'},
        'labelFunction': { type: 'Function', access: 'readwrite', declaredBy: 'mx.controls.dataGridClasses.DataGridColumn', metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'labelFunctionChanged' } ] } ]; }},
        'width': { type: 'Number', access: 'readwrite', declaredBy: 'mx.controls.dataGridClasses.DataGridColumn', metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'widthChanged' } ] } ]; }},
        'minWidth': { type: 'Number', access: 'readwrite', declaredBy: 'mx.controls.dataGridClasses.DataGridColumn'},
        'textAlign': { type: 'Object', access: 'readwrite', declaredBy: 'mx.controls.dataGridClasses.DataGridColumn'},
        'wordWrap': { type: '*', access: 'readwrite', declaredBy: 'mx.controls.dataGridClasses.DataGridColumn'}
      };
    },
    methods: function () {
      return {
        'DataGridColumn': { type: '', declaredBy: 'mx.controls.dataGridClasses.DataGridColumn', parameters: function () { return [ 'String', true ]; }},
        'itemToLabel': { type: 'String', declaredBy: 'mx.controls.dataGridClasses.DataGridColumn', parameters: function () { return [ 'Object', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
mx.controls.dataGridClasses.DataGridColumn.prototype.ROYALE_COMPILE_FLAGS = 26;
