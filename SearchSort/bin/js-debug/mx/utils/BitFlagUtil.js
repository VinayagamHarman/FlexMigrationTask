/**
 * Generated by Apache Royale Compiler from mx/utils/BitFlagUtil.as
 * mx.utils.BitFlagUtil
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('mx.utils.BitFlagUtil');
/* Royale Dependency List: XML*/



/**
 * @constructor
 */
mx.utils.BitFlagUtil = function() {
  ;
};


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('mx.utils.BitFlagUtil', mx.utils.BitFlagUtil);


/**
 *  Returns true if all of the flags specified by <code>flagMask</code> are set. 
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 * @param {number} flags
 * @param {number} flagMask
 * @return {boolean}
 */
mx.utils.BitFlagUtil.isSet = function(flags, flagMask) {
  return flagMask == (flags & flagMask);
};


/**
 *  Sets the flags specified by <code>flagMask</code> according to <code>value</code>. 
 *  Returns the new bitflag.
 *  <code>flagMask</code> can be a combination of multiple flags.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 * @param {number} flags
 * @param {number} flagMask
 * @param {boolean} value
 * @return {number}
 */
mx.utils.BitFlagUtil.update = function(flags, flagMask, value) {
  if (value) {
    if ((flags & flagMask) == flagMask)
      return flags;
    flags |= flagMask;
  } else {
    if ((flags & flagMask) == 0)
      return flags;
    flags &= (~flagMask) >>> 0;
  }
  return flags;
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
mx.utils.BitFlagUtil.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'BitFlagUtil', qName: 'mx.utils.BitFlagUtil', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
mx.utils.BitFlagUtil.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    methods: function () {
      return {
        'BitFlagUtil': { type: '', declaredBy: 'mx.utils.BitFlagUtil'},
        '|isSet': { type: 'Boolean', declaredBy: 'mx.utils.BitFlagUtil', parameters: function () { return [ 'uint', false ,'uint', false ]; }},
        '|update': { type: 'uint', declaredBy: 'mx.utils.BitFlagUtil', parameters: function () { return [ 'uint', false ,'uint', false ,'Boolean', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
mx.utils.BitFlagUtil.prototype.ROYALE_COMPILE_FLAGS = 26;
