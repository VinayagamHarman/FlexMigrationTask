/**
 * Generated by Apache Royale Compiler from mx/events/ItemClickEvent.as
 * mx.events.ItemClickEvent
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('mx.events.ItemClickEvent');
/* Royale Dependency List: org.apache.royale.events.IRoyaleEvent,XML*/

goog.require('org.apache.royale.events.Event');



/**
 *  Constructor.
 *
 *  @asparam type The event type; indicates the action that caused the event.
 *
 *  @asparam bubbles Specifies whether the event can bubble
 *  up the display list hierarchy.
 *
 *  @asparam cancelable Specifies whether the behavior
 *  associated with the event can be prevented.
 *
 *  @asparam label The label of the associated navigation item.
 *
 *  @asparam index The index of the associated navigation item.
 *
 *  @asparam relatedObject The child object that generated the event.
 *
 *  @asparam item The item in the data provider for the associated navigation item.
 *
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Royale 0.9.4
 * @constructor
 * @extends {org.apache.royale.events.Event}
 * @param {string} type
 * @param {boolean=} bubbles
 * @param {boolean=} cancelable
 * @param {string=} label
 * @param {number=} index
 * @param {Object=} relatedObject
 * @param {Object=} item
 */
mx.events.ItemClickEvent = function(type, bubbles, cancelable, label, index, relatedObject, item) {
  bubbles = typeof bubbles !== 'undefined' ? bubbles : false;
  cancelable = typeof cancelable !== 'undefined' ? cancelable : false;
  label = typeof label !== 'undefined' ? label : null;
  index = typeof index !== 'undefined' ? index : -1;
  relatedObject = typeof relatedObject !== 'undefined' ? relatedObject : null;
  item = typeof item !== 'undefined' ? item : null;
  mx.events.ItemClickEvent.base(this, 'constructor', type, bubbles, cancelable);
  this.label = label;
  this.index = index;
  this.relatedObject = relatedObject;
  this.item = item;
};
goog.inherits(mx.events.ItemClickEvent, org.apache.royale.events.Event);


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('mx.events.ItemClickEvent', mx.events.ItemClickEvent);


/**
 * @export
 * @nocollapse
 * @const
 * @type {string}
 */
mx.events.ItemClickEvent.ITEM_CLICK = "itemClick";


/**
 * @export
 * @type {number}
 */
mx.events.ItemClickEvent.prototype.index = 0;


/**
 * @export
 * @type {Object}
 */
mx.events.ItemClickEvent.prototype.item;


/**
 * @export
 * @type {string}
 */
mx.events.ItemClickEvent.prototype.label;


/**
 * @export
 * @type {Object}
 */
mx.events.ItemClickEvent.prototype.relatedObject;


/**
 *  @asprivate
 * @export
 * @override
 */
mx.events.ItemClickEvent.prototype.cloneEvent = function() {
  return new mx.events.ItemClickEvent(this.type, this.bubbles, this.cancelable, this.label, this.index, this.relatedObject, this.item);
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
mx.events.ItemClickEvent.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'ItemClickEvent', qName: 'mx.events.ItemClickEvent', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
mx.events.ItemClickEvent.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        'index': { type: 'int', get_set: function (/** mx.events.ItemClickEvent */ inst, /** * */ v) {return v !== undefined ? inst.index = v : inst.index;}},
        'item': { type: 'Object', get_set: function (/** mx.events.ItemClickEvent */ inst, /** * */ v) {return v !== undefined ? inst.item = v : inst.item;}},
        'label': { type: 'String', get_set: function (/** mx.events.ItemClickEvent */ inst, /** * */ v) {return v !== undefined ? inst.label = v : inst.label;}},
        'relatedObject': { type: 'Object', get_set: function (/** mx.events.ItemClickEvent */ inst, /** * */ v) {return v !== undefined ? inst.relatedObject = v : inst.relatedObject;}}
      };
    },
    methods: function () {
      return {
        'ItemClickEvent': { type: '', declaredBy: 'mx.events.ItemClickEvent', parameters: function () { return [ 'String', false ,'Boolean', true ,'Boolean', true ,'String', true ,'int', true ,'Object', true ,'Object', true ]; }},
        'cloneEvent': { type: 'org.apache.royale.events.IRoyaleEvent', declaredBy: 'mx.events.ItemClickEvent'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
mx.events.ItemClickEvent.prototype.ROYALE_COMPILE_FLAGS = 26;
