/**
 * Generated by Apache Royale Compiler from org/apache/royale/collections/IHierarchicalData.as
 * org.apache.royale.collections.IHierarchicalData
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.collections.IHierarchicalData');
/* Royale Dependency List: */

goog.require('org.apache.royale.events.IEventDispatcher');



/**
 * @interface
 * @extends {org.apache.royale.events.IEventDispatcher}
 */
org.apache.royale.collections.IHierarchicalData = function() {
};


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.royale.collections.IHierarchicalData', org.apache.royale.collections.IHierarchicalData);
/**
 *  Returns <code>true</code> if the node can contain children.
 *
 *  <p>Nodes do not have to contain children for the method
 *  to return <code>true</code>.
 *  This method is useful in determining whether other
 *  nodes can be appended as children to the specified node.</p>
 *
 *  @asparam node The Object that defines the node.
 *
 *  @asreturn <code>true</code> if the node can contain children.
 *
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.0
 * @export
 * @param {Object} node
 * @return {boolean}
 */
org.apache.royale.collections.IHierarchicalData.prototype.canHaveChildren = function(node) {
};
/**
 *  Returns <code>true</code> if the node has children.
 *
 *  @asparam node The Object that defines the node.
 *
 *  @asreturn <code>true</code> if the node has children.
 *
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.0
 * @export
 * @param {Object} node
 * @return {boolean}
 */
org.apache.royale.collections.IHierarchicalData.prototype.hasChildren = function(node) {
};
/**
 *  Returns an Object representing the node's children.
 *
 *  @asparam node The Object that defines the node.
 *  If <code>null</code>, return a collection of top-level nodes.
 *
 *  @asreturn An Object containing the children nodes.
 *
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.0
 * @export
 * @param {Object} node
 * @return {Object}
 */
org.apache.royale.collections.IHierarchicalData.prototype.getChildren = function(node) {
};
/**
 *  Returns data from a node.
 *
 *  @asparam node The node Object from which to get the data.
 *
 *  @asreturn The requested data.
 *
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.0
 * @export
 * @param {Object} node
 * @return {Object}
 */
org.apache.royale.collections.IHierarchicalData.prototype.getData = function(node) {
};
/**
 * Returns the root data item.
 *
 * @asreturn The Object containing the root data item.
 *
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.0
 * @export
 * @return {Object}
 */
org.apache.royale.collections.IHierarchicalData.prototype.getRoot = function() {
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.collections.IHierarchicalData.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'IHierarchicalData', qName: 'org.apache.royale.collections.IHierarchicalData', kind: 'interface' }], interfaces: [org.apache.royale.events.IEventDispatcher] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.collections.IHierarchicalData.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    methods: function () {
      return {
        'canHaveChildren': { type: 'Boolean', declaredBy: 'org.apache.royale.collections.IHierarchicalData', parameters: function () { return [ 'Object', false ]; }},
        'hasChildren': { type: 'Boolean', declaredBy: 'org.apache.royale.collections.IHierarchicalData', parameters: function () { return [ 'Object', false ]; }},
        'getChildren': { type: 'Object', declaredBy: 'org.apache.royale.collections.IHierarchicalData', parameters: function () { return [ 'Object', false ]; }},
        'getData': { type: 'Object', declaredBy: 'org.apache.royale.collections.IHierarchicalData', parameters: function () { return [ 'Object', false ]; }},
        'getRoot': { type: 'Object', declaredBy: 'org.apache.royale.collections.IHierarchicalData'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.collections.IHierarchicalData.prototype.ROYALE_COMPILE_FLAGS = 10;
