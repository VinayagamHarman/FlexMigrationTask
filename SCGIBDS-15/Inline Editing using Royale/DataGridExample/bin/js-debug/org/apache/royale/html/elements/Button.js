/**
 * Generated by Apache Royale Compiler from org/apache/royale/html/elements/Button.as
 * org.apache.royale.html.elements.Button
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.html.elements.Button');
/* Royale Dependency List: org.apache.royale.core.WrappedHTMLElement,org.apache.royale.html.util.addElementToWrapper*/

goog.require('org.apache.royale.html.NodeElementBase');



/**
 *  constructor.
 *
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.0
 * @constructor
 * @extends {org.apache.royale.html.NodeElementBase}
 */
org.apache.royale.html.elements.Button = function() {
  org.apache.royale.html.elements.Button.base(this, 'constructor');
};
goog.inherits(org.apache.royale.html.elements.Button, org.apache.royale.html.NodeElementBase);


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.royale.html.elements.Button', org.apache.royale.html.elements.Button);


/**
 * @protected
 * @override
 */
org.apache.royale.html.elements.Button.prototype.createElement = function() {
  return org.apache.royale.html.util.addElementToWrapper(this, 'button');
};


org.apache.royale.html.elements.Button.prototype.get__org_apache_royale_html_elements_Button_button = function() {
  return this.element;
};


org.apache.royale.html.elements.Button.prototype.get__autofocus = function() {
  
  return this.org_apache_royale_html_elements_Button_button.autofocus;
};


org.apache.royale.html.elements.Button.prototype.set__autofocus = function(value) {
  
  this.org_apache_royale_html_elements_Button_button.autofocus = value;
};


org.apache.royale.html.elements.Button.prototype.get__disabled = function() {
  
  return this.org_apache_royale_html_elements_Button_button.disabled;
};


org.apache.royale.html.elements.Button.prototype.set__disabled = function(value) {
  
  this.org_apache_royale_html_elements_Button_button.disabled = value;
};


org.apache.royale.html.elements.Button.prototype.get__name = function() {
  return this.org_apache_royale_html_elements_Button_button.name;
};


org.apache.royale.html.elements.Button.prototype.set__name = function(value) {
  this.org_apache_royale_html_elements_Button_button.name = value;
};


org.apache.royale.html.elements.Button.prototype.get__type = function() {
  
  return this.org_apache_royale_html_elements_Button_button.type;
};


org.apache.royale.html.elements.Button.prototype.set__type = function(value) {
  
  this.org_apache_royale_html_elements_Button_button.type = value;
};


org.apache.royale.html.elements.Button.prototype.get__value = function() {
  
  return this.org_apache_royale_html_elements_Button_button.value;
};


org.apache.royale.html.elements.Button.prototype.set__value = function(value) {
  
  this.org_apache_royale_html_elements_Button_button.value = value;
};


Object.defineProperties(org.apache.royale.html.elements.Button.prototype, /** @lends {org.apache.royale.html.elements.Button.prototype} */ {
/**
  * @type {HTMLButtonElement} */
org_apache_royale_html_elements_Button_button: {
get: org.apache.royale.html.elements.Button.prototype.get__org_apache_royale_html_elements_Button_button},
/**
  * @export
  * @type {boolean} */
autofocus: {
get: org.apache.royale.html.elements.Button.prototype.get__autofocus,
set: org.apache.royale.html.elements.Button.prototype.set__autofocus},
/**
  * @export
  * @type {boolean} */
disabled: {
get: org.apache.royale.html.elements.Button.prototype.get__disabled,
set: org.apache.royale.html.elements.Button.prototype.set__disabled},
/**
  * @export
  * @type {string} */
name: {
get: org.apache.royale.html.elements.Button.prototype.get__name,
set: org.apache.royale.html.elements.Button.prototype.set__name},
/**
  * @export
  * @type {string} */
type: {
get: org.apache.royale.html.elements.Button.prototype.get__type,
set: org.apache.royale.html.elements.Button.prototype.set__type},
/**
  * @export
  * @type {string} */
value: {
get: org.apache.royale.html.elements.Button.prototype.get__value,
set: org.apache.royale.html.elements.Button.prototype.set__value}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.html.elements.Button.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'Button', qName: 'org.apache.royale.html.elements.Button', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.html.elements.Button.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'autofocus': { type: 'Boolean', access: 'readwrite', declaredBy: 'org.apache.royale.html.elements.Button'},
        'disabled': { type: 'Boolean', access: 'readwrite', declaredBy: 'org.apache.royale.html.elements.Button'},
        'name': { type: 'String', access: 'readwrite', declaredBy: 'org.apache.royale.html.elements.Button'},
        'type': { type: 'String', access: 'readwrite', declaredBy: 'org.apache.royale.html.elements.Button'},
        'value': { type: 'String', access: 'readwrite', declaredBy: 'org.apache.royale.html.elements.Button'}
      };
    },
    methods: function () {
      return {
        'Button': { type: '', declaredBy: 'org.apache.royale.html.elements.Button'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.html.elements.Button.prototype.ROYALE_COMPILE_FLAGS = 10;
